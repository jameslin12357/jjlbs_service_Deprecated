
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link href="//netdna.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="~/easyui/themes/default/easyui.css">
    <link rel="stylesheet" type="text/css" href="~/easyui/themes/icon.css">
    <link rel="stylesheet" type="text/css" href="~/easyui/demo/demo.css">
    <link rel="stylesheet" href="~/layui-v2.5.4/layui/css/layui.css" media="all">
    <link rel="stylesheet" href="~/css/site.css" />
    <style type="text/css">
        #container, html, body {
            height: 100%;
            margin: 0;
        }
    </style>

</head>
<body>
    <div id="header" class="flex sb pd-20 bb-lightblue">
        <div>JJLBS-SERVICE</div>
        <div>
            <select id="selectRegion" class="bn">
                <option value="all">内蒙古自治区     /     赤峰市     /     所有区</option>
                <option value="hsq">内蒙古自治区/赤峰市/红山区</option>
                <option value="ybsq">内蒙古自治区/赤峰市/元宝山区</option>
                <option value="ssq">内蒙古自治区/赤峰市/松山区</option>
                <option value="alkexq">内蒙古自治区/赤峰市/阿鲁科尔沁旗</option>
                <option value="blzq">内蒙古自治区/赤峰市/巴林左旗</option>
                <option value="blyq">内蒙古自治区/赤峰市/巴林右旗</option>
                <option value="lxx">内蒙古自治区/赤峰市/林西县</option>
                <option value="ksktq">内蒙古自治区/赤峰市/克什克腾旗</option>
                <option value="wntq">内蒙古自治区/赤峰市/翁牛特旗</option>
                <option value="klxq">内蒙古自治区/赤峰市/喀喇沁旗</option>
                <option value="ncx">内蒙古自治区/赤峰市/宁城县</option>
                <option value="ahq">内蒙古自治区/赤峰市/敖汉旗</option>
            </select>
        </div>

        <div>
            <button type="button" class="layui-btn layui-btn-primary layui-btn-radius">高德地图</button>
            <button type="button" class="layui-btn layui-btn-radius">ARCGIS</button>
        </div>
    </div>

    <div id="footer" class="flex">



    </div>

    <div class="c">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>



    <div id="container"></div>



    @*<script language="javascript" src="~/lib/jquery/dist/jquery.js"></script>*@
    <script type="text/javascript" src="~/easyui/jquery.min.js"></script>

    <script type="text/javascript" src="~/easyui/jquery.easyui.min.js"></script>
    <script language="javascript" src="https://webapi.amap.com/maps?v=1.4.15&key=5a757297a2ef60c6c50aa13e4fb8f311&plugin=Map3D,AMap.Scale,AMap.ControlBar"></script>
    <script src="~/layui-v2.5.4/layui/layui.js" charset="utf-8"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script language="javascript">
        var map = new AMap.Map("container", {
            zoom: 17,
            pitch: 50,
            showIndoorMap: false,
            showLabel: true,
            mapStyle: 'amap://styles/light',
            center: [118.950407, 42.273607],
            features: ['bg', 'point', 'road', 'building'],
            viewMode: '3D',
            layers: [
                new AMap.TileLayer({})
            ]
        });
        map.addControl(new AMap.Scale());
        map.addControl(new AMap.ControlBar({
            showZoomBar: false,
            showControlButton: true,
            position: {
                right: '10px',
                top: '10px'
            }
        }));


        function createTables(d, d2) {
            var htmlTable1 = '<table id="dg" style="width:70%;height:300px" data-options="fitColumns:true,rownumbers:false,singleSelect:true,autoRowHeight:false,pagination:true,pageSize:10"><thead><tr><th field="village_name" width="80" align="center">小区名称</th><th field="village_address" width="100" align="center">地址</th><th field="village_region" width="80" align="center">区域</th><th field="village_type" width="80" align="center">类型</th><th field="village_action" width="80" align="center">操作</th><th field="village_id" align="center" hidden="true">village_id</th><th field="village_lng" align="center" hidden="true">经度</th><th field="village_lat" align="center" hidden="true">纬度</th></tr></thead></table>';
            var htmlTB1 = '<div id="tb" class="flex sb aic" style="padding: 10px;"><span class="bb-lightblue pb-5px">小区信息</span><div class="flex aic"><input type="text" placeholder="输入小区名称检索" class="mr-10 pd-5px bd2-lightblue" /><i id="inputSearchIcon" class="fa fa-search cr-lightblue"></i><div class="mr-10"><i class="fa fa-file-o cr-lightblue"></i><span> 新建小区</span></div><div><i class="fa fa-download cr-lightblue"></i><span> 更新本地数据</span></div></div></div>';
            var htmlTable2 = '<table id="dg2" style="width:30%;height:300px" data-options="fitColumns:true,rownumbers:false,singleSelect:true,autoRowHeight:false,pagination:true,pageSize:10"><thead><tr><th field="building_name" width="80" align="center">楼宇号</th><th field="building_address" width="100" align="center">详细地址（蓝牌地址码)</th><th field="building_action" width="80" align="center">操作</th></tr></thead></table>';
            var htmlTB2 = '<div id="tb2" class="flex sb aic" style="padding: 10px;"><span class="bb-lightblue pb-5px">楼宇信息</span><div class="flex aic"><input type="text" placeholder="输入楼宇号检索" class="mr-10 pd-5px bd2-lightblue" /><i id="inputSearchIcon" class="fa fa-search cr-lightblue"></i><div class="mr-10"><i class="fa fa-file-o cr-lightblue"></i><span> 新建楼宇</span></div><div><i class="fa fa-download cr-lightblue"></i><span> 更新本地数据</span></div></div></div>';
            document.getElementById("footer").innerHTML += htmlTable1 + htmlTB1 + htmlTable2 + htmlTB2;

            (function ($) {
                function pagerFilter(data) {
                    if ($.isArray(data)) {	// is array
                        data = {
                            total: data.length,
                            rows: data
                        }
                    }
                    var target = this;
                    var dg = $(target);
                    var state = dg.data('datagrid');
                    var opts = dg.datagrid('options');
                    if (!state.allRows) {
                        state.allRows = (data.rows);
                    }
                    if (!opts.remoteSort && opts.sortName) {
                        var names = opts.sortName.split(',');
                        var orders = opts.sortOrder.split(',');
                        state.allRows.sort(function (r1, r2) {
                            var r = 0;
                            for (var i = 0; i < names.length; i++) {
                                var sn = names[i];
                                var so = orders[i];
                                var col = $(target).datagrid('getColumnOption', sn);
                                var sortFunc = col.sorter || function (a, b) {
                                    return a == b ? 0 : (a > b ? 1 : -1);
                                };
                                r = sortFunc(r1[sn], r2[sn]) * (so == 'asc' ? 1 : -1);
                                if (r != 0) {
                                    return r;
                                }
                            }
                            return r;
                        });
                    }
                    var start = (opts.pageNumber - 1) * parseInt(opts.pageSize);
                    var end = start + parseInt(opts.pageSize);
                    data.rows = state.allRows.slice(start, end);
                    return data;
                }

                var loadDataMethod = $.fn.datagrid.methods.loadData;
                var deleteRowMethod = $.fn.datagrid.methods.deleteRow;
                $.extend($.fn.datagrid.methods, {
                    clientPaging: function (jq) {
                        return jq.each(function () {
                            var dg = $(this);
                            var state = dg.data('datagrid');
                            var opts = state.options;
                            opts.loadFilter = pagerFilter;
                            var onBeforeLoad = opts.onBeforeLoad;
                            opts.onBeforeLoad = function (param) {
                                state.allRows = null;
                                return onBeforeLoad.call(this, param);
                            }
                            var pager = dg.datagrid('getPager');
                            pager.pagination({
                                onSelectPage: function (pageNum, pageSize) {
                                    opts.pageNumber = pageNum;
                                    opts.pageSize = pageSize;
                                    pager.pagination('refresh', {
                                        pageNumber: pageNum,
                                        pageSize: pageSize
                                    });
                                    dg.datagrid('loadData', state.allRows);
                                }
                            });
                            $(this).datagrid('loadData', state.data);
                            if (opts.url) {
                                $(this).datagrid('reload');
                            }
                        });
                    },
                    loadData: function (jq, data) {
                        jq.each(function () {
                            $(this).data('datagrid').allRows = null;
                        });
                        return loadDataMethod.call($.fn.datagrid.methods, jq, data);
                    },
                    deleteRow: function (jq, index) {
                        return jq.each(function () {
                            var row = $(this).datagrid('getRows')[index];
                            deleteRowMethod.call($.fn.datagrid.methods, $(this), index);
                            var state = $(this).data('datagrid');
                            if (state.options.loadFilter == pagerFilter) {
                                for (var i = 0; i < state.allRows.length; i++) {
                                    if (state.allRows[i] == row) {
                                        state.allRows.splice(i, 1);
                                        break;
                                    }
                                }
                                $(this).datagrid('loadData', state.allRows);
                            }
                        });
                    },
                    getAllRows: function (jq) {
                        return jq.data('datagrid').allRows;
                    }
                })
            })(jQuery);

            function getData(dt) {
                return dt;
            }

            $(function () {
                $('#dg').datagrid({ toolbar: "#tb" }).datagrid({ data: getData(d) }).datagrid({
                    onClickCell: function (index, field, value) {
                        if (field !== "village_action") {
                            console.log('clicked');
                        }

                        // extract record location and guid, relocate map to location, remove buildings table from dom,
                        // sned request to api to get related buildings in json string form and use it to build
                        // a new table and bind events to it


                    }
                }).datagrid('clientPaging').datagrid('highlightRow', 0);

                $('#dg2').datagrid({ toolbar: "#tb2" }).datagrid({ data: getData(d2) }).datagrid('clientPaging');
            });

        }

        function getPoiDetail(e) {
            var dataGuid = e.getAttribute("data-guid");
            $.ajax({
                type: "get",
                url: `./API/DetailsVillage?id=${dataGuid}`,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    htmlPoiDetail = `<div class="flex"><span>小区信息</span><button>x</button></div><div><span>小区名称</span><span>${data["ds"][0]["VILLAGE_NAME"]}</span></div><div><span>详细地址</span><span>${data["ds"][0]["VILLAGE_ADDRESS"]}</span></div><div><span>区域</span><span>${data["ds"][0]["VILLAGE_REGION"]}</span></div><div><span>类型</span><span>${data["ds"][0]["VILLAGE_TYPE"]}</span></div>`;
                    document.getElementsByClassName('modalSmall')[0].innerHTML += htmlPoiDetail;
                },
                error: function (item, err) {
                    console.log(err);
                }
            });
        }

        /* 地图/数据 */
        $.ajax({
            type: "get",
            url: "./API/Index?type=all",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                /* 边界 */
                var xq = data[0]["ds"];
                var l = data[1]["ds"];
                var rowsXQ = [];
                var rowsL = [];
                xq.forEach(function (XQ) {
                    if (XQ["VILLAGE_BOUNDS"] !== "null") {
                        new AMap.Polygon({
                            bubble: true,
                            fillOpacity: 0.4,
                            strokeWeight: 1,
                            path: JSON.parse(XQ["VILLAGE_BOUNDS"]),
                            map: map
                        });
                    }
                    rowsXQ.push({ village_name: XQ["VILLAGE_NAME"], village_address: XQ["VILLAGE_ADDRESS"], village_region: XQ["VILLAGE_REGION"], village_type: XQ["VILLAGE_TYPE"], village_action: `<i class="fa fa-eye mr-5" data-guid="${XQ["VILLAGE_ID"]}" onclick="getPoiDetail(this);"></i><i class="fa fa-edit mr-5"></i><i class="fa fa-trash-o"></i>`, village_lng: XQ["VILLAGE_LNG"], village_lat: XQ["VILLAGE_LAT"] });

                });
                l.forEach(function (L) {

                    rowsL.push({ building_name: L["BUILDING_NAME"], building_address: L["BUILDING_ADDRESS"], building_action: "<i class=\"fa fa-eye mr-5 \"></i><i class=\"fa fa-edit mr-5 \"></i><i class=\"fa fa-trash-o \"></i>" });

                });
                createTables(rowsXQ, rowsL);
                //createTableL(rowsL);
                // l.forEach(function (l2) {
                //    rowsL.push({ village_name: l2["BUILDING_NAME"], village_address: XQ["VILLAGE_ADDRESS"], village_region: XQ["VILLAGE_REGION"], village_type: XQ["VILLAGE_TYPE"] });

                //}




                //console.log(rowsXQ);
                //$('#dg').datagrid({
                //    data: rowsXQ
                //});

                /* 建筑物 */
                //var buildingLayer = new AMap.Buildings({ zIndex: 130, merge: false, sort: false, zooms: [3, 20] });
                //var areas = [];
                //var obj = data;
                //obj[0]["ds"].forEach(function (XQ) {

                //    if (XQ["VILLAGE_BOUNDS"] !== "null") {
                //        areas.push({ //围栏1
                //            //visible:false,//是否可见
                //            rejectTexture: true,//是否屏蔽自定义地图的纹理
                //            color1: 'ffffff00',//楼顶颜色
                //            color2: 'ffffcc00',//楼面颜色
                //            path: XQ["VILLAGE_BOUNDS"]
                //        });
                //    }
                //});
                //var options =
                //{
                //    hideWithoutStyle: false,//是否隐藏设定区域外的楼块
                //    areas: areas
                //};
                //buildingLayer.setStyle(options); //此配色优先级高于自定义mapStyle
                //map.setLayers([new AMap.TileLayer({}),], buildingLayer);

            },
            error: function (item, err) {
                console.log(err);
            }
        });

        /* 数据 */


    </script>

    <div class="modalSmall"></div>
</body>
</html>
