#pragma checksum "C:\Users\mac\Desktop\jjlbs_service\jjlbs_service\Views\Shared\_Layout.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "eb4644f06567bf98294245f33a97cdaea8f51ef3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared__Layout), @"mvc.1.0.view", @"/Views/Shared/_Layout.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Shared/_Layout.cshtml", typeof(AspNetCore.Views_Shared__Layout))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\mac\Desktop\jjlbs_service\jjlbs_service\Views\_ViewImports.cshtml"
using jjlbs_service;

#line default
#line hidden
#line 2 "C:\Users\mac\Desktop\jjlbs_service\jjlbs_service\Views\_ViewImports.cshtml"
using jjlbs_service.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"eb4644f06567bf98294245f33a97cdaea8f51ef3", @"/Views/Shared/_Layout.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"388978b18945ee3cd61e73c2f652e11d9e0d0638", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared__Layout : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/font-awesome-4.7.0/css/font-awesome.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/easyui/themes/default/easyui.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/easyui/themes/icon.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/easyui/demo/demo.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/layui-v2.5.4/layui/css/layui.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("media", new global::Microsoft.AspNetCore.Html.HtmlString("all"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/site.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "all", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "hsq", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "ybsq", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "ssq", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "alkexq", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "blzq", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "blyq", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "lxx", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "ksktq", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "wntq", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "klxq", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "ncx", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "ahq", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_22 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/javascript"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_23 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/easyui/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_24 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/easyui/jquery.easyui.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_25 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/layui-v2.5.4/layui/layui.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_26 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("charset", new global::Microsoft.AspNetCore.Html.HtmlString("utf-8"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_27 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/js/site.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 27, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html>\r\n");
            EndContext();
            BeginContext(27, 762, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eb4644f06567bf98294245f33a97cdaea8f51ef312962", async() => {
                BeginContext(33, 121, true);
                WriteLiteral("\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>");
                EndContext();
                BeginContext(155, 17, false);
#line 7 "C:\Users\mac\Desktop\jjlbs_service\jjlbs_service\Views\Shared\_Layout.cshtml"
      Write(ViewData["Title"]);

#line default
#line hidden
                EndContext();
                BeginContext(172, 14, true);
                WriteLiteral("</title>\r\n    ");
                EndContext();
                BeginContext(186, 76, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "eb4644f06567bf98294245f33a97cdaea8f51ef313832", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(262, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(270, 81, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "eb4644f06567bf98294245f33a97cdaea8f51ef315170", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(351, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(357, 71, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "eb4644f06567bf98294245f33a97cdaea8f51ef316591", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(428, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(434, 69, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "eb4644f06567bf98294245f33a97cdaea8f51ef318012", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(503, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(509, 77, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "eb4644f06567bf98294245f33a97cdaea8f51ef319433", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(586, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(592, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "eb4644f06567bf98294245f33a97cdaea8f51ef320854", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(639, 143, true);
                WriteLiteral("\r\n    <style type=\"text/css\">\r\n        #container, html, body {\r\n            height: 100%;\r\n            margin: 0;\r\n        }\r\n    </style>\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(789, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(791, 72038, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eb4644f06567bf98294245f33a97cdaea8f51ef323144", async() => {
                BeginContext(797, 176, true);
                WriteLiteral("\r\n    <div id=\"header\" class=\"flex sb pd-20 bb-lightblue\">\r\n        <div>JJLBS-SERVICE</div>\r\n        <div>\r\n            <select id=\"selectRegion\" class=\"bn\">\r\n                ");
                EndContext();
                BeginContext(973, 43, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eb4644f06567bf98294245f33a97cdaea8f51ef323718", async() => {
                    BeginContext(993, 14, true);
                    WriteLiteral("内蒙古自治区/赤峰市/所有区");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1016, 18, true);
                WriteLiteral("\r\n                ");
                EndContext();
                BeginContext(1034, 43, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eb4644f06567bf98294245f33a97cdaea8f51ef325208", async() => {
                    BeginContext(1054, 14, true);
                    WriteLiteral("内蒙古自治区/赤峰市/红山区");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_10.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1077, 18, true);
                WriteLiteral("\r\n                ");
                EndContext();
                BeginContext(1095, 45, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eb4644f06567bf98294245f33a97cdaea8f51ef326701", async() => {
                    BeginContext(1116, 15, true);
                    WriteLiteral("内蒙古自治区/赤峰市/元宝山区");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_11.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1140, 18, true);
                WriteLiteral("\r\n                ");
                EndContext();
                BeginContext(1158, 43, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eb4644f06567bf98294245f33a97cdaea8f51ef328195", async() => {
                    BeginContext(1178, 14, true);
                    WriteLiteral("内蒙古自治区/赤峰市/松山区");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_12.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1201, 18, true);
                WriteLiteral("\r\n                ");
                EndContext();
                BeginContext(1219, 49, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eb4644f06567bf98294245f33a97cdaea8f51ef329688", async() => {
                    BeginContext(1242, 17, true);
                    WriteLiteral("内蒙古自治区/赤峰市/阿鲁科尔沁旗");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_13.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1268, 18, true);
                WriteLiteral("\r\n                ");
                EndContext();
                BeginContext(1286, 45, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eb4644f06567bf98294245f33a97cdaea8f51ef331184", async() => {
                    BeginContext(1307, 15, true);
                    WriteLiteral("内蒙古自治区/赤峰市/巴林左旗");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_14.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1331, 18, true);
                WriteLiteral("\r\n                ");
                EndContext();
                BeginContext(1349, 45, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eb4644f06567bf98294245f33a97cdaea8f51ef332678", async() => {
                    BeginContext(1370, 15, true);
                    WriteLiteral("内蒙古自治区/赤峰市/巴林右旗");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_15.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_15);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1394, 18, true);
                WriteLiteral("\r\n                ");
                EndContext();
                BeginContext(1412, 43, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eb4644f06567bf98294245f33a97cdaea8f51ef334172", async() => {
                    BeginContext(1432, 14, true);
                    WriteLiteral("内蒙古自治区/赤峰市/林西县");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_16.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_16);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1455, 18, true);
                WriteLiteral("\r\n                ");
                EndContext();
                BeginContext(1473, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eb4644f06567bf98294245f33a97cdaea8f51ef335665", async() => {
                    BeginContext(1495, 16, true);
                    WriteLiteral("内蒙古自治区/赤峰市/克什克腾旗");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_17.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_17);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1520, 18, true);
                WriteLiteral("\r\n                ");
                EndContext();
                BeginContext(1538, 45, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eb4644f06567bf98294245f33a97cdaea8f51ef337160", async() => {
                    BeginContext(1559, 15, true);
                    WriteLiteral("内蒙古自治区/赤峰市/翁牛特旗");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_18.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_18);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1583, 18, true);
                WriteLiteral("\r\n                ");
                EndContext();
                BeginContext(1601, 45, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eb4644f06567bf98294245f33a97cdaea8f51ef338654", async() => {
                    BeginContext(1622, 15, true);
                    WriteLiteral("内蒙古自治区/赤峰市/喀喇沁旗");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_19.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_19);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1646, 18, true);
                WriteLiteral("\r\n                ");
                EndContext();
                BeginContext(1664, 43, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eb4644f06567bf98294245f33a97cdaea8f51ef340148", async() => {
                    BeginContext(1684, 14, true);
                    WriteLiteral("内蒙古自治区/赤峰市/宁城县");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_20.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_20);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1707, 18, true);
                WriteLiteral("\r\n                ");
                EndContext();
                BeginContext(1725, 43, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eb4644f06567bf98294245f33a97cdaea8f51ef341641", async() => {
                    BeginContext(1745, 14, true);
                    WriteLiteral("内蒙古自治区/赤峰市/敖汉旗");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_21.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_21);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1768, 406, true);
                WriteLiteral(@"
            </select>
        </div>

        <div>
            <button type=""button"" class=""layui-btn layui-btn-primary layui-btn-radius"">高德地图</button>
            <button type=""button"" class=""layui-btn layui-btn-radius"">ARCGIS</button>
        </div>
    </div>

    <div id=""footer"" class=""flex"">



    </div>

    <div class=""c"">
        <main role=""main"" class=""pb-3"">
            ");
                EndContext();
                BeginContext(2175, 12, false);
#line 58 "C:\Users\mac\Desktop\jjlbs_service\jjlbs_service\Views\Shared\_Layout.cshtml"
       Write(RenderBody());

#line default
#line hidden
                EndContext();
                BeginContext(2187, 75, true);
                WriteLiteral("\r\n        </main>\r\n    </div>\r\n\r\n\r\n\r\n    <div id=\"container\"></div>\r\n\r\n\r\n\r\n");
                EndContext();
                BeginContext(2345, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(2351, 69, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eb4644f06567bf98294245f33a97cdaea8f51ef344098", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_23);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(2420, 10, true);
                WriteLiteral("\r\n\r\n\r\n    ");
                EndContext();
                BeginContext(2430, 76, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eb4644f06567bf98294245f33a97cdaea8f51ef345452", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_24);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(2506, 162, true);
                WriteLiteral("\r\n    <script src=\"https://webapi.amap.com/maps?v=1.4.15&key=3cd18e86c129259575068fdb7f2522e0&plugin=AMap.PolyEditor,AMap.Scale,AMap.ControlBar,Map3D\"></script>\r\n");
                EndContext();
                BeginContext(2869, 4, true);
                WriteLiteral("    ");
                EndContext();
                BeginContext(2873, 69, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eb4644f06567bf98294245f33a97cdaea8f51ef347075", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_25);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_26);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(2942, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(2948, 62, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eb4644f06567bf98294245f33a97cdaea8f51ef348420", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_27.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_27);
#line 77 "C:\Users\mac\Desktop\jjlbs_service\jjlbs_service\Views\Shared\_Layout.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(3010, 69812, true);
                WriteLiteral(@"
    <script language=""javascript"">

        var form, layer;
        layui.use(['form', 'layedit', 'laydate', 'layer'], function () {
            form = layui.form
                , layer = layui.layer
                , layedit = layui.layedit
                , laydate = layui.laydate;
        });

        var map = new AMap.Map(""container"", {
            zoom: 17,
            pitch: 50,
            showIndoorMap: false,
            showLabel: true,
            mapStyle: 'amap://styles/light',
            center: [118.886856,42.257817],
            features: ['bg', 'point', 'road', 'building'],
            viewMode: '3D',
            layers: [
                new AMap.TileLayer({})
            ]
        });
        map.addControl(new AMap.Scale());
        map.addControl(new AMap.ControlBar({
            showZoomBar: false,
            showControlButton: true,
            position: {
                right: '10px',
                top: '10px'
            }
        }));
    // ");
                WriteLiteral(@"   var mouseTool = new AMap.MouseTool(map);
    //        mouseTool.on('draw', function(event) {
    //  // event.obj 为绘制出来的覆盖物对象
    //            console.log(event.obj);
    //})
        var mousetool;
        map.plugin([""AMap.MouseTool""], function () {
            mousetool = new AMap.MouseTool(map);
            mousetool.on('draw', function (event) {
                // event.obj 为绘制出来的覆盖物对象
                var polygon = event.obj;
                var bounds = polygon.getPath();
                var list = [];
                bounds.forEach(function (coord) {
                    var lng = coord[""lng""];
                    var lat = coord[""lat""];
                    list.push([lng,lat]);
                    
                })
                document.getElementsByTagName(""body"")[0].setAttribute(""data-currentvillage"", JSON.stringify(list));



            });
        });

              (function ($) {
                function pagerFilter(data) {
                    if ($.isArray(");
                WriteLiteral(@"data)) {	// is array
                        data = {
                            total: data.length,
                            rows: data
                        }
                    }
                    var target = this;
                    var dg = $(target);
                    var state = dg.data('datagrid');
                    var opts = dg.datagrid('options');
                    if (!state.allRows) {
                        state.allRows = (data.rows);
                    }
                    if (!opts.remoteSort && opts.sortName) {
                        var names = opts.sortName.split(',');
                        var orders = opts.sortOrder.split(',');
                        state.allRows.sort(function (r1, r2) {
                            var r = 0;
                            for (var i = 0; i < names.length; i++) {
                                var sn = names[i];
                                var so = orders[i];
                                var col = $(targe");
                WriteLiteral(@"t).datagrid('getColumnOption', sn);
                                var sortFunc = col.sorter || function (a, b) {
                                    return a == b ? 0 : (a > b ? 1 : -1);
                                };
                                r = sortFunc(r1[sn], r2[sn]) * (so == 'asc' ? 1 : -1);
                                if (r != 0) {
                                    return r;
                                }
                            }
                            return r;
                        });
                    }
                    var start = (opts.pageNumber - 1) * parseInt(opts.pageSize);
                    var end = start + parseInt(opts.pageSize);
                    data.rows = state.allRows.slice(start, end);
                    return data;
                }

                var loadDataMethod = $.fn.datagrid.methods.loadData;
                var deleteRowMethod = $.fn.datagrid.methods.deleteRow;
                $.extend($.fn.datagrid.methods, ");
                WriteLiteral(@"{
                    clientPaging: function (jq) {
                        return jq.each(function () {
                            var dg = $(this);
                            var state = dg.data('datagrid');
                            var opts = state.options;
                            opts.loadFilter = pagerFilter;
                            var onBeforeLoad = opts.onBeforeLoad;
                            opts.onBeforeLoad = function (param) {
                                state.allRows = null;
                                return onBeforeLoad.call(this, param);
                            }
                            var pager = dg.datagrid('getPager');
                            pager.pagination({
                                onSelectPage: function (pageNum, pageSize) {
                                    opts.pageNumber = pageNum;
                                    opts.pageSize = pageSize;
                                    pager.pagination('refresh', {
             ");
                WriteLiteral(@"                           pageNumber: pageNum,
                                        pageSize: pageSize
                                    });
                                    dg.datagrid('loadData', state.allRows);
                                }
                            });
                            $(this).datagrid('loadData', state.data);
                            if (opts.url) {
                                $(this).datagrid('reload');
                            }
                        });
                    },
                    loadData: function (jq, data) {
                        jq.each(function () {
                            $(this).data('datagrid').allRows = null;
                        });
                        return loadDataMethod.call($.fn.datagrid.methods, jq, data);
                    },
                    deleteRow: function (jq, index) {
                        return jq.each(function () {
                            var row = $(this).data");
                WriteLiteral(@"grid('getRows')[index];
                            deleteRowMethod.call($.fn.datagrid.methods, $(this), index);
                            var state = $(this).data('datagrid');
                            if (state.options.loadFilter == pagerFilter) {
                                for (var i = 0; i < state.allRows.length; i++) {
                                    if (state.allRows[i] == row) {
                                        state.allRows.splice(i, 1);
                                        break;
                                    }
                                }
                                $(this).datagrid('loadData', state.allRows);
                            }
                        });
                    },
                    getAllRows: function (jq) {
                        return jq.data('datagrid').allRows;
                    }
                })
            })(jQuery);

            function getData(dt) {
                return dt;
            }


");
                WriteLiteral(@"        function createTables(d, d2) {
            var htmlTable1 = '<table id=""dg"" style=""width:70%;height:300px"" data-options=""fitColumns:true,rownumbers:false,singleSelect:true,autoRowHeight:false,pagination:true,pageSize:10""><thead><tr><th field=""village_name"" width=""80"" align=""center"">小区名称</th><th field=""village_address"" width=""100"" align=""center"">地址</th><th field=""village_region"" width=""80"" align=""center"">区域</th><th field=""village_type"" width=""80"" align=""center"">类型</th><th field=""village_action"" width=""80"" align=""center"">操作</th><th field=""village_id"" align=""center"" hidden=""true"">village_id</th><th field=""village_lng"" align=""center"" hidden=""true"">经度</th><th field=""village_lat"" align=""center"" hidden=""true"">纬度</th></tr></thead></table>';
            var htmlTB1 = '<div id=""tb"" class=""flex sb aic"" style=""padding: 10px;""><span class=""bb-lightblue pb-5px"">小区信息</span><div class=""flex aic""><input type=""text"" placeholder=""输入小区名称检索"" class=""mr-10 pd-5px bd2-lightblue"" /><i id=""inputSearchIcon"" class=""fa fa-searc");
                WriteLiteral(@"h cr-lightblue""></i><div class=""mr-10""><i class=""fa fa-file-o cr-lightblue"" onclick=""newVillage(this)""></i><span> 新建小区</span></div><div><i class=""fa fa-download cr-lightblue""></i><span> 更新本地数据</span></div></div></div>';
            var htmlTable2 = '<table id=""dg2"" style=""width:30%;height:300px"" data-options=""fitColumns:true,rownumbers:false,singleSelect:true,autoRowHeight:false,pagination:true,pageSize:10""><thead><tr><th field=""building_name"" width=""80"" align=""center"">楼宇号</th><th field=""building_address"" width=""100"" align=""center"">详细地址（蓝牌地址码)</th><th field=""building_action"" width=""80"" align=""center"">操作</th></tr></thead></table>';
            var htmlTB2 = '<div id=""tb2"" class=""flex sb aic"" style=""padding: 10px;""><span class=""bb-lightblue pb-5px"">楼宇信息</span><div class=""flex aic""><input type=""text"" placeholder=""输入楼宇号检索"" class=""mr-10 pd-5px bd2-lightblue"" /><i id=""inputSearchIcon"" class=""fa fa-search cr-lightblue""></i><div class=""mr-10""><i class=""fa fa-file-o cr-lightblue"" onclick=""newBuilding(this)""></i><spa");
                WriteLiteral(@"n> 新建楼宇</span></div><div><i class=""fa fa-download cr-lightblue""></i><span> 更新本地数据</span></div></div></div>';
            document.getElementById(""footer"").innerHTML += htmlTable1 + htmlTB1 + htmlTable2 + htmlTB2;
            // { data: getData(d) }
            $(function () {
                $('#dg').datagrid({ toolbar: ""#tb"" }).datagrid('loadData',getData(d)).datagrid({
                    onClickRow: function (index, row) {
                        
                         for (var i = 0; i < document.getElementsByClassName(""modalSmall"").length; i++) {
                document.getElementsByClassName(""modalSmall"")[i].remove();
                        }
                        console.log('clicked first');
                        mousetool.close(true);
                        document.getElementsByTagName(""body"")[0].setAttribute(""data-currentIndex"", index);
                        var overlays = map.getAllOverlays(""polygon"");
                        overlays.forEach(function (overlay) {
       ");
                WriteLiteral(@"                     overlay.setOptions({
                                strokeColor: ""#2828FF""
                            });
                        });
                        var string = row[""village_action""];
                        var demo = document.createElement('div');
                        demo.innerHTML = string;
                        var lng = Number(demo.children[0].getAttribute(""data-lng""));
                        var lat = Number(demo.children[0].getAttribute(""data-lat""));
                        var bounds = demo.children[0].getAttribute(""data-bounds"");
                        var dataGuid = demo.children[0].getAttribute(""data-guid"");
                        map.setCenter([lng, lat]);
                        map.setZoom(18);
                        if (bounds !== ""null"") {
                            var overlays2 = map.getAllOverlays(""polygon"");
                            overlays2.forEach(function (overlay) {
                                var bounds2 = ""["";
     ");
                WriteLiteral(@"                           overlay.getPath().forEach(function (coord) {
                                    var lng = coord[""lng""];
                                    var lat = coord[""lat""];
                                    bounds2 += `[${String(lng)},${String(lat)}],`;
                                });
                                bounds2 = bounds2.slice(0, bounds2.length - 1);
                                bounds2 += ""]"";
                                if (bounds === bounds2) {
                                    overlay.setOptions({
                                        strokeColor: ""#D00000""
                                    });
                                }
                            });
                        }
                        //document.getElementsByClassName('panel')[1].remove();
                        $.ajax({
                            type: ""get"",
                            url: `./API/VillageBuildings?id=${dataGuid}`,
                            c");
                WriteLiteral(@"ontentType: ""application/json; charset=utf-8"",
                            dataType: ""json"",
                            success: function (data) {
                                rowsL = [];
                                data[""ds""].forEach(function (L) {
                                    rowsL.push({ building_name: L[""BUILDING_NAME""], building_address: L[""BUILDING_ADDRESS""], building_action: `<i class=\""fa fa-eye mr-5 \"" data-lng=""${L[""LNG""]}"" data-lat=""${L[""LAT""]}"" data-bounds=""${L[""BOUNDS""]}"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""getPoiDetail2(this);""></i><i class=\""fa fa-edit mr-5 \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""editPoi2(this);""></i><i class=\""fa fa-trash-o \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""deletePoi2(this);""></i>` });
                                });

                                $(function () {
                                    $('#dg2').datagrid('loadData',getData(rowsL));
                                });
                            },
               ");
                WriteLiteral(@"             error: function (item, err) {
                                console.log(err);
                            }
                        });
                        // get related buildings through api and use json to build table to right and attach events also remove old table to right
                        // extract record location and guid, relocate map to location, remove buildings table from dom,
                        // sned request to api to get related buildings in json string form and use it to build
                        // a new table and bind events to it
                    }
                }).datagrid('clientPaging').datagrid('highlightRow', 0);
                $('#dg2').datagrid({ toolbar: ""#tb2"" }).datagrid('loadData',getData(d2)).datagrid({
                    onClickRow: function (index, row) {
                         for (var i = 0; i < document.getElementsByClassName(""modalSmall"").length; i++) {
                document.getElementsByClassName(""modalSmall"")[i");
                WriteLiteral(@"].remove();
                        }
                        mousetool.close(true);

                        console.log('clicked');
                        document.getElementsByTagName(""body"")[0].setAttribute(""data-currentIndex"", index);
                        var markers = map.getAllOverlays(""marker"");
                        markers.forEach(function (marker) {
                            //marker.setOptions({
                            //    fillColor:'rgba(0,0,255,1)'
                            //});

                               var icon = new AMap.Icon({
                    size: new AMap.Size(15, 15),
                    image: './icons/circle.png', // Icon的图像
                    imageSize: new AMap.Size(15,15)
    });
                            marker.setIcon(icon);
                        });
                        var string = row[""building_action""];
                        var demo = document.createElement('div');
                        demo.innerHTML = string;
     ");
                WriteLiteral(@"                   var lng = Number(demo.children[0].getAttribute(""data-lng""));
                        var lat = Number(demo.children[0].getAttribute(""data-lat""));
                        //var markers2 = map.getAllOverlays(""circle"");
                        
                        markers.forEach(function (marker) {
                            if (marker.getPosition()[""lng""] == lng && marker.getPosition()[""lat""] == lat) {
                                   var icon = new AMap.Icon({
                    size: new AMap.Size(15, 15),
                    image: './icons/circle1.png', // Icon的图像
                    imageSize: new AMap.Size(15,15)
    });
                                    marker.setIcon(icon);
                                }
                            });
                        //markers2.forEach(function (marker) {
                        //     if (marker.getCenter()[""lng""] == lng && marker.getCenter()[""lat""] == lat) {
                        //             marker.setOpti");
                WriteLiteral(@"ons({
                        //        fillColor:'rgba(0,255,0,1)'
                        //    });
                        //            //marker.setIcon('https://a.amap.com/jsapi_demos/static/demo-center/icons/poi-marker-red.png');
                        //        }
                        //    });
                        map.setCenter([lng, lat]);
                        map.setZoom(18);
                    }
                }).datagrid('clientPaging').datagrid('highlightRow', 0);
            });
            switchRegion();
        }

         function drawPolygon () {
      mousetool.polygon({
        strokeColor: ""#FF33FF"", 
        strokeOpacity: 1,
        strokeWeight: 6,
        strokeOpacity: 0.2,
        fillColor: '#1791fc',
        fillOpacity: 0.4,
        // 线样式还支持 'dashed'
        strokeStyle: ""solid"",
        // strokeStyle是dashed时有效
        // strokeDasharray: [30,10],
      })

        }

        function addVillage(e) {
              var errors = document");
                WriteLiteral(@".getElementsByClassName(""clRedError"");
            for (var i = 0; i < errors.length; i++) {
                errors[i].remove();
            }
            var inputs = e.getElementsByTagName('input');
            var village_name = inputs[0].value;
            var village_address = inputs[1].value;
            var village_region = inputs[2].value;
            var village_type = inputs[3].value;
            var village_bounds = document.getElementsByTagName(""body"")[0].getAttribute(""data-currentvillage"");
            var village_x = String(JSON.parse(document.getElementsByTagName(""body"")[0].getAttribute(""data-currentvillage""))[0][0]);
            var village_y = String(JSON.parse(document.getElementsByTagName(""body"")[0].getAttribute(""data-currentvillage""))[0][1]);
            var village_lng = String(JSON.parse(document.getElementsByTagName(""body"")[0].getAttribute(""data-currentvillage""))[0][0]);
            var village_lat = String(JSON.parse(document.getElementsByTagName(""body"")[0].getAttribute(""d");
                WriteLiteral(@"ata-currentvillage""))[0][1]);
            var source = String(2);
            $.ajax({
                type: ""post"",
                url: `./API/CreateVillage`,
                data: { ""village_name"": village_name, ""village_address"": village_address, ""village_region"": village_region, ""village_type"": village_type, ""village_bounds"" : village_bounds, ""village_x"": village_x, ""village_y"": village_y, ""village_lng"": village_lng, ""village_lat"":village_lat, ""source"":source },
                dataType: ""json"",
                success: function (data) {
                    if (data.length !== 0) {
                        var div = document.createElement('div');
                        div.classList.add(""clRedError"");
                        data.forEach(function (error) {
                            div.innerHTML += `<p class=""mb-5"">${error}</p>`;
                        })
                        e.appendChild(div);
                    } else {
                        document.getElementsByClassName(""mo");
                WriteLiteral(@"dalSmall"")[0].remove();
                        mousetool.close(true);
                        layer.msg(""小区已添加"");
                        //$('#dg').datagrid('insertRow', {
                        //    index: 0,
                        //    row: {
                        //        village_name: village_name,
                        //        village_address: village_address,
                        //        village_region: village_region,
                        //        village_type: village_type
                        //    }
                        //});

   
                    }
                },
                error: function (item, err) {
                    console.log(err);
                }
            });
        }

        function newVillage(e) {
            // render a form and mousetool
        
              for (var i = 0; i < document.getElementsByClassName(""modalSmall"").length; i++) {
                document.getElementsByClassName(""modalSmall"")[i].remove()");
                WriteLiteral(@";
            }
            mousetool.close(true);
            drawPolygon();
              var container = document.createElement('div');
                        container.setAttribute(""class"", ""modalSmall"");
                        container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">新建小区</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div><form class=""layui-form layui-form-pane"" action="""" onsubmit=""event.preventDefault();addVillage(this);"">
       <div class=""layui-form-item"">
        <label class=""layui-form-label"">小区名称</label>
        <div class=""layui-input-inline"">
          <input type=""text"" name=""village_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" >
        </div>
      </div>
      <div class=""layui-form-item"">
        <label class=""layui-form-label"">详细地址</label>
        <div class=""layui-input-inline"">
          <input type=""text"" na");
                WriteLiteral(@"me=""village_address"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" >
        </div>
      </div>
      <div class=""layui-form-item"">
        <label class=""layui-form-label"">区域</label>
        <div class=""layui-input-inline"">
          <input type=""text"" name=""village_region"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" >
        </div>
      </div>
      <div class=""layui-form-item"">
        <label class=""layui-form-label"">类型</label>
        <div class=""layui-input-inline"">
          <input type=""text"" name=""village_type"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" >
        </div>
      </div>
   

<div class=""layui-form-item"">
        <div class=""layui-input-block"">
          <button class=""layui-btn layui-btn-normal fr"" lay-submit="""" lay-filter=""demo1"">保存</button>
        </div>
      </div>
      </div>

</form>`;
                        //htmlPoiDetail = `<div class=""modalSmall"">");
                WriteLiteral(@"<div class=""flex""><span>小区信息</span><button>x</button></div><div><span>小区名称</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div><span>详细地址</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div><span>区域</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div><span>类型</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div></div>`;
                        document.getElementsByTagName(""body"")[0].appendChild(container);
                        form.render();

              
        }


        
        function addBuilding(e) {
              var errors = document.getElementsByClassName(""clRedError"");
            for (var i = 0; i < errors.length; i++) {
                errors[i].remove();
            }
            var inputs = e.getElementsByTagName('input');
            var building_number = inputs[0].value;
            var building_name = inputs[1].value;
            var building_address = inputs[2].value;
            var building_region = inputs[3].value;
      ");
                WriteLiteral(@"      var building_type = inputs[4].value;
            var building_bounds = document.getElementsByTagName(""body"")[0].getAttribute(""data-currentvillage"");
            var building_x = String(JSON.parse(document.getElementsByTagName(""body"")[0].getAttribute(""data-currentvillage""))[0][0]);
            var building_y = String(JSON.parse(document.getElementsByTagName(""body"")[0].getAttribute(""data-currentvillage""))[0][1]);
            var building_lng = String(JSON.parse(document.getElementsByTagName(""body"")[0].getAttribute(""data-currentvillage""))[0][0]);
            var building_lat = String(JSON.parse(document.getElementsByTagName(""body"")[0].getAttribute(""data-currentvillage""))[0][1]);
            var source = String(2);
            $.ajax({
                type: ""post"",
                url: `./API/CreateBuilding`,
                data: { ""building_number"": building_number, ""building_name"": building_name, ""building_address"": building_address, ""building_region"": building_region, ""building_type"": building");
                WriteLiteral(@"_type, ""building_bounds"" : building_bounds, ""building_x"": building_x, ""building_y"": building_y, ""building_lng"": building_lng, ""building_lat"":building_lat, ""source"":source },
                dataType: ""json"",
                success: function (data) {
                    if (data.length !== 0) {
                        var div = document.createElement('div');
                        div.classList.add(""clRedError"");
                        data.forEach(function (error) {
                            div.innerHTML += `<p class=""mb-5"">${error}</p>`;
                        })
                        e.appendChild(div);
                    } else {
                        document.getElementsByClassName(""modalSmall"")[0].remove();
                        mousetool.close(true);
                        layer.msg(""楼宇已添加"");
                        //$('#dg').datagrid('insertRow', {
                        //    index: 0,
                        //    row: {
                        //        village_name");
                WriteLiteral(@": village_name,
                        //        village_address: village_address,
                        //        village_region: village_region,
                        //        village_type: village_type
                        //    }
                        //});

   
                    }
                },
                error: function (item, err) {
                    console.log(err);
                }
            });
        }

        function newBuilding(e) {
            // render a form and mousetool
            
              for (var i = 0; i < document.getElementsByClassName(""modalSmall"").length; i++) {
                document.getElementsByClassName(""modalSmall"")[i].remove();
            }
            mousetool.close(true);
            drawPolygon();
              var container = document.createElement('div');
                        container.setAttribute(""class"", ""modalSmall"");
                        container.innerHTML += `<div class=""flex sb mb-10""><span c");
                WriteLiteral(@"lass=""bb-lightblue"">新建楼宇</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div><form class=""layui-form layui-form-pane"" action="""" onsubmit=""event.preventDefault();addBuilding(this);"">
       <div class=""layui-form-item"">
        <label class=""layui-form-label"">楼宇号码</label>
        <div class=""layui-input-inline"">
          <input type=""text"" name=""building_number"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" >
        </div>
      </div>
  <div class=""layui-form-item"">
        <label class=""layui-form-label"">楼宇名称</label>
        <div class=""layui-input-inline"">
          <input type=""text"" name=""building_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" >
        </div>
      </div>
      <div class=""layui-form-item"">
        <label class=""layui-form-label"">详细地址</label>
        <div class=""layui-input-inline"">
          <input type=""text"" name=");
                WriteLiteral(@"""building_address"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" >
        </div>
      </div>
      <div class=""layui-form-item"">
        <label class=""layui-form-label"">区域</label>
        <div class=""layui-input-inline"">
          <input type=""text"" name=""building_region"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" >
        </div>
      </div>
      <div class=""layui-form-item"">
        <label class=""layui-form-label"">类型</label>
        <div class=""layui-input-inline"">
          <input type=""text"" name=""building_type"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" >
        </div>
      </div>
   

<div class=""layui-form-item"">
        <div class=""layui-input-block"">
          <button class=""layui-btn layui-btn-normal fr"" lay-submit="""" lay-filter=""demo1"">保存</button>
        </div>
      </div>
      </div>

</form>`;
                        //htmlPoiDetail = `<div class=""modalSmall"">");
                WriteLiteral(@"<div class=""flex""><span>小区信息</span><button>x</button></div><div><span>小区名称</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div><span>详细地址</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div><span>区域</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div><span>类型</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div></div>`;
                        document.getElementsByTagName(""body"")[0].appendChild(container);
                        form.render();

              
        }

        function getPoiDetail(e) {
            setTimeout(function(){   var dataGuid = e.getAttribute(""data-guid"");
            $.ajax({
                type: ""get"",
                url: `./API/DetailsVillage?id=${dataGuid}`,
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                success: function (data) {
                    var container = document.createElement('div');
                    container.setAttribute(""class"", ""modal");
                WriteLiteral(@"Small"");
                    container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">小区信息</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div><div class=""mb-10""><span class=""mr-5 bold"">小区名称:</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">详细地址:</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">区域:</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">类型:</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div>`;
                    //htmlPoiDetail = `<div class=""modalSmall""><div class=""flex""><span>小区信息</span><button>x</button></div><div><span>小区名称</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div><span>详细地址</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div><span>区域</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></di");
                WriteLiteral(@"v><div><span>类型</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div></div>`;
                    document.getElementsByTagName(""body"")[0].appendChild(container);
                },
                error: function (item, err) {
                    console.log(err);
                }
            }); }, 5000);
          
          
        }

        function getPoiDetail2(e) {
                    setTimeout(function(){       console.log('clicked second');
            var dataGuid = e.getAttribute(""data-guid"");
            $.ajax({
                type: ""get"",
                url: `./API/DetailsBuilding?id=${dataGuid}`,
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                success: function (data) {
                    var container = document.createElement('div');
                    container.setAttribute(""class"", ""modalSmall"");
                    container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue""");
                WriteLiteral(@">楼宇信息</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div><div class=""mb-10""><span class=""mr-5 bold"">楼宇名称:</span><span>${data[""ds""][0][""BUILDING_NAME""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">详细地址:</span><span>${data[""ds""][0][""BUILDING_ADDRESS""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">区域:</span><span>${data[""ds""][0][""REGION""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">类型:</span><span>${data[""ds""][0][""TYPE""]}</span></div>`;
                    //htmlPoiDetail = `<div class=""modalSmall""><div class=""flex""><span>小区信息</span><button>x</button></div><div><span>小区名称</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div><span>详细地址</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div><span>区域</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div><span>类型</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div></div>`;
                    document.getElemen");
                WriteLiteral(@"tsByTagName(""body"")[0].appendChild(container);
                },
                error: function (item, err) {
                    console.log(err);
                }
            }); }, 5000);
      
        }

        function editPoiNoBounds(e) {
            var errors = document.getElementsByClassName(""clRedError"");
            for (var i = 0; i < errors.length; i++) {
                errors[i].remove();
            }
            var inputs = e.getElementsByTagName('input');
            var village_name = inputs[0].value;
            var village_address = inputs[1].value;
            var village_region = inputs[2].value;
            var village_type = inputs[3].value;
            var dataGuid = e.getAttribute(""data-guid"");
            $.ajax({
                type: ""post"",
                url: `./API/EditVillageNoBounds?id=${dataGuid}`,
                data: { ""village_name"": village_name, ""village_address"": village_address, ""village_region"": village_region, ""village_type"": village_");
                WriteLiteral(@"type },
                dataType: ""json"",
                success: function (data) {
                    if (data.length !== 0) {
                        var div = document.createElement('div');
                        div.classList.add(""clRedError"");
                        data.forEach(function (error) {
                            div.innerHTML += `<p class=""mb-5"">${error}</p>`;
                        })
                        e.appendChild(div);
                    } else {
                        document.getElementsByClassName(""modalSmall"")[0].remove();
                        layer.msg(""小区已编辑"");
                        $('#dg').datagrid('updateRow', {
                            index: document.getElementsByTagName(""body"")[0].getAttribute(""data-currentindex""),
                            row: {
                                village_name: village_name,
                                village_address: village_address,
                                village_region: village_region,
");
                WriteLiteral(@"                                village_type: village_type
                            }
                        });
                    }
                },
                error: function (item, err) {
                    console.log(err);
                }
            });

        }


        function editPoiBounds(e) {
            var errors = document.getElementsByClassName(""clRedError"");
            for (var i = 0; i < errors.length; i++) {
                errors[i].remove();
            }
            var inputs = e.getElementsByTagName('input');
            var village_name = inputs[0].value;
            var village_address = inputs[1].value;
            var village_region = inputs[2].value;
            var village_type = inputs[3].value;
            var polygon;
            var overlays = map.getAllOverlays(""polygon"");
            overlays.forEach(function (overlay) {
                if (overlay.getOptions()[""strokeColor""] === ""#D00000"") {
                    polygon = overl");
                WriteLiteral(@"ay;
                }
            });
            village_bounds = ""["";
            polygon.getPath().forEach(function (coord) {
                village_bounds += `[${String(coord[""lng""])},${String(coord[""lat""])}],`;
            });
            village_bounds = village_bounds.slice(0, village_bounds.length - 1);
            village_bounds += ""]"";
            var dataGuid = e.getAttribute(""data-guid"");
           
            $.ajax({
                type: ""post"",
                url: `./API/EditVillageBounds?id=${dataGuid}`,
                data: { ""village_name"": village_name, ""village_address"": village_address, ""village_region"": village_region, ""village_type"": village_type, ""village_bounds"": village_bounds},
                dataType: ""json"",
                success: function (data) {
                    if (data.length !== 0) {
                        var div = document.createElement('div');
                        div.classList.add(""clRedError"");
                        data.forEach(fun");
                WriteLiteral(@"ction (error) {
                            div.innerHTML += `<p class=""mb-5"">${error}</p>`;
                        })
                        e.appendChild(div);
                    } else {
                        document.getElementsByClassName(""modalSmall"")[0].remove();
                        layer.msg(""小区已编辑"");
                        $('#dg').datagrid('updateRow',{
	                    index: document.getElementsByTagName(""body"")[0].getAttribute(""data-currentindex""),
	row: {
		village_name: village_name,
        village_address: village_address,
        village_region: village_region,
        village_type: village_type
	}
});
                    }

                },
                error: function (item, err) {
                    console.log(err);
                }
            });

        }

        
        function editPoiBuilding(e) {
            var errors = document.getElementsByClassName(""clRedError"");
            for (var i = 0; i < errors.length; i++) {
       ");
                WriteLiteral(@"         errors[i].remove();
            }
            var inputs = e.getElementsByTagName('input');
            var building_name = inputs[0].value;
            var building_address = inputs[1].value;
            var dataGuid = e.getAttribute(""data-guid"");
            $.ajax({
                type: ""post"",
                url: `./API/EditBuilding?id=${dataGuid}`,
                data: { ""building_name"": building_name, ""building_address"": building_address },
                dataType: ""json"",
                success: function (data) {
                    if (data.length !== 0) {
                        var div = document.createElement('div');
                        div.classList.add(""clRedError"");
                        data.forEach(function (error) {
                            div.innerHTML += `<p class=""mb-5"">${error}</p>`;
                        })
                        e.appendChild(div);
                    } else {
                        document.getElementsByClassName(""modalSm");
                WriteLiteral(@"all"")[0].remove();
                        layer.msg(""楼宇已编辑"");
                        $('#dg2').datagrid('updateRow', {
                            index: document.getElementsByTagName(""body"")[0].getAttribute(""data-currentindex""),
                            row: {
                                building_name: building_name,
                                building_address: building_address
                            }
                        });
                }
                },
                error: function (item, err) {
                    console.log(err);
                }
            });

        }

        function editPoi(e) {
            setTimeout(function(){ var dataGuid = e.getAttribute(""data-guid"");
            $.ajax({
                type: ""get"",
                url: `./API/DetailsVillage?id=${dataGuid}`,
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                success: function (data) {
                 ");
                WriteLiteral(@"   if (data[""ds""][0][""VILLAGE_BOUNDS""] == ""null"") {
                        var container = document.createElement('div');
                        container.setAttribute(""class"", ""modalSmall"");
                        container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">编辑小区信息</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div><form class=""layui-form layui-form-pane"" action="""" onsubmit=""event.preventDefault();editPoiNoBounds(this);"" data-guid=${dataGuid}>
       <div class=""layui-form-item"">
        <label class=""layui-form-label"">小区名称</label>
        <div class=""layui-input-inline"">
          <input type=""text"" name=""village_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""VILLAGE_NAME""]}"">
        </div>
      </div>
      <div class=""layui-form-item"">
        <label class=""layui-form-label"">详细地址</label>
        <div class=""lay");
                WriteLiteral(@"ui-input-inline"">
          <input type=""text"" name=""village_address"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""VILLAGE_ADDRESS""]}"">
        </div>
      </div>
      <div class=""layui-form-item"">
        <label class=""layui-form-label"">区域</label>
        <div class=""layui-input-inline"">
          <input type=""text"" name=""village_region"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""VILLAGE_REGION""]}"">
        </div>
      </div>
      <div class=""layui-form-item"">
        <label class=""layui-form-label"">类型</label>
        <div class=""layui-input-inline"">
          <input type=""text"" name=""village_type"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""VILLAGE_TYPE""]}"">
        </div>
      </div>
      <!--<div class=""layui-form-item"">
        <label class=""layui-form-label"">区域</label>
        <div class=""layui-input-block");
                WriteLiteral(@""">
          <select name=""village_region"" lay-filter=""aihao"">
            <option value=""hsq"">内蒙古自治区/赤峰市/红山区</option>
            <option value=""ybsq"">内蒙古自治区/赤峰市/元宝山区</option>
            <option value=""ssq"">内蒙古自治区/赤峰市/松山区/option>
            <option value=""alkexq"">内蒙古自治区/赤峰市/阿鲁科尔沁旗</option>
            <option value=""blzq"">内蒙古自治区/赤峰市/巴林左旗</option>
            <option value=""blyq"">内蒙古自治区/赤峰市/巴林右旗</option>
            <option value=""lxx"">内蒙古自治区/赤峰市/林西县</option>
            <option value=""ksktq"">内蒙古自治区/赤峰市/克什克腾旗</option>
            <option value=""wntq"">内蒙古自治区/赤峰市/翁牛特旗</option>
            <option value=""klxq"">内蒙古自治区/赤峰市/喀喇沁旗</option>
            <option value=""ahq"">内蒙古自治区/赤峰市/敖汉旗</option>
          </select>
        </div>
      </div>
     <div class=""layui-form-item"">
        <label class=""layui-form-label"">类型</label>
        <div class=""layui-input-block"">
          <select name=""village_type"" lay-filter=""aihao"">
            <option value=""zzxq"">商务住宅;住宅区;住宅小区</option>
          </selec");
                WriteLiteral(@"t>
        </div>
      </div>-->

<div class=""layui-form-item"">
        <div class=""layui-input-block"">
          <button class=""layui-btn layui-btn-normal fr"" lay-submit="""" lay-filter=""demo1"">保存</button>
        </div>
      </div>
      </div>

</form>`;
                        //htmlPoiDetail = `<div class=""modalSmall""><div class=""flex""><span>小区信息</span><button>x</button></div><div><span>小区名称</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div><span>详细地址</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div><span>区域</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div><span>类型</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div></div>`;
                        document.getElementsByTagName(""body"")[0].appendChild(container);
                        form.render();
                         console.log('clicked second');
                    } else {
                        //var polygon;
                        //var overlays = map.getAllOverlays(""polygon");
                WriteLiteral(@""");
                        //overlays.forEach(function (overlay) {
                        //    var bounds2 = ""["";
                        //    overlay.getPath().forEach(function (coord) {
                        //        var lng = coord[""lng""];
                        //        var lat = coord[""lat""];
                        //        bounds2 += `[${String(lng)},${String(lat)}],`;
                        //    });
                        //    bounds2 = bounds2.slice(0, bounds2.length - 1);
                        //    bounds2 += ""]"";
                        //    if (data[""ds""][0][""VILLAGE_BOUNDS""] === bounds2) {
                        //        polygon = overlay;
                        //    }
                        //});
                        //console.log(polygon);
                        var container = document.createElement('div');
                        container.setAttribute(""class"", ""modalSmall"");
                        container.innerHTML += `<div class=""flex sb mb-10""");
                WriteLiteral(@"><span class=""bb-lightblue"">编辑小区信息</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div><form class=""layui-form layui-form-pane"" action="""" onsubmit=""event.preventDefault();editPoiBounds(this);"" data-guid=${dataGuid}>
       <div class=""layui-form-item"">
        <label class=""layui-form-label"">小区名称</label>
        <div class=""layui-input-inline"">
          <input type=""text"" name=""village_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""VILLAGE_NAME""]}"">
        </div>
      </div>
      <div class=""layui-form-item"">
        <label class=""layui-form-label"">详细地址</label>
        <div class=""layui-input-inline"">
          <input type=""text"" name=""village_address"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""VILLAGE_ADDRESS""]}"">
        </div>
      </div>
      <div class=""layui-form-item"">
        <l");
                WriteLiteral(@"abel class=""layui-form-label"">区域</label>
        <div class=""layui-input-inline"">
          <input type=""text"" name=""village_region"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""VILLAGE_REGION""]}"">
        </div>
      </div>
      <div class=""layui-form-item"">
        <label class=""layui-form-label"">类型</label>
        <div class=""layui-input-inline"">
          <input type=""text"" name=""village_type"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""VILLAGE_TYPE""]}"">
        </div>
      </div>
       <!--<div class=""layui-form-item"">
        <label class=""layui-form-label"">开关-默认关</label>
        <div class=""layui-input-block"">
          <input type=""checkbox"" name=""close"" lay-skin=""switch"" lay-text=""ON|OFF"" lay-filter=""switch1"">
        </div>
      </div>-->

<div class=""layui-form-item"">
        <div class=""layui-input-block"">
          <button class=""layui-btn layui-btn-normal ");
                WriteLiteral(@"fr"" lay-submit="""" lay-filter=""demo1"">保存</button>
        </div>
      </div>
      </div>

</form>`;
                        //htmlPoiDetail = `<div class=""modalSmall""><div class=""flex""><span>小区信息</span><button>x</button></div><div><span>小区名称</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div><span>详细地址</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div><span>区域</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div><span>类型</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div></div>`;
                        document.getElementsByTagName(""body"")[0].appendChild(container);
                        form.render();
                         console.log('clicked second');
                        //form.on('switch(switch1)', function (data) {
                        //    console.log(polygon);
                        //    if (data.elem.checked) {

                        //    } else {
                        //    }

                        //});

          ");
                WriteLiteral(@"          }
                },
                error: function (item, err) {

                    console.log(err);
                }
            }); }, 5000);
            

        }

        function editPoi2(e) {
             setTimeout(function(){             var dataGuid = e.getAttribute(""data-guid"");
            $.ajax({
                type: ""get"",
                url: `./API/DetailsBuilding?id=${dataGuid}`,
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                success: function (data) {
                        var container = document.createElement('div');
                        container.setAttribute(""class"", ""modalSmall"");
                        container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">编辑楼宇信息</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div><form class=""layui-form layui-form-pane"" action="""" onsu");
                WriteLiteral(@"bmit=""event.preventDefault();editPoiBuilding(this);"" data-guid=${dataGuid}>
       <div class=""layui-form-item"">
        <label class=""layui-form-label"">楼宇名称</label>
        <div class=""layui-input-inline"">
          <input type=""text"" name=""building_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""BUILDING_NAME""]}"">
        </div>
      </div>
      <div class=""layui-form-item"">
        <label class=""layui-form-label"">详细地址</label>
        <div class=""layui-input-inline"">
          <input type=""text"" name=""building_address"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""BUILDING_ADDRESS""]}"">
        </div>
      </div>

    

<div class=""layui-form-item"">
        <div class=""layui-input-block"">
          <button class=""layui-btn layui-btn-normal fr"" lay-submit="""" lay-filter=""demo1"">保存</button>
        </div>
      </div>
      </div>

</form>`;
                        //h");
                WriteLiteral(@"tmlPoiDetail = `<div class=""modalSmall""><div class=""flex""><span>小区信息</span><button>x</button></div><div><span>小区名称</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div><span>详细地址</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div><span>区域</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div><span>类型</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div></div>`;
                        document.getElementsByTagName(""body"")[0].appendChild(container);
                        form.render();
                        //form.on('switch(switch1)', function (data) {
                        //    console.log(polygon);
                        //    if (data.elem.checked) {

                        //    } else {
                        //    }

                        //});

                    },
                
                error: function (item, err) {

                    console.log(err);
                }
            }); }, 5000);

        }

          ");
                WriteLiteral(@"      function deletePoiFinal(e) {
            var dataGuid = e.getAttribute(""data-guid"");
             $.ajax({
                type: ""post"",
                url: `./API/DeleteVillage?id=${dataGuid}`,
                dataType: ""json"",
                success: function (data) {
                    if (data.length !== 0) {
                        console.log('error');
                    } else {
                        document.getElementsByClassName(""modalSmall"")[0].remove();
                        layer.msg(""小区已删除"");
                        var index = document.getElementsByTagName(""body"")[0].getAttribute(""data-currentindex"");
                              $('#dg').datagrid('deleteRow',index);

                    }

                },
                error: function (item, err) {
                    console.log(err);
                }
            });
        }

               function deletePoiFinal2(e) {
            var dataGuid = e.getAttribute(""data-guid"");
             $.ajax");
                WriteLiteral(@"({
                type: ""post"",
                url: `./API/DeleteBuilding?id=${dataGuid}`,
                dataType: ""json"",
                success: function (data) {
                    if (data.length !== 0) {
                        console.log('error');
                    } else {
                        document.getElementsByClassName(""modalSmall"")[0].remove();
                        layer.msg(""楼宇已删除"");
                        var index = document.getElementsByTagName(""body"")[0].getAttribute(""data-currentindex"");
                              $('#dg2').datagrid('deleteRow',index);
                    }

                },
                error: function (item, err) {
                    console.log(err);
                }
            });
        }

        //function boundsToggle(e) {
        //    console.log('w');
        //    if (e.checked) {
        //        console.log('checked');
        //    } else {
        //        console.log('unchecked');
        //    }
  ");
                WriteLiteral(@"      //}
        function deletePoi(e) {
            setTimeout(function () {
                var dataGuid = e.getAttribute(""data-guid"");
                var container = document.createElement('div');
                container.setAttribute(""class"", ""modalSmall"");
                container.classList.add(""modalCentered"");
                container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">删除小区</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div>
                <div class=""mb-15 tc"">确定删除小区?</div><div class=""tr""><button type=""button"" class=""layui-btn layui-btn-danger"" data-guid=${dataGuid} onclick=""deletePoiFinal(this);"">删除</button></div></div>`;
                document.getElementsByTagName(""body"")[0].appendChild(container);
                console.log('clicked second');
            }, 5000);
            
        }
               

        function deletePoi2(e) {
               setTi");
                WriteLiteral(@"meout(function(){   var dataGuid = e.getAttribute(""data-guid"");
            var container = document.createElement('div');
            container.setAttribute(""class"", ""modalSmall"");
            container.classList.add(""modalCentered"");
            container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">删除楼宇</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div>
                <div class=""mb-15 tc"">确定删除楼宇?</div><div class=""tr""><button type=""button"" class=""layui-btn layui-btn-danger"" data-guid=${dataGuid} onclick=""deletePoiFinal2(this);"">删除</button></div></div>`;
            document.getElementsByTagName(""body"")[0].appendChild(container); }, 5000);
          
        }

        function openPois(e) {
            e.classList.remove(""layui-btn-primary"");
            e.classList.add(""layui-btn-normal"");
            e.innerHTML += `<i class=""fa fa-check""></i>`;
            e.setAttribute(""disabled");
                WriteLiteral(@""", true);
            var sibling = e.nextSibling;
            sibling.classList.remove(""layui-btn-normal"");
            sibling.classList.add(""layui-btn-primary"");
            sibling.innerHTML = `否`;
            sibling.removeAttribute(""disabled"");
            var overlays = map.getAllOverlays(""polygon"");
            console.log(overlays);
            overlays.forEach(function (overlay) {
                overlay.show();
            });
        }

        function closePois(e) {
            e.classList.remove(""layui-btn-primary"");
            e.classList.add(""layui-btn-normal"");
            e.innerHTML += `<i class=""fa fa-check""></i>`;
            e.setAttribute(""disabled"", true);
            var sibling = e.previousSibling;
            sibling.classList.remove(""layui-btn-normal"");
            sibling.classList.add(""layui-btn-primary"");
            sibling.innerHTML = `是`;
            sibling.removeAttribute(""disabled"");
            var overlays = map.getAllOverlays(""polygon"");
      ");
                WriteLiteral(@"      console.log(overlays);
            overlays.forEach(function (overlay) {
                overlay.hide();
            });

        }

        function closeModal(e) {
            e.parentElement.parentElement.remove();
            mousetool.close(true);
            //$.ajax({
            //    type: ""get"",
            //    url: `./API/DetailsVillage?id=${dataGuid}`,
            //    contentType: ""application/json; charset=utf-8"",
            //    dataType: ""json"",
            //    success: function (data) {
            //        var container = document.createElement('div');
            //        container.setAttribute(""class"", ""modalSmall"");
            //        container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">小区信息</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div><div class=""mb-10""><span class=""mr-5 bold"">小区名称:</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></di");
                WriteLiteral(@"v><div  class=""mb-10""><span class=""mr-5 bold"">详细地址:</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">区域:</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">类型:</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div>`;
            //        //htmlPoiDetail = `<div class=""modalSmall""><div class=""flex""><span>小区信息</span><button>x</button></div><div><span>小区名称</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div><span>详细地址</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div><span>区域</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div><span>类型</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div></div>`;
            //        document.getElementsByTagName(""body"")[0].appendChild(container);
            //    },
            //    error: function (item, err) {
            //        console.log(err);
            //    }
            //});
        }

     
        /");
                WriteLiteral(@"* 地图/数据 */
        $.ajax({
            type: ""get"",
            url: ""./API/Index?type=all"",
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (data) {
                /* 边界 */
                var xq = data[0][""ds""];
                var l = data[1][""ds""];
                var lFirst = data[2][""ds""];
                var rowsXQ = [];
                var rowsL = [];
                xq.forEach(function (XQ) {
                    if (XQ[""VILLAGE_BOUNDS""] !== ""null"") {
                        var polygon = new AMap.Polygon({
                            strokeColor: ""#2828FF"",
                            fillOpacity: 0,
                            bubble: true,
                            strokeWeight: 1,
                            path: JSON.parse(XQ[""VILLAGE_BOUNDS""]),
                            map: map
                        });

                        var polylineEditor = new AMap.PolyEditor(map, polygon);
       ");
                WriteLiteral(@"                 polygon.on('dblclick', function () { polylineEditor.open(); });
                        polygon.on('rightclick', function () { polylineEditor.close(); });
                        polygon.on('click', function () {
                            console.log(polygon.getPath());
                        });

                    }
                    rowsXQ.push({ village_name: XQ[""VILLAGE_NAME""], village_address: XQ[""VILLAGE_ADDRESS""], village_region: XQ[""VILLAGE_REGION""], village_type: XQ[""VILLAGE_TYPE""], village_action: `<i class=""fa fa-eye mr-5"" data-lng=""${XQ[""VILLAGE_LNG""]}"" data-lat=""${XQ[""VILLAGE_LAT""]}"" data-bounds=""${XQ[""VILLAGE_BOUNDS""]}"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""getPoiDetail(this);""></i><i class=""fa fa-edit mr-5"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""editPoi(this);""></i><i class=""fa fa-trash-o"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""deletePoi(this);""></i>`, village_lng: XQ[""VILLAGE_LNG""], village_lat: XQ[""VILLAGE_LAT""] });

                });
               ");
                WriteLiteral(@" var container = document.createElement('div');
                container.setAttribute(""id"", ""buttonOpenClose"");
                container.innerHTML += `<span class=""bb-lightblue pb-5px mr-20"">是否显示小区边界</span><button type=""button"" class=""layui-btn layui-btn-radius layui-btn-normal layui-btn-sm"" onclick=""openPois(this);"" disabled>是 <i class=""fa fa-check""></i></button><button type=""button"" class=""layui-btn layui-btn-primary layui-btn-radius layui-btn-sm"" onclick=""closePois(this);"">否</button>`;
                document.getElementsByTagName(""body"")[0].appendChild(container);

                l.forEach(function (L) {
                    var icon = new AMap.Icon({
                        size: new AMap.Size(15, 15),
                        image: './icons/circle.png',  // Icon的图像
                        imageSize: new AMap.Size(15, 15)
    });
                    var marker = new AMap.Marker({
                    position: new AMap.LngLat(L[""LNG""], L[""LAT""]),   // 经纬度对象，也可以是经纬度构成的一维数组[116.39, 39.9]
    ");
                WriteLiteral(@"                    title: '',
                        icon: icon // 添加 Icon 图标 URL
                    });
                    map.add(marker);


                });

                //l.forEach(function (L) {
                //    var circle = new AMap.Circle({
                //        center: new AMap.LngLat(L[""LNG""], L[""LAT""]),
                //        radius: 3,//3D视图下，CircleMarker半径不要超过64px
                //        strokeColor: 'white',
                //        strokeWeight: 2,
                //        strokeOpacity: 0.5,
                //        fillColor: 'rgba(0,0,255,1)',
                //        fillOpacity: 0.5,
                //        zIndex: 10,
                //        bubble: true,
                //        cursor: 'pointer',
                //        clickable: true
                //    });
                //    circle.setMap(map);
                //});
                lFirst.forEach(function (L) {
                    rowsL.push({ building_name: L[""BUILDING");
                WriteLiteral(@"_NAME""], building_address: L[""BUILDING_ADDRESS""], building_action: `<i class=\""fa fa-eye mr-5 \"" data-lng=""${L[""LNG""]}"" data-lat=""${L[""LAT""]}"" data-bounds=""${L[""BOUNDS""]}"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""getPoiDetail2(this);""></i><i class=\""fa fa-edit mr-5 \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""editPoi2(this);""></i><i class=\""fa fa-trash-o \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""deletePoi2(this);""></i>` });
                });

                createTables(rowsXQ, rowsL);
            },
            error: function (item, err) {
                console.log(err);
            }
        });


              

           function switchRegion() {
            var selectRegion = document.getElementById('selectRegion');
               selectRegion.addEventListener('change', function (e) {
                var valueSelected = e.target.value;
                   map.clearMap();
                   map.setZoom(18);
                   if (valueSelected === ""all"") {
                      ");
                WriteLiteral(@" map.setCenter([118.886856,42.257817]);
                   }
                   else if (valueSelected === ""hsq"") {
                       map.setCenter([118.955528,42.295818]);
                   }
                   else if (valueSelected === ""ybsq"") {
                       map.setCenter([119.288611,42.038902]);
                   }
                   else if (valueSelected === ""ssq"") {
                       map.setCenter([118.931962,42.286873]);
                   }
                        else if (valueSelected === ""alkexq"") {
                       map.setCenter([120.0657,43.872299]);
                   }
                   else if (valueSelected === ""blzq"") {
                       map.setCenter([119.37949,43.971126]);
                   }
                   else if (valueSelected === ""blyq"") {
                       map.setCenter([118.66518,43.534414]);
                   }
                   else if (valueSelected === ""lxx"") {
                       map.setCenter([118.05545,43.6");
                WriteLiteral(@"1812]);
                   }
                   else if (valueSelected === ""ksktq"") {
                       map.setCenter([117.545798,43.264989]);
                   }
                   else if (valueSelected === ""wntq"") {
                       map.setCenter([119.00658,42.936188]);
                   }
                   else if (valueSelected === ""klxq"") {
                       map.setCenter([118.701938,41.927364]);
                   }
                    else if (valueSelected === ""ncx"") {
                       map.setCenter([119.320088,41.600075]);
                   }
                   else if (valueSelected === ""ahq"") {
                       map.setCenter([119.921604,42.290782]);
                   }
                for (var i = 0; i < document.getElementsByClassName(""modalSmall"").length; i++) {
                document.getElementsByClassName(""modalSmall"")[i].remove();
            }
                
                              $.ajax({
            type: ""get"",
           ");
                WriteLiteral(@" url: `./API/IndexByRegion?type=${valueSelected}`,
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (data) {
                /* 边界 */
                var xq = data[0][""ds""];
                var l = data[1][""ds""];
                                var lFirst = data[2][""ds""];

                var rowsXQ = [];
                var rowsL = [];
                xq.forEach(function (XQ) {
                    if (XQ[""VILLAGE_BOUNDS""] !== ""null"") {
                        var polygon = new AMap.Polygon({
                            strokeColor: ""#2828FF"",
                            fillOpacity: 0,
                            bubble: true,
                            strokeWeight: 1,
                            path: JSON.parse(XQ[""VILLAGE_BOUNDS""]),
                            map: map
                        });

                        var polylineEditor = new AMap.PolyEditor(map, polygon);
                        polygon.on(");
                WriteLiteral(@"'dblclick', function () { polylineEditor.open(); });
                        polygon.on('rightclick', function () { polylineEditor.close(); });
                        polygon.on('click', function () {
                            console.log(polygon.getPath());
                        });

                    }
                    rowsXQ.push({ village_name: XQ[""VILLAGE_NAME""], village_address: XQ[""VILLAGE_ADDRESS""], village_region: XQ[""VILLAGE_REGION""], village_type: XQ[""VILLAGE_TYPE""], village_action: `<i class=""fa fa-eye mr-5"" data-lng=""${XQ[""VILLAGE_LNG""]}"" data-lat=""${XQ[""VILLAGE_LAT""]}"" data-bounds=""${XQ[""VILLAGE_BOUNDS""]}"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""getPoiDetail(this);""></i><i class=""fa fa-edit mr-5"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""editPoi(this);""></i><i class=""fa fa-trash-o"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""deletePoi(this);""></i>`, village_lng: XQ[""VILLAGE_LNG""], village_lat: XQ[""VILLAGE_LAT""] });

                });

                //l.forEach(function (L) ");
                WriteLiteral(@"{
                //    var circle = new AMap.Circle({
                //        center: new AMap.LngLat(L[""LNG""], L[""LAT""]),
                //        radius: 3,//3D视图下，CircleMarker半径不要超过64px
                //        strokeColor: 'white',
                //        strokeWeight: 2,
                //        strokeOpacity: 0.5,
                //        fillColor: 'rgba(0,0,255,1)',
                //        fillOpacity: 0.5,
                //        zIndex: 10,
                //        bubble: true,
                //        cursor: 'pointer',
                //        clickable: true
                //    });
                //    circle.setMap(map);
                //});
                              l.forEach(function (L) {
                                  var icon = new AMap.Icon({
                    size: new AMap.Size(15, 15),
                    image: './icons/circle.png', // Icon的图像
                    imageSize: new AMap.Size(15,15)
    });
                    var marker =");
                WriteLiteral(@" new AMap.Marker({
                    position: new AMap.LngLat(L[""LNG""], L[""LAT""]),   // 经纬度对象，也可以是经纬度构成的一维数组[116.39, 39.9]
                    title: '',
                    icon: icon, // 添加 Icon 图标 URL
                    });
                    map.add(marker);
                      });
                lFirst.forEach(function (L) {
                    rowsL.push({ building_name: L[""BUILDING_NAME""], building_address: L[""BUILDING_ADDRESS""], building_action: `<i class=\""fa fa-eye mr-5 \"" data-lng=""${L[""LNG""]}"" data-lat=""${L[""LAT""]}"" data-bounds=""${L[""BOUNDS""]}"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""getPoiDetail2(this);""></i><i class=\""fa fa-edit mr-5 \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""editPoi2(this);""></i><i class=\""fa fa-trash-o \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""deletePoi2(this);""></i>` });
                });
                $('#dg').datagrid('loadData',getData(rowsXQ));
                $('#dg2').datagrid('loadData',getData(rowsL));

            },
            error: f");
                WriteLiteral("unction (item, err) {\r\n                console.log(err);\r\n            }\r\n        });\r\n\r\n\r\n\r\n            })\r\n    \r\n        }\r\n\r\n        switchRegion();\r\n       \r\n    </script>\r\n\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(72829, 11, true);
            WriteLiteral("\r\n</html>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
