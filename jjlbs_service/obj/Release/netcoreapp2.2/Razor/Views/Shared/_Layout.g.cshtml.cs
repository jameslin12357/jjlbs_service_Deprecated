#pragma checksum "C:\Users\Administrator\source\repos\jjlbs_serviceNew\jjlbs_service\Views\Shared\_Layout.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d769562c18987887af86040d48649fc5ed1e9bad"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared__Layout), @"mvc.1.0.view", @"/Views/Shared/_Layout.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Shared/_Layout.cshtml", typeof(AspNetCore.Views_Shared__Layout))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Administrator\source\repos\jjlbs_serviceNew\jjlbs_service\Views\_ViewImports.cshtml"
using jjlbs_service;

#line default
#line hidden
#line 2 "C:\Users\Administrator\source\repos\jjlbs_serviceNew\jjlbs_service\Views\_ViewImports.cshtml"
using jjlbs_service.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d769562c18987887af86040d48649fc5ed1e9bad", @"/Views/Shared/_Layout.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"388978b18945ee3cd61e73c2f652e11d9e0d0638", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared__Layout : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/font-awesome-4.7.0/css/font-awesome.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/easyui/themes/default/easyui.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/easyui/themes/icon.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/easyui/demo/demo.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/layui-v2.5.4/layui/css/layui.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("media", new global::Microsoft.AspNetCore.Html.HtmlString("all"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/site.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/javascript"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/easyui/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/easyui/jquery.easyui.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/layui-v2.5.4/layui/layui.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("charset", new global::Microsoft.AspNetCore.Html.HtmlString("utf-8"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/js/site.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 27, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html>\r\n");
            EndContext();
            BeginContext(27, 762, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d769562c18987887af86040d48649fc5ed1e9bad9475", async() => {
                BeginContext(33, 121, true);
                WriteLiteral("\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>");
                EndContext();
                BeginContext(155, 17, false);
#line 7 "C:\Users\Administrator\source\repos\jjlbs_serviceNew\jjlbs_service\Views\Shared\_Layout.cshtml"
      Write(ViewData["Title"]);

#line default
#line hidden
                EndContext();
                BeginContext(172, 14, true);
                WriteLiteral("</title>\r\n    ");
                EndContext();
                BeginContext(186, 76, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "d769562c18987887af86040d48649fc5ed1e9bad10362", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(262, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(270, 81, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "d769562c18987887af86040d48649fc5ed1e9bad11700", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(351, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(357, 71, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "d769562c18987887af86040d48649fc5ed1e9bad13121", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(428, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(434, 69, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "d769562c18987887af86040d48649fc5ed1e9bad14542", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(503, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(509, 77, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "d769562c18987887af86040d48649fc5ed1e9bad15963", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(586, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(592, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "d769562c18987887af86040d48649fc5ed1e9bad17384", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(639, 143, true);
                WriteLiteral("\r\n    <style type=\"text/css\">\r\n        #container, html, body {\r\n            height: 100%;\r\n            margin: 0;\r\n        }\r\n    </style>\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(789, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(791, 197240, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d769562c18987887af86040d48649fc5ed1e9bad19675", async() => {
                BeginContext(797, 197, true);
                WriteLiteral("\r\n    <div id=\"header\" class=\"flex sb pd-20 bb-lightblue\">\r\n        <div id=\"logo\">JJLBS-SERVICE</div>\r\n\r\n        <div id=\"selectFilter\">\r\n            <select id=\"selectProvince\" class=\"selectPCC\">");
                EndContext();
                BeginContext(994, 28, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d769562c18987887af86040d48649fc5ed1e9bad20274", async() => {
                    BeginContext(1011, 2, true);
                    WriteLiteral("所有");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1022, 65, true);
                WriteLiteral("</select>\r\n            <select id=\"selectCity\" class=\"selectPCC\">");
                EndContext();
                BeginContext(1087, 28, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d769562c18987887af86040d48649fc5ed1e9bad21803", async() => {
                    BeginContext(1104, 2, true);
                    WriteLiteral("所有");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1115, 67, true);
                WriteLiteral("</select>\r\n            <select id=\"selectCounty\" class=\"selectPCC\">");
                EndContext();
                BeginContext(1182, 28, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d769562c18987887af86040d48649fc5ed1e9bad23334", async() => {
                    BeginContext(1199, 2, true);
                    WriteLiteral("所有");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1210, 29, true);
                WriteLiteral("</select>\r\n        </div>\r\n\r\n");
                EndContext();
                BeginContext(2225, 457, true);
                WriteLiteral(@"
        <div class=""tabsMain"">
            <button type=""button"" class=""layui-btn layui-btn-primary layui-btn-radius selectedButton tabBorderLeft bd0"">高德地图</button>
            <button type=""button"" class=""layui-btn layui-btn-primary layui-btn-radius tabBorderRight m0 bd0"">ARCGIS</button>
        </div>

    </div>

    <div id=""footer"" class=""flex"">



    </div>

    <div class=""c"">
        <main role=""main"" class=""pb-3"">
            ");
                EndContext();
                BeginContext(2683, 12, false);
#line 66 "C:\Users\Administrator\source\repos\jjlbs_serviceNew\jjlbs_service\Views\Shared\_Layout.cshtml"
       Write(RenderBody());

#line default
#line hidden
                EndContext();
                BeginContext(2695, 75, true);
                WriteLiteral("\r\n        </main>\r\n    </div>\r\n\r\n\r\n\r\n    <div id=\"container\"></div>\r\n\r\n\r\n\r\n");
                EndContext();
                BeginContext(2853, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(2859, 69, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d769562c18987887af86040d48649fc5ed1e9bad25995", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(2928, 10, true);
                WriteLiteral("\r\n\r\n\r\n    ");
                EndContext();
                BeginContext(2938, 76, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d769562c18987887af86040d48649fc5ed1e9bad27349", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(3014, 162, true);
                WriteLiteral("\r\n    <script src=\"https://webapi.amap.com/maps?v=1.4.15&key=3cd18e86c129259575068fdb7f2522e0&plugin=AMap.PolyEditor,AMap.Scale,AMap.ControlBar,Map3D\"></script>\r\n");
                EndContext();
                BeginContext(3377, 4, true);
                WriteLiteral("    ");
                EndContext();
                BeginContext(3381, 69, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d769562c18987887af86040d48649fc5ed1e9bad28972", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(3450, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(3456, 62, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d769562c18987887af86040d48649fc5ed1e9bad30317", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_15.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_15);
#line 85 "C:\Users\Administrator\source\repos\jjlbs_serviceNew\jjlbs_service\Views\Shared\_Layout.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(3518, 194506, true);
                WriteLiteral(@"
    <script language=""javascript"">
       
        var form, layer, element;
        layui.use(['form', 'layedit', 'laydate', 'layer','element'], function () {
            form = layui.form
                , layer = layui.layer
                , layedit = layui.layedit
                , laydate = layui.laydate
            , element = layui.element;
        });

        var map = new AMap.Map(""container"", {
            zoom: 17,
            showIndoorMap: false,
            showLabel: true,
            mapStyle: 'amap://styles/light',
            center: [116.401165, 39.902355],
            features: ['bg', 'point', 'road', 'building'],
            viewMode: '3D',
            layers: [
                new AMap.TileLayer({})
            ]
        });
        map.addControl(new AMap.Scale());
        map.addControl(new AMap.ControlBar({
            showZoomBar: false,
            showControlButton: true,
            position: {
                right: '90%',
                top: '20");
                WriteLiteral(@"0px'
            }
        }));
        //    var mouseTool = new AMap.MouseTool(map);
        //        mouseTool.on('draw', function(event) {
        //  // event.obj 为绘制出来的覆盖物对象
        //            console.log(event.obj);
        //})
        var mousetool;
        map.plugin([""AMap.MouseTool""], function () {
            mousetool = new AMap.MouseTool(map);
            mousetool.on('draw', function (event) {
                // event.obj 为绘制出来的覆盖物对象
                var polygon = event.obj;
                var bounds = polygon.getPath();
                var list = [];
                bounds.forEach(function (coord) {
                    var lng = coord[""lng""];
                    var lat = coord[""lat""];
                    list.push([lng, lat]);

                })
                document.getElementById('fieldHidden').value = JSON.stringify(list);
                //document.getElementsByTagName(""body"")[0].setAttribute(""data-currentvillage"", JSON.stringify(list));
                //");
                WriteLiteral(@"mousetool.close();


            });
        });

        (function ($) {
            function pagerFilter(data) {
                if ($.isArray(data)) {	// is array
                    data = {
                        total: data.length,
                        rows: data
                    }
                }
                var target = this;
                var dg = $(target);
                var state = dg.data('datagrid');
                var opts = dg.datagrid('options');
                if (!state.allRows) {
                    state.allRows = (data.rows);
                }
                if (!opts.remoteSort && opts.sortName) {
                    var names = opts.sortName.split(',');
                    var orders = opts.sortOrder.split(',');
                    state.allRows.sort(function (r1, r2) {
                        var r = 0;
                        for (var i = 0; i < names.length; i++) {
                            var sn = names[i];
                         ");
                WriteLiteral(@"   var so = orders[i];
                            var col = $(target).datagrid('getColumnOption', sn);
                            var sortFunc = col.sorter || function (a, b) {
                                return a == b ? 0 : (a > b ? 1 : -1);
                            };
                            r = sortFunc(r1[sn], r2[sn]) * (so == 'asc' ? 1 : -1);
                            if (r != 0) {
                                return r;
                            }
                        }
                        return r;
                    });
                }
                var start = (opts.pageNumber - 1) * parseInt(opts.pageSize);
                var end = start + parseInt(opts.pageSize);
                data.rows = state.allRows.slice(start, end);
                return data;
            }

            var loadDataMethod = $.fn.datagrid.methods.loadData;
            var deleteRowMethod = $.fn.datagrid.methods.deleteRow;
            $.extend($.fn.datagrid.methods, {
    ");
                WriteLiteral(@"            clientPaging: function (jq) {
                    return jq.each(function () {
                        var dg = $(this);
                        var state = dg.data('datagrid');
                        var opts = state.options;
                        opts.loadFilter = pagerFilter;
                        var onBeforeLoad = opts.onBeforeLoad;
                        opts.onBeforeLoad = function (param) {
                            state.allRows = null;
                            return onBeforeLoad.call(this, param);
                        }
                        var pager = dg.datagrid('getPager');
                        pager.pagination({
                            onSelectPage: function (pageNum, pageSize) {
                                opts.pageNumber = pageNum;
                                opts.pageSize = pageSize;
                                pager.pagination('refresh', {
                                    pageNumber: pageNum,
                              ");
                WriteLiteral(@"      pageSize: pageSize
                                });
                                dg.datagrid('loadData', state.allRows);
                            }
                        });
                        $(this).datagrid('loadData', state.data);
                        if (opts.url) {
                            $(this).datagrid('reload');
                        }
                    });
                },
                loadData: function (jq, data) {
                    jq.each(function () {
                        $(this).data('datagrid').allRows = null;
                    });
                    return loadDataMethod.call($.fn.datagrid.methods, jq, data);
                },
                deleteRow: function (jq, index) {
                    return jq.each(function () {
                        var row = $(this).datagrid('getRows')[index];
                        deleteRowMethod.call($.fn.datagrid.methods, $(this), index);
                        var state = $(this).data");
                WriteLiteral(@"('datagrid');
                        if (state.options.loadFilter == pagerFilter) {
                            for (var i = 0; i < state.allRows.length; i++) {
                                if (state.allRows[i] == row) {
                                    state.allRows.splice(i, 1);
                                    break;
                                }
                            }
                            $(this).datagrid('loadData', state.allRows);
                        }
                    });
                },
                getAllRows: function (jq) {
                    return jq.data('datagrid').allRows;
                }
            })
        })(jQuery);

        function getData(dt) {
            return dt;
        }


        function getVillageData() {

        }

        function getBuildingNumber(str){
    var r = str.match(/[a-zA-Z]/);
    if (r !== null) {
        return str.slice(r[""index""]);
    } else {
        var r2 = str.match(/\d/);
        ");
                WriteLiteral(@"if (r2 !== null) {
            return str.slice(r2[""index""]);
        } else {
            return str;
        }
    }
}

                function getBuilding(e) {
            var selectP = document.getElementById('selectProvince');
            var selectC = document.getElementById('selectCity');
            var selectCT = document.getElementById('selectCounty');
            var province = $(""#selectProvince"").find(""option:selected"").text();
            var city = $(""#selectCity"").find(""option:selected"").text();
            var county = $(""#selectCounty"").find(""option:selected"").text();
            var adcode = document.getElementById('selectCounty').value;
            var region = province + ""/"" + city + ""/"" + county;
            if (province !== ""所有"" && city !== ""所有"" && county !== ""所有"") {
                $.ajax({
                    type: ""get"",
                    url: `./api/regionexists2?region=${region}`,
                    dataType: ""json"",
                    success: function (data) {
            ");
                WriteLiteral(@"            if (data[""ds""][0][""COUNT""] === 0) {
                            $.ajax({
                                type: ""get"",
                                url: `https://restapi.amap.com/v3/place/text?key=c7aeb11746b35a92b7b6eee3178a05e4&keywords=&types=190403&city=${adcode}&children=1&offset=5&page=1&extensions=all`,
                                dataType: ""json"",
                                success: function (data) {
                                    var count = data[""count""];
                                    var times = 0;
                                    if (count !== 0) {
                                        //  var piece = 100 / count;
                                        //var currentP = 0;
                                        //var currentCount = 0;
                                        var div = document.createElement('div');
                                        div.setAttribute('id', 'pb');
                                        div.innerHTML += `<div class=""l");
                WriteLiteral(@"ayui-progress layui-progress-big layui-bg-orange"" lay-filter=""pb"" lay-showpercent=""true"""">
  <div class=""layui-progress-bar"" lay-percent=""0%""></div>
</div>`;
                                        document.getElementsByTagName('body')[0].appendChild(div);
                                        
                                            var currentP = 10;
               //  set your counter to 1

function myLoop () {           //  create a loop function
   setTimeout(function () {    //  call a 3s setTimeout when the loop is called
      element.progress('pb', `${String(currentP)}%`);
                                                                                    

                                            currentP += 10;                    //  increment the counter
       if (currentP <= 100) {            //  if the counter < 10, call the loop function
           myLoop();             //  ..  again which will trigger another 
       } else {
           document.getElementById('pb').r");
                WriteLiteral(@"emove(); layer.msg(""楼宇已更新"");
       }//  ..  setTimeout()
   }, 1000)
}

myLoop();    
                                        times = Math.ceil(count / 20);
                                        console.log(count);
                                        for (var i = 0; i < times; i++) {
                                            var page = i + 1;
                                            console.log('this is page' + page);
                                            $.ajax({
                                                type: ""get"",
                                                url: `https://restapi.amap.com/v3/place/text?key=c7aeb11746b35a92b7b6eee3178a05e4&keywords=&types=190403&city=${adcode}&children=1&offset=20&page=${page}&extensions=all`,
                                                dataType: ""json"",
                                                success: function (data2) {
                                                    console.log(data2);
                                      ");
                WriteLiteral(@"              data2[""pois""].forEach(function (poi) {
                                                        // currentP += piece;
                                                        //currentCount += 1;
                                                        //                                                        console.log(currentCount);

                                                        //var cP = `${String(currentP)}%`;
                                                        //element.progress('pb', cP);
                                                        //if (currentCount === Number(count)) {
                                                        //    setTimeout(function () { document.getElementById('pb').remove();layer.msg(""楼宇已更新"");},1500);
                                                        //} 
                                                        var region = `${poi[""pname""]}/${poi[""cityname""]}/${poi[""adname""]}`;
                                                       ");
                WriteLiteral(@" var lnglat = poi[""location""];
                                                        var lng = Number(lnglat.split(',')[0]);
                                                        var lat = Number(lnglat.split(',')[1]);
                                                        var building_number = getBuildingNumber(poi[""name""]);
                                                                                           $.ajax({
                                                            type: ""post"",
                                                            url: `./API/CreateBuildings`,
                                                            data: { ""building_code"":poi[""id""],""building_number"": building_number, ""building_name"": poi[""name""], ""building_address"": poi[""address""], ""building_region"": region, ""building_type"": poi[""type""], ""building_x"":lng,""building_y"":lat,""building_lng"":lng,""building_lat"":lat,""village_id"":poi[""parent""],""source"": ""1"" },
                                                          ");
                WriteLiteral(@"  dataType: ""json"",
                                                            success: function (data) {
                                                                if (data.length !== 0) {
                                                                    console.log('error');
                                                                } else {
                                                                    //document.getElementsByClassName(""modalSmall"")[0].remove();
                                                                    console.log('inserted');
                                                                    //$('#dg').datagrid('insertRow', {
                                                                    //    index: 0,
                                                                    //    row: {
                                                                    //        village_name: village_name,
                                                                    /");
                WriteLiteral(@"/        village_address: village_address,
                                                                    //        village_region: village_region,
                                                                    //        village_type: village_type
                                                                    //    }
                                                                    //});


                                                                }
                                                            },
                                                            error: function (item, err) {
                                                                console.log(err);
                                                            }
                                                        });
                                                        //var parent = poi[""parent""];
                                                        //var village_id = """";
                          ");
                WriteLiteral(@"                  //                            $.ajax({
                                            //    type: ""get"",
                                            //    url: `./api/getBuildingVillageId?code=${parent}`,
                                            //    dataType: ""json"",
                                            //    success: function (data3) {
                                            //        if (data3 !== ""404"") {
                                            //            if (data3[""ds""] !== undefined) {
                                            //                if (data3[""ds""].length !== 0) {
                                            //                    village_id = data3[""ds""][0];
                                            //                }
                                            //            }
                                                        
                                            //        }

                                            //   ");
                WriteLiteral(@"     console.log(data3);
                                            //        $.ajax({
                                            //                type: ""post"",
                                            //                url: `./API/CreateBuildings`,
                                            //                data: { ""building_code"":poi[""id""],""building_number"": building_number, ""building_name"": poi[""name""], ""building_address"": poi[""address""], ""building_region"": region, ""building_type"": poi[""type""], ""building_x"":lng,""building_y"":lat,""building_lng"":lng,""building_lat"":lat,""village_id"":village_id,""source"": ""1"" },
                                            //                dataType: ""json"",
                                            //                success: function (data) {
                                            //                    if (data.length !== 0) {
                                            //                        console.log('error');
                                            // ");
                WriteLiteral(@"                   } else {
                                            //                        //document.getElementsByClassName(""modalSmall"")[0].remove();
                                            //                        console.log('inserted');
                                            //                        //$('#dg').datagrid('insertRow', {
                                            //                        //    index: 0,
                                            //                        //    row: {
                                            //                        //        village_name: village_name,
                                            //                        //        village_address: village_address,
                                            //                        //        village_region: village_region,
                                            //                        //        village_type: village_type
                                            //         ");
                WriteLiteral(@"               //    }
                                            //                        //});


                                            //                    }
                                            //                },
                                            //                error: function (item, err) {
                                            //                    console.log(err);
                                            //                }
                                            //            });
                                            //    },
                                            //    error: function () {
                                            //        console.log('error');
                                            //    }
                                            //});

                                                        
                                                    });
                                                },
                ");
                WriteLiteral(@"                                error: function () {
                                                    console.log('error');
                                                }
                                            });
                                        }
                                    }
                                },
                                error: function () {
                                    console.log('error');
                                }
                            });
                        }
                    },
                    error: function () {
                        console.log('error');
                    }
                });
            }
        }
        function getVillage(e) {
            var selectP = document.getElementById('selectProvince');
            var selectC = document.getElementById('selectCity');
            var selectCT = document.getElementById('selectCounty');
            var province = $(""#selectProvince"").find(""option:sele");
                WriteLiteral(@"cted"").text();
            var city = $(""#selectCity"").find(""option:selected"").text();
            var county = $(""#selectCounty"").find(""option:selected"").text();
            var adcode = document.getElementById('selectCounty').value;
            var region = province + ""/"" + city + ""/"" + county;
            if (province !== ""所有"" && city !== ""所有"" && county !== ""所有"") {
                $.ajax({
                    type: ""get"",
                    url: `./api/regionexists?region=${region}`,
                    dataType: ""json"",
                    success: function (data) {
                        if (data[""ds""][0][""COUNT""] === 0) {
                            $.ajax({
                                type: ""get"",
                                url: `https://restapi.amap.com/v3/place/text?key=c7aeb11746b35a92b7b6eee3178a05e4&keywords=&types=120302&city=${adcode}&children=1&offset=5&page=1&extensions=all`,
                                dataType: ""json"",
                                success: f");
                WriteLiteral(@"unction (data) {
                                    var count = data[""count""];
                                    var times = 0;
                                    if (count !== 0) {
                                        //var piece = 100 / count;
                                        //var currentP = 0;
                                        //var currentCount = 0;
                                        var div = document.createElement('div');
                                        div.setAttribute('id', 'pb');
                                        div.innerHTML += `<div class=""layui-progress layui-progress-big layui-bg-orange"" lay-filter=""pb"" lay-showpercent=""true"""">
  <div class=""layui-progress-bar"" lay-percent=""0%""></div>
</div>`;
                                        document.getElementsByTagName('body')[0].appendChild(div);


                                            var currentP = 10;
               //  set your counter to 1

function myLoop () {           //  create a");
                WriteLiteral(@" loop function
   setTimeout(function () {    //  call a 3s setTimeout when the loop is called
      element.progress('pb', `${String(currentP)}%`);
                                                                                    

                                            currentP += 10;                    //  increment the counter
       if (currentP <= 100) {            //  if the counter < 10, call the loop function
           myLoop();             //  ..  again which will trigger another 
       } else {
           document.getElementById('pb').remove(); layer.msg(""小区已更新"");
       }//  ..  setTimeout()
   }, 1000)
}

myLoop();    
                                   

                                        // wait for 1500ms then run code when code is done repeat until condition meets 
                                        //setTimeout(function () { document.getElementById('pb').remove(); layer.msg(""小区已更新""); }, 3000);
                                       
                    ");
                WriteLiteral(@"                    times = Math.ceil(count / 20);
                                        for (var i = 0; i < times; i++) {
                                            var page = i + 1;
                                            console.log('this is page' + page);
                                            $.ajax({
                                                type: ""get"",
                                                url: `https://restapi.amap.com/v3/place/text?key=c7aeb11746b35a92b7b6eee3178a05e4&keywords=&types=120302&city=${adcode}&children=1&offset=20&page=${page}&extensions=all`,
                                                dataType: ""json"",
                                                success: function (data2) {
                                                    data2[""pois""].forEach(function (poi) {
                                                        //currentP += piece;
                                                        //currentCount += 1;
                         ");
                WriteLiteral(@"                               //var cP = `${String(currentP)}%`;
                                                        //element.progress('pb', cP);
                                                        //if (currentCount === Number(count)) {
                                                        //    setTimeout(function () { document.getElementById('pb').remove();layer.msg(""小区已更新"");},1500);
                                                        //} 
                                                        var region = `${poi[""pname""]}/${poi[""cityname""]}/${poi[""adname""]}`;
                                                        var lnglat = poi[""location""];
                                                        var lng = Number(lnglat.split(',')[0]);
                                                        var lat = Number(lnglat.split(',')[1]);
                                                        $.ajax({
                                                            type: ""post"",
         ");
                WriteLiteral(@"                                                   url: `./API/CreateVillages`,
                                                            data: { ""village_code"": poi[""id""], ""village_name"": poi[""name""], ""village_address"": poi[""address""], ""village_region"": region, ""village_type"": poi[""type""], ""village_x"": lng, ""village_y"": lat, ""village_lng"": lng, ""village_lat"": lat, ""source"": ""1"" },
                                                            dataType: ""json"",
                                                            success: function (data) {
                                                                if (data.length !== 0) {
                                                                    console.log('error');
                                                                } else {
                                                                    //document.getElementsByClassName(""modalSmall"")[0].remove();
                                                                    console.log('in");
                WriteLiteral(@"serted');
                                                                    //$('#dg').datagrid('insertRow', {
                                                                    //    index: 0,
                                                                    //    row: {
                                                                    //        village_name: village_name,
                                                                    //        village_address: village_address,
                                                                    //        village_region: village_region,
                                                                    //        village_type: village_type
                                                                    //    }
                                                                    //});


                                                                }
                                                            },
                  ");
                WriteLiteral(@"                                          error: function (item, err) {
                                                                console.log(err);
                                                            }
                                                        });
                                                    });
                                                },
                                                error: function () {
                                                    console.log('error');
                                                }
                                            });
                                        }
                                    }
                                },
                                error: function () {
                                    console.log('error');
                                }
                            });
                        }
                    },
                    error: function () {");
                WriteLiteral(@"
                        console.log('error');
                    }
                });
            }
        }



           //dataF.push({ ""village_code"": poi[""id""], ""village_name"": poi[""name""], ""village_address"": poi[""address""], ""village_region"": region, ""village_type"": poi[""type""], ""village_x"": lng, ""village_y"": lat, ""village_lng"": lng, ""village_lat"": lat });


                                            
                                                    //dataF = [];
                                                    //data2[""pois""].forEach(function (poi) {
                                                    //    var region = `${poi[""pname""]}/${poi[""cityname""]}/${poi[""adname""]}`;
                                                    //    var lnglat = poi[""location""];
                                                    //    var lng = Number(lnglat.split(',')[0]);
                                                    //    var lat = Number(lnglat.split(',')[1]);

                    ");
                WriteLiteral(@"                                //    dataF.push({ ""village_code"": poi[""id""], ""village_name"": poi[""name""], ""village_address"": poi[""address""], ""village_region"": region, ""village_type"": poi[""type""], ""village_x"": lng, ""village_y"": lat, ""village_lng"": lng, ""village_lat"": lat });


                                                    //});
                                                    //console.log(JSON.stringify(dataF));
            //                                             $.ajax({
            //    type: ""post"",
            //    url: `./API/CreateVillages`,
            //    data: { ""list"": JSON.stringify(dataF) },
            //    dataType: ""json"",
            //    success: function (data) {
            //        if (data.length !== 0) {
                        
            //        } else {
            //            //document.getElementsByClassName(""modalSmall"")[0].remove();
            //            //layer.msg(""小区已添加"");
            //            //$('#dg').datagrid('insertRow'");
                WriteLiteral(@", {
            //            //    index: 0,
            //            //    row: {
            //            //        village_name: village_name,
            //            //        village_address: village_address,
            //            //        village_region: village_region,
            //            //        village_type: village_type
            //            //    }
            //            //});


            //        }
            //    },
            //    error: function (item, err) {
            //        console.log(err);
            //    }
            //});
                                                    //console.log(dataF);
                                                    // after getting twenty POIs and placing their info inside a list, loop over each
                                                    // and use its poiId to get corresponding bounds which can be either bounds or null

                                                    //data2[""pois""].f");
                WriteLiteral(@"orEach(function (poi2) {
                                                    //    var poiId = poi2[""id""];
                                                    //    $.ajax({
                                                    //        type: ""get"",
                                                    //        url: `https://ditu.amap.com/detail/get/detail?id=${poiId}`,
                                                    //        //url: `https://ditu.amap.com/detail/${poiId}/?src=mypage&callnative=0`,
                                                    //        dataType: ""html"",
                                                    //        success: function (data) {
                                                    //            console.log(data);
                                                    //        },
                                                    //        error: function (item, err) {
                                                    //            console.log(err);
           ");
                WriteLiteral(@"                                         //        }
                                                    //    });
                                                    //});
                                                    //if (body !== undefined) {
                                                    //    console.log(body.indexOf(`""shape"":""`));
                                                    //    if (body.indexOf(`""shape"":""`) !== -1) {
                                                    //        // console.log(poi.poiId);
                                                    //        // console.log(body);
                                                    //        var path = [];
                                                    //        var start = body.indexOf(`""shape"":""`) + 9;
                                                    //        var end = """";
                                                    //        if (body.indexOf(`"",""parentid""`) !== -1) {
                           ");
                WriteLiteral(@"                         //            end = body.indexOf(`"",""parentid""`);
                                                    //        } else {
                                                    //            end = body.indexOf(`"",""level""`);
                                                    //        }
                                                    //        var start2 = body.indexOf(`""poiid"":""`) + 9;
                                                    //        var end2 = body.indexOf(`"",""tag""`);
                                                    //        var poiId = body.slice(start2, end2);

                                                    //        // var end = body.indexOf(`"",""level""`);
                                                    //        // console.log(body.slice(start,end));
                                                    //        // console.log('*************************');
                                                    //        body.slice(start, end).spli");
                WriteLiteral(@"t("";"").forEach(function (pointW) {
                                                    //            var point = pointW.split("","");
                                                    //            var long = Number(point[0]);
                                                    //            var lat = Number(point[1]);
                                                    //            path.push([long, lat]);
                                                    //        });

                                                    //        //poisHousing1to300[i][""poiBounds""] = JSON.stringify(path);
                                                    //        // poisHousing[i][""poiBounds""] = JSON.stringify(path);
                                                    //        path = JSON.stringify(path);
                                                    //    }
                                                    //}
                                                    //                data: { ""village_n");
                WriteLiteral(@"ame"": village_name, ""village_address"": village_address, ""village_region"": village_region, ""village_type"": village_type, ""village_bounds"" : village_bounds, ""village_x"": village_x, ""village_y"": village_y, ""village_lng"": village_lng, ""village_lat"":village_lat, ""source"":source },

                                                    //var village_code = data;
                                                    //var village_name = ;
                                                    //var village_address = ;
                                                    //var village_region = ;
                                                    //var village_type = ;
                                                    //var village_x = ;
                                                    //var village_y = ;
                                                    //var village_lng = ;
                                                    //var village_lat = ;
                                                    //var v");
                WriteLiteral(@"illage_bounds = ;
  
        //function createTables(d, d2) {
        //    var htmlTable1 = '<table id=""dg"" style=""width:70%;height:300px"" data-options=""fitColumns:true,rownumbers:false,singleSelect:true,autoRowHeight:false,pagination:true,pageSize:10""><thead><tr><th field=""village_name"" width=""80"" align=""center"">小区名称</th><th field=""village_address"" width=""100"" align=""center"">地址</th><th field=""village_region"" width=""80"" align=""center"">区域</th><th field=""village_type"" width=""80"" align=""center"">类型</th><th field=""village_action"" width=""80"" align=""center"">操作</th><th field=""village_id"" align=""center"" hidden=""true"">village_id</th><th field=""village_lng"" align=""center"" hidden=""true"">经度</th><th field=""village_lat"" align=""center"" hidden=""true"">纬度</th></tr></thead></table>';
        //    var htmlTB1 = '<div id=""tb"" class=""flex sb aic"" style=""padding: 10px;""><span class=""bb-lightblue pb-5px"">小区信息</span><div class=""flex aic""><input type=""text"" placeholder=""输入小区名称检索"" class=""mr-10 pd-5px bd2-lightblue"" /><i id=""inputS");
                WriteLiteral(@"earchIcon"" class=""fa fa-search cr-lightblue"" onclick=""searchVillage(this)""></i><div class=""mr-10""><i class=""fa fa-file-o cr-lightblue"" onclick=""newVillage(this)""></i><span> 新建小区</span></div><div><i class=""fa fa-download cr-lightblue"" onclick=""getVillage(this)""></i><span> 更新本地数据</span></div></div></div>';
        //    var htmlTable2 = '<table id=""dg2"" style=""width:30%;height:300px"" data-options=""fitColumns:true,rownumbers:false,singleSelect:true,autoRowHeight:false,pagination:true,pageSize:10""><thead><tr><th field=""building_name"" width=""80"" align=""center"">楼宇号</th><th field=""building_address"" width=""100"" align=""center"">详细地址（蓝牌地址码)</th><th field=""building_action"" width=""80"" align=""center"">操作</th></tr></thead></table>';
        //    var htmlTB2 = '<div id=""tb2"" class=""flex sb aic"" style=""padding: 10px;""><span class=""bb-lightblue pb-5px"">楼宇信息</span><div class=""flex aic""><input type=""text"" placeholder=""输入楼宇号检索"" class=""mr-10 pd-5px bd2-lightblue"" /><i id=""inputSearchIcon"" class=""fa fa-search cr-lightblue"" onclic");
                WriteLiteral(@"k=""searchBuilding(this)""></i><div class=""mr-10""><i class=""fa fa-file-o cr-lightblue"" onclick=""newBuilding(this)""></i><span> 新建楼宇</span></div><div><i class=""fa fa-download cr-lightblue"" onclick=""getBuilding(this)""></i><span> 更新本地数据</span></div></div></div>';
        //    document.getElementById(""footer"").innerHTML += htmlTable1 + htmlTB1 + htmlTable2 + htmlTB2;
        //    // { data: getData(d) }
        //    $(function () {
        //        $('#dg').datagrid({ toolbar: ""#tb"" }).datagrid('loadData', getData(d)).datagrid({
        //            onClickRow: function (index, row) {

        //                for (var i = 0; i < document.getElementsByClassName(""modalSmall"").length; i++) {
        //                    document.getElementsByClassName(""modalSmall"")[i].remove();
        //                }
        //                console.log('clicked first');
        //                mousetool.close(true);
        //                document.getElementsByTagName(""body"")[0].setAttribute(""data-curren");
                WriteLiteral(@"tIndex"", index);
        //                var overlays = map.getAllOverlays(""polygon"");
        //                overlays.forEach(function (overlay) {
        //                    overlay.setOptions({
        //                        strokeColor: ""#2828FF""
        //                    });
        //                });
        //                var string = row[""village_action""];
        //                var demo = document.createElement('div');
        //                demo.innerHTML = string;
        //                var lng = Number(demo.children[0].getAttribute(""data-lng""));
        //                var lat = Number(demo.children[0].getAttribute(""data-lat""));
        //                var bounds = demo.children[0].getAttribute(""data-bounds"");
        //                var dataGuid = demo.children[0].getAttribute(""data-guid"");

        //                console.log(lng);
        //                console.log(lat);
        //                map.setCenter([lng, lat]);
        //    ");
                WriteLiteral(@"            map.setZoom(18);
        //                if (bounds !== ""null"") {
        //                    var overlays2 = map.getAllOverlays(""polygon"");
        //                    overlays2.forEach(function (overlay) {
        //                        var bounds2 = ""["";
        //                        overlay.getPath().forEach(function (coord) {
        //                            var lng = coord[""lng""];
        //                            var lat = coord[""lat""];
        //                            bounds2 += `[${String(lng)},${String(lat)}],`;
        //                        });
        //                        bounds2 = bounds2.slice(0, bounds2.length - 1);
        //                        bounds2 += ""]"";
        //                        if (bounds === bounds2) {
        //                            overlay.setOptions({
        //                                strokeColor: ""#D00000""
        //                            });
        //                        }
        ");
                WriteLiteral(@"//                    });
        //                }
        //                //document.getElementsByClassName('panel')[1].remove();
        //                $.ajax({
        //                    type: ""get"",
        //                    url: `./API/VillageBuildings?id=${dataGuid}`,
        //                    contentType: ""application/json; charset=utf-8"",
        //                    dataType: ""json"",
        //                    success: function (data) {
        //                        rowsL = [];
        //                        data[""ds""].forEach(function (L) {
        //                            rowsL.push({ building_name: L[""BUILDING_NAME""], building_address: L[""BUILDING_ADDRESS""], building_action: `<i class=\""fa fa-eye mr-5 \"" data-lng=""${L[""LNG""]}"" data-lat=""${L[""LAT""]}"" data-bounds=""${L[""BOUNDS""]}"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""getPoiDetail2(this);""></i><i class=\""fa fa-edit mr-5 \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""editPoi2(this);""></i><i class=\""fa fa-t");
                WriteLiteral(@"rash-o \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""deletePoi2(this);""></i>` });
        //                        });

        //                        $(function () {
        //                            $('#dg2').datagrid('loadData', getData(rowsL));
        //                        });
        //                    },
        //                    error: function (item, err) {
        //                        console.log(err);
        //                    }
        //                });
        //                // get related buildings through api and use json to build table to right and attach events also remove old table to right
        //                // extract record location and guid, relocate map to location, remove buildings table from dom,
        //                // sned request to api to get related buildings in json string form and use it to build
        //                // a new table and bind events to it
        //            }
        //        }).datagrid('clien");
                WriteLiteral(@"tPaging').datagrid('highlightRow', 0);

        //        $('#dg2').datagrid({ toolbar: ""#tb2"" }).datagrid('loadData', getData(d2)).datagrid({
        //            onClickRow: function (index, row) {
        //                for (var i = 0; i < document.getElementsByClassName(""modalSmall"").length; i++) {
        //                    document.getElementsByClassName(""modalSmall"")[i].remove();
        //                }
        //                mousetool.close(true);

        //                console.log('clicked');
        //                document.getElementsByTagName(""body"")[0].setAttribute(""data-currentIndex"", index);
        //                var markers = map.getAllOverlays(""marker"");
        //                markers.forEach(function (marker) {
        //                    //marker.setOptions({
        //                    //    fillColor:'rgba(0,0,255,1)'
        //                    //});

        //                    var icon = new AMap.Icon({
        //                    ");
                WriteLiteral(@"    size: new AMap.Size(15, 15),
        //                        image: './icons/circle.png', // Icon的图像
        //                        imageSize: new AMap.Size(15, 15)
        //                    });
        //                    marker.setIcon(icon);
        //                });
        //                var string = row[""building_action""];
        //                var demo = document.createElement('div');
        //                demo.innerHTML = string;
        //                var lng = Number(demo.children[0].getAttribute(""data-lng""));
        //                var lat = Number(demo.children[0].getAttribute(""data-lat""));
        //                //var markers2 = map.getAllOverlays(""circle"");

        //                markers.forEach(function (marker) {
        //                    if (marker.getPosition()[""lng""] == lng && marker.getPosition()[""lat""] == lat) {
        //                        var icon = new AMap.Icon({
        //                            size: new AMap.Si");
                WriteLiteral(@"ze(15, 15),
        //                            image: './icons/circle1.png', // Icon的图像
        //                            imageSize: new AMap.Size(15, 15)
        //                        });
        //                        marker.setIcon(icon);
        //                    }
        //                });
        //                //markers2.forEach(function (marker) {
        //                //     if (marker.getCenter()[""lng""] == lng && marker.getCenter()[""lat""] == lat) {
        //                //             marker.setOptions({
        //                //        fillColor:'rgba(0,255,0,1)'
        //                //    });
        //                //            //marker.setIcon('https://a.amap.com/jsapi_demos/static/demo-center/icons/poi-marker-red.png');
        //                //        }
        //                //    });
        //                map.setCenter([lng, lat]);
        //                map.setZoom(18);
        //            }
        //        }).da");
                WriteLiteral(@"tagrid('clientPaging').datagrid('highlightRow', 0);
        //        $('.datagrid-pager.pagination').pagination({
        //            displayMsg: ""显示 {total} 条 中 {from} 到 {to} 条""
        //        });
        //    });
        //    // switchRegion();
        //}

        function drawPolygon() {
            mousetool.polygon({
                strokeColor: ""#FF33FF"",
                strokeOpacity: 1,
                strokeWeight: 6,
                strokeOpacity: 0.2,
                fillColor: '#1791fc',
                fillOpacity: 0.4,
                // 线样式还支持 'dashed'
                strokeStyle: ""solid"",
                // strokeStyle是dashed时有效
                // strokeDasharray: [30,10],
            })

        }

        function addVillage(e) {
            document.getElementById('cb').checked = false;
            form.render('checkbox');
            mousetool.close(true);
            var errors = document.getElementsByClassName(""clRedError"");
            for (var i = ");
                WriteLiteral(@"0; i < errors.length; i++) {
                errors[i].remove();
            }
            if (document.getElementById('fieldHidden').value === """") {
                var div = document.createElement('div');
                div.classList.add(""clRedError"");
                div.innerHTML += `<p class=""mb-5"">请输入边界</p>`;
                        e.appendChild(div);
            } else {
                var inputs = e.getElementsByTagName('input');
            var selects = e.getElementsByTagName('select');
            var village_name = inputs[0].value;
                var village_address = inputs[1].value;
                var village_region = $('#selectProvinceD').find("":selected"").text() + $('#selectCityD').find("":selected"").text() + $('#selectCountyD').find("":selected"").text();
                console.log(village_region);

            var village_type = selects[3].value;
            var village_bounds = document.getElementById('fieldHidden').value;
            var village_x = String(JSON.parse(d");
                WriteLiteral(@"ocument.getElementById('fieldHidden').value)[0][0]);
            var village_y = String(JSON.parse(document.getElementById('fieldHidden').value)[0][1]);
            var village_lng = String(JSON.parse(document.getElementById('fieldHidden').value)[0][0]);
            var village_lat = String(JSON.parse(document.getElementById('fieldHidden').value)[0][1]);
            var source = String(2);
            $.ajax({
                type: ""post"",
                url: `./API/CreateVillage`,
                data: { ""village_name"": village_name, ""village_address"": village_address, ""village_region"": village_region, ""village_type"": village_type, ""village_bounds"": village_bounds, ""village_x"": village_x, ""village_y"": village_y, ""village_lng"": village_lng, ""village_lat"": village_lat, ""source"": source },
                dataType: ""json"",
                success: function (data) {
                    if (data.length !== 0) {
                        var div = document.createElement('div');
                        ");
                WriteLiteral(@"div.classList.add(""clRedError"");
                        data.forEach(function (error) {
                            div.innerHTML += `<p class=""mb-5"">${error}</p>`;
                        })
                        e.appendChild(div);
                    } else {
                        //document.getElementsByClassName(""modalSmall"")[0].remove();
                        layer.closeAll();
                        layer.msg(""小区已添加"");
                        //$('#dg').datagrid('insertRow', {
                        //    index: 0,
                        //    row: {
                        //        village_name: village_name,
                        //        village_address: village_address,
                        //        village_region: village_region,
                        //        village_type: village_type
                        //    }
                        //});


                    }
                },
                error: function (item, err) {
                    ");
                WriteLiteral(@"console.log(err);
                }
            });
            }
    
        }

        function newVillage(e) {
            // render a form and mousetool

            for (var i = 0; i < document.getElementsByClassName(""modalSmall"").length; i++) {
                document.getElementsByClassName(""modalSmall"")[i].remove();
            }

            mousetool.close(true);
            var selectFilter = document.getElementById('selectFilter');
            var selectProvince = selectFilter.children[0];
            var selectCity = selectFilter.children[1];
            var selectCounty = selectFilter.children[2];

            var selectedProvince = $('#selectProvince').find("":selected"").text();
                        var selectedCity = $('#selectCity').find("":selected"").text();
                        var selectedCounty = $('#selectCounty').find("":selected"").text();
            var selectProvinceD = `<select id=""selectProvinceD"" name=""province"" class=""selectPCC"" required>`;
           ");
                WriteLiteral(@" var optionsProvince = selectProvince.innerHTML;
            var index = optionsProvince.match(selectedProvince)[""index""];
            var optionsProvinceF = optionsProvince.slice(0, index - 1) + ""selected"" + optionsProvince.slice(index - 1);
            selectProvinceD += optionsProvinceF + `</select>`;

              var selectCityD = `<select id=""selectCityD"" name=""city"" class=""selectPCC"" required>`;
            var optionsCity = selectCity.innerHTML;
            var index = optionsCity.match(selectedCity)[""index""];
            var optionsCityF = optionsCity.slice(0, index - 1) + ""selected"" + optionsCity.slice(index - 1);
            selectCityD += optionsCityF + `</select>`;
              var selectCountyD = `<select id=""selectCountyD"" name=""county"" class=""selectPCC"" required>`;
            var optionsCounty = selectCounty.innerHTML;
            var index = optionsCounty.match(selectedCounty)[""index""];
            var optionsCountyF = optionsCounty.slice(0, index - 1) + ""selected"" + optionsCo");
                WriteLiteral(@"unty.slice(index - 1);
            selectCountyD += optionsCountyF + `</select>`;
            //var textoptionProvince = $('#selectProvince').find("":selected"").text();
            //var valoptionProvince = $('#selectProvince').find("":selected"").val();
            //var textoptionCity = $('#selectCity').find("":selected"").text();
            //var valoptionCity = $('#selectCity').find("":selected"").val();
            //var textoptionCounty = $('#selectCounty').find("":selected"").text();
            //var valoptionCounty = $('#selectCounty').find("":selected"").val();
            layer.open({
                btn: [],
                maxWidth: 750,
  //               yes: function(index, layero){
  //  //按钮【按钮一】的回调
  //                   document.getElementsByTagName('form')[0].submit();
  //},
                shade: 0,
                title: ""新建小区"",
                content: `<form class=""layui-form layui-form-pane"" action="""" onsubmit=""event.preventDefault();addVillage(this);"">
                   <d");
                WriteLiteral(@"iv class=""layui-form-item"">
                    <label class=""layui-form-label"">小区名称</label>
                <div class=""layui-input-block"">

                      <input type=""text"" name=""village_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" required>
                  
</div>
                  </div>
                  <div class=""layui-form-item"">
                    <label class=""layui-form-label"">详细地址</label>
                <div class=""layui-input-block"">

                   
                      <input type=""text"" name=""village_address"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input""  required>
                   
  </div>
                  </div>
                  <!--<div class=""layui-form-item"">
                    <label class=""layui-form-label"">区域</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""village_region"" lay-verify=""required"" placeholder=""请输入"" ");
                WriteLiteral(@"autocomplete=""off"" class=""layui-input""  required>
                    </div>
                  </div>
               <div class=""layui-form-item"">
                    <label class=""layui-form-label"">类型</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""village_type"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input""  required>
                    </div>
                  </div>-->

              <!--<div class=""layui-form-item"">
                <label class=""layui-form-label"">区域</label>
                <div class=""layui-input-block"">
                  <select name=""region"" lay-filter=""aihao""  required>
                            <option value=""内蒙古自治区/赤峰市/红山区"">内蒙古自治区/赤峰市/红山区</option>
                            <option value=""内蒙古自治区/赤峰市/元宝山区"">内蒙古自治区/赤峰市/元宝山区</option>
                            <option value=""内蒙古自治区/赤峰市/松山区"">内蒙古自治区/赤峰市/松山区</option>
                            <option value=""内蒙古自治区/赤峰市/阿鲁科尔沁旗""");
                WriteLiteral(@">内蒙古自治区/赤峰市/阿鲁科尔沁旗</option>
                            <option value=""内蒙古自治区/赤峰市/巴林左旗"">内蒙古自治区/赤峰市/巴林左旗</option>
                            <option value=""内蒙古自治区/赤峰市/巴林右旗"">内蒙古自治区/赤峰市/巴林右旗</option>
                            <option value=""内蒙古自治区/赤峰市/林西县"">内蒙古自治区/赤峰市/林西县</option>
                            <option value=""内蒙古自治区/赤峰市/克什克腾旗"">内蒙古自治区/赤峰市/克什克腾旗</option>
                            <option value=""内蒙古自治区/赤峰市/翁牛特旗"">内蒙古自治区/赤峰市/翁牛特旗</option>
                            <option value=""内蒙古自治区/赤峰市/喀喇沁旗"">内蒙古自治区/赤峰市/喀喇沁旗</option>
                            <option value=""内蒙古自治区/赤峰市/宁城县"">内蒙古自治区/赤峰市/宁城县</option>
                            <option value=""内蒙古自治区/赤峰市/敖汉旗"">内蒙古自治区/赤峰市/敖汉旗</option>
                  </select>
                </div>
              </div>-->`+`  
  <div class=""layui-form-item"">
    <label class=""layui-form-label"">区域</label>
    <div class=""layui-input-inline"">` + selectProvinceD + `</div><div class=""layui-input-inline"">` + selectCityD + `</div><div class=""layui-input-i");
                WriteLiteral(@"nline"">` + selectCountyD +
`</select></div></div><div class=""layui-form-item"">
                <label class=""layui-form-label"">类型</label>
                <div class=""layui-input-block"">
                  <select name=""type"" lay-filter=""aihao""  required>
                    <option value=""商务住宅;住宅区;住宅小区"">商务住宅;住宅区;住宅小区</option>
                  </select>
                </div>
              </div>
                <div class=""layui-form-item hidden"">
                    <label class=""layui-form-label""></label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" id=""fieldHidden"" name=""village_bounds"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"">
                    </div>
                  </div>
<div class=""layui-form-item"">
                <label class=""layui-form-label"">编辑边界</label>
                <div class=""layui-input-block"">
                  <input type=""checkbox"" name=""close"" lay-skin=""switch"" lay-text=""是|否"" la");
                WriteLiteral(@"y-filter=""switchT"" id='cb'>
                </div>
              </div>




<!--<div class=""layui-form-item"">
                    <div class=""layui-input-block"">
                      <button class=""layui-btn layui-btn-normal fr"" lay-submit="""" lay-filter=""demo1"">保存</button>
                    </div>
                  </div>
                  </div>-->
 <button type=""submit"" class=""layui-btn layui-btn-normal fr"">保存</button>
</form>`
               
            });


//            var container = document.createElement('div');
//            container.setAttribute(""class"", ""modalSmall"");
//            container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">新建小区</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div><form class=""layui-form layui-form-pane"" action="""" onsubmit=""event.preventDefault();addVillage(this);"">
//                   <div class=""layui-form-item"">
//                 ");
                WriteLiteral(@"   <label class=""layui-form-label"">小区名称</label>
//                    <div class=""layui-input-inline"">
//                      <input type=""text"" name=""village_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" >
//                    </div>
//                  </div>
//                  <div class=""layui-form-item"">
//                    <label class=""layui-form-label"">详细地址</label>
//                    <div class=""layui-input-inline"">
//                      <input type=""text"" name=""village_address"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" >
//                    </div>
//                  </div>
//                  <!--<div class=""layui-form-item"">
//                    <label class=""layui-form-label"">区域</label>
//                    <div class=""layui-input-inline"">
//                      <input type=""text"" name=""village_region"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" >
//         ");
                WriteLiteral(@"           </div>
//                  </div>
//               <div class=""layui-form-item"">
//                    <label class=""layui-form-label"">类型</label>
//                    <div class=""layui-input-inline"">
//                      <input type=""text"" name=""village_type"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" >
//                    </div>
//                  </div>-->

//              <div class=""layui-form-item"">
//                <label class=""layui-form-label"">区域</label>
//                <div class=""layui-input-block"">
//                  <select name=""region"" lay-filter=""aihao"">
//                            <option value=""内蒙古自治区/赤峰市/红山区"">内蒙古自治区/赤峰市/红山区</option>
//                            <option value=""内蒙古自治区/赤峰市/元宝山区"">内蒙古自治区/赤峰市/元宝山区</option>
//                            <option value=""内蒙古自治区/赤峰市/松山区"">内蒙古自治区/赤峰市/松山区</option>
//                            <option value=""内蒙古自治区/赤峰市/阿鲁科尔沁旗"">内蒙古自治区/赤峰市/阿鲁科尔沁旗</option>
//                      ");
                WriteLiteral(@"      <option value=""内蒙古自治区/赤峰市/巴林左旗"">内蒙古自治区/赤峰市/巴林左旗</option>
//                            <option value=""内蒙古自治区/赤峰市/巴林右旗"">内蒙古自治区/赤峰市/巴林右旗</option>
//                            <option value=""内蒙古自治区/赤峰市/林西县"">内蒙古自治区/赤峰市/林西县</option>
//                            <option value=""内蒙古自治区/赤峰市/克什克腾旗"">内蒙古自治区/赤峰市/克什克腾旗</option>
//                            <option value=""内蒙古自治区/赤峰市/翁牛特旗"">内蒙古自治区/赤峰市/翁牛特旗</option>
//                            <option value=""内蒙古自治区/赤峰市/喀喇沁旗"">内蒙古自治区/赤峰市/喀喇沁旗</option>
//                            <option value=""内蒙古自治区/赤峰市/宁城县"">内蒙古自治区/赤峰市/宁城县</option>
//                            <option value=""内蒙古自治区/赤峰市/敖汉旗"">内蒙古自治区/赤峰市/敖汉旗</option>
//                  </select>
//                </div>
//              </div>

//<div class=""layui-form-item"">
//                <label class=""layui-form-label"">类型</label>
//                <div class=""layui-input-block"">
//                  <select name=""type"" lay-filter=""aihao"">
//                    <option value=""商务住宅;住宅区;住宅小区"">商务住宅;住");
                WriteLiteral(@"宅区;住宅小区</option>
//                  </select>
//                </div>
//              </div>
//                <div class=""layui-form-item hidden"">
//                    <label class=""layui-form-label""></label>
//                    <div class=""layui-input-inline"">
//                      <input type=""text"" id=""fieldHidden"" name=""village_bounds"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" >
//                    </div>
//                  </div>
//<div class=""layui-form-item"">
//                <label class=""layui-form-label"">编辑边界</label>
//                <div class=""layui-input-block"">
//                  <input type=""checkbox"" name=""close"" lay-skin=""switch"" lay-text=""是|否"" lay-filter=""switchT"" id='cb'>
//                </div>
//              </div>



//<div class=""layui-form-item"">
//                    <div class=""layui-input-block"">
//                      <button class=""layui-btn layui-btn-normal fr"" lay-submit="""" lay-filter=""demo1"">保存</button>");
                WriteLiteral(@"
//                    </div>
//                  </div>
//                  </div>

//</form>`;
//            //htmlPoiDetail = `<div class=""modalSmall""><div class=""flex""><span>小区信息</span><button>x</button></div><div><span>小区名称</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div><span>详细地址</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div><span>区域</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div><span>类型</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div></div>`;
//            document.getElementsByTagName(""body"")[0].appendChild(container);
            form.render();
            form.on('switch(switchT)', function (data) {
                if (data.elem.checked) {
                    drawPolygon();
                } else {
                    mousetool.close(true);
                }
                //console.log(data.elem); //得到checkbox原始DOM对象
                //console.log(data.elem.checked); //开关是否开启，true或者false
                //console.log(data.");
                WriteLiteral(@"value); //开关value值，也可以通过data.elem.value得到
                //console.log(data.othis); //得到美化后的DOM对象
            });



        }



        function addBuilding(e) {
            //document.getElementById('cb').checked = false;
            //form.render('checkbox');
            //mousetool.close(true);
            var errors = document.getElementsByClassName(""clRedError"");
            for (var i = 0; i < errors.length; i++) {
                errors[i].remove();
            }
            var inputs = e.getElementsByTagName('input');
            var selects = e.getElementsByTagName('select');
            var building_number = inputs[0].value;
            var building_name = inputs[1].value;
            var building_address = inputs[2].value;
            var building_region = $('#selectProvinceD').find("":selected"").text() + $('#selectCityD').find("":selected"").text() + $('#selectCountyD').find("":selected"").text();
            var building_type = selects[3].value;
            //var building_");
                WriteLiteral(@"bounds = document.getElementById('fieldHidden').value;
            //var building_x = String(JSON.parse(document.getElementById('fieldHidden').value)[0][0]);
            //var building_y = String(JSON.parse(document.getElementById('fieldHidden').value)[0][1]);
            //var building_lng = String(JSON.parse(document.getElementById('fieldHidden').value)[0][0]);
            //var building_lat = String(JSON.parse(document.getElementById('fieldHidden').value)[0][1]);
            var source = String(2);
            $.ajax({
                type: ""post"",
                url: `./API/CreateBuilding`,
                //data: { ""building_number"": building_number, ""building_name"": building_name, ""building_address"": building_address, ""building_region"": building_region, ""building_type"": building_type, ""building_bounds"" : building_bounds, ""building_x"": building_x, ""building_y"": building_y, ""building_lng"": building_lng, ""building_lat"":building_lat, ""source"":source },
                data: { ""building_number"": b");
                WriteLiteral(@"uilding_number, ""building_name"": building_name, ""building_address"": building_address, ""building_region"": building_region, ""building_type"": building_type, ""source"": source },


                dataType: ""json"",
                success: function (data) {
                    if (data.length !== 0) {
                        var div = document.createElement('div');
                        div.classList.add(""clRedError"");
                        data.forEach(function (error) {
                            div.innerHTML += `<p class=""mb-5"">${error}</p>`;
                        })
                        e.appendChild(div);
                    } else {
                        //document.getElementsByClassName(""modalSmall"")[0].remove();
                        layer.closeAll();
                        layer.msg(""楼宇已添加"");
                        //$('#dg').datagrid('insertRow', {
                        //    index: 0,
                        //    row: {
                        //        village_nam");
                WriteLiteral(@"e: village_name,
                        //        village_address: village_address,
                        //        village_region: village_region,
                        //        village_type: village_type
                        //    }
                        //});


                    }
                },
                error: function (item, err) {
                    console.log(err);
                }
            });
        }

        function newBuilding(e) {
            // render a form and mousetool

            for (var i = 0; i < document.getElementsByClassName(""modalSmall"").length; i++) {
                document.getElementsByClassName(""modalSmall"")[i].remove();
            }
            mousetool.close(true);
                    var selectFilter = document.getElementById('selectFilter');
            var selectProvince = selectFilter.children[0];
            var selectCity = selectFilter.children[1];
            var selectCounty = selectFilter.children[2];

   ");
                WriteLiteral(@"         var selectedProvince = $('#selectProvince').find("":selected"").text();
                        var selectedCity = $('#selectCity').find("":selected"").text();
                        var selectedCounty = $('#selectCounty').find("":selected"").text();
            var selectProvinceD = `<select id=""selectProvinceD"" name=""province"" class=""selectPCC"" required>`;
            var optionsProvince = selectProvince.innerHTML;
            var index = optionsProvince.match(selectedProvince)[""index""];
            var optionsProvinceF = optionsProvince.slice(0, index - 1) + ""selected"" + optionsProvince.slice(index - 1);
            selectProvinceD += optionsProvinceF + `</select>`;

              var selectCityD = `<select id=""selectCityD"" name=""city"" class=""selectPCC"" required>`;
            var optionsCity = selectCity.innerHTML;
            var index = optionsCity.match(selectedCity)[""index""];
            var optionsCityF = optionsCity.slice(0, index - 1) + ""selected"" + optionsCity.slice(index - 1);
  ");
                WriteLiteral(@"          selectCityD += optionsCityF + `</select>`;
              var selectCountyD = `<select id=""selectCountyD"" name=""county"" class=""selectPCC"" required>`;
            var optionsCounty = selectCounty.innerHTML;
            var index = optionsCounty.match(selectedCounty)[""index""];
            var optionsCountyF = optionsCounty.slice(0, index - 1) + ""selected"" + optionsCounty.slice(index - 1);
            selectCountyD += optionsCountyF + `</select>`;
              layer.open({
                  btn: [],
                  maxWidth: 750,
  //               yes: function(index, layero){
  //  //按钮【按钮一】的回调
  //                   document.getElementsByTagName('form')[0].submit();
  //},
                shade: 0,
                title: ""新建楼宇"",
                content: `<form class=""layui-form layui-form-pane"" action="""" onsubmit=""event.preventDefault();addBuilding(this);"">
                   <div class=""layui-form-item"">
                    <label class=""layui-form-label"">楼宇号码</label>
          ");
                WriteLiteral(@"      <div class=""layui-input-block"">
                      <input type=""text"" name=""building_number"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" required>
                    </div>
                  </div>
              <div class=""layui-form-item"">
                    <label class=""layui-form-label"">楼宇名称</label>
                <div class=""layui-input-block"">
                      <input type=""text"" name=""building_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" required>
                    </div>
                  </div>
                  <div class=""layui-form-item"">
                    <label class=""layui-form-label"">详细地址</label>
                <div class=""layui-input-block"">
                      <input type=""text"" name=""building_address"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" required>
                    </div>
                  </div>
       <div class=""layui-form-item"">
");
                WriteLiteral(@"    <label class=""layui-form-label"">区域</label>
    <div class=""layui-input-inline"">` + selectProvinceD + `</div><div class=""layui-input-inline"">` + selectCityD + `</div><div class=""layui-input-inline"">` + selectCountyD +
`</select></div></div>

<div class=""layui-form-item"">
                <label class=""layui-form-label"">类型</label>
                <div class=""layui-input-block"">
                  <select name=""type"" lay-filter=""aihao"" required>
                    <option value=""地名地址信息;门牌信息;楼栋号"">地名地址信息;门牌信息;楼栋号</option>
                  </select>
                </div>
              </div>
               <!--<div class=""layui-form-item hidden"">
                    <label class=""layui-form-label""></label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" id=""fieldHidden"" name=""building_bounds"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" >
                    </div>
                  </div>
<div class=""layui-form-i");
                WriteLiteral(@"tem"">
                <label class=""layui-form-label"">编辑边界</label>
                <div class=""layui-input-block"">
                  <input type=""checkbox"" name=""close"" lay-skin=""switch"" lay-text=""是|否"" lay-filter=""switchT"" id=""cb"">
                </div>
              </div>-->


<!--<div class=""layui-form-item"">
                    <div class=""layui-input-block"">
                      <button class=""layui-btn layui-btn-normal fr"" lay-submit="""" lay-filter=""demo1"">保存</button>
                    </div>
                  </div>
                  </div>-->
 <button type=""submit"" class=""layui-btn layui-btn-normal fr"">保存</button>

</form>`
               
              });


//            var container = document.createElement('div');
//            container.setAttribute(""class"", ""modalSmall"");
//            container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">新建楼宇</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""c");
                WriteLiteral(@"loseModal(this);"">X</button></div><form class=""layui-form layui-form-pane"" action="""" onsubmit=""event.preventDefault();addBuilding(this);"">
//                   <div class=""layui-form-item"">
//                    <label class=""layui-form-label"">楼宇号码</label>
//                    <div class=""layui-input-inline"">
//                      <input type=""text"" name=""building_number"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" >
//                    </div>
//                  </div>
//              <div class=""layui-form-item"">
//                    <label class=""layui-form-label"">楼宇名称</label>
//                    <div class=""layui-input-inline"">
//                      <input type=""text"" name=""building_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" >
//                    </div>
//                  </div>
//                  <div class=""layui-form-item"">
//                    <label class=""layui-form-label"">详细地址</label>
//      ");
                WriteLiteral(@"              <div class=""layui-input-inline"">
//                      <input type=""text"" name=""building_address"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" >
//                    </div>
//                  </div>
//              <div class=""layui-form-item"">
//                <label class=""layui-form-label"">区域</label>
//                <div class=""layui-input-block"">
//                  <select name=""region"" lay-filter=""aihao"">
//                            <option value=""内蒙古自治区/赤峰市/红山区"">内蒙古自治区/赤峰市/红山区</option>
//                            <option value=""内蒙古自治区/赤峰市/元宝山区"">内蒙古自治区/赤峰市/元宝山区</option>
//                            <option value=""内蒙古自治区/赤峰市/松山区"">内蒙古自治区/赤峰市/松山区</option>
//                            <option value=""内蒙古自治区/赤峰市/阿鲁科尔沁旗"">内蒙古自治区/赤峰市/阿鲁科尔沁旗</option>
//                            <option value=""内蒙古自治区/赤峰市/巴林左旗"">内蒙古自治区/赤峰市/巴林左旗</option>
//                            <option value=""内蒙古自治区/赤峰市/巴林右旗"">内蒙古自治区/赤峰市/巴林右旗</option>
//                ");
                WriteLiteral(@"            <option value=""内蒙古自治区/赤峰市/林西县"">内蒙古自治区/赤峰市/林西县</option>
//                            <option value=""内蒙古自治区/赤峰市/克什克腾旗"">内蒙古自治区/赤峰市/克什克腾旗</option>
//                            <option value=""内蒙古自治区/赤峰市/翁牛特旗"">内蒙古自治区/赤峰市/翁牛特旗</option>
//                            <option value=""内蒙古自治区/赤峰市/喀喇沁旗"">内蒙古自治区/赤峰市/喀喇沁旗</option>
//                            <option value=""内蒙古自治区/赤峰市/宁城县"">内蒙古自治区/赤峰市/宁城县</option>
//                            <option value=""内蒙古自治区/赤峰市/敖汉旗"">内蒙古自治区/赤峰市/敖汉旗</option>
//                  </select>
//                </div>
//              </div>

//<div class=""layui-form-item"">
//                <label class=""layui-form-label"">类型</label>
//                <div class=""layui-input-block"">
//                  <select name=""type"" lay-filter=""aihao"">
//                    <option value=""地名地址信息;门牌信息;楼栋号"">地名地址信息;门牌信息;楼栋号</option>
//                  </select>
//                </div>
//              </div>
//               <!--<div class=""layui-form-item hidden"">
//      ");
                WriteLiteral(@"              <label class=""layui-form-label""></label>
//                    <div class=""layui-input-inline"">
//                      <input type=""text"" id=""fieldHidden"" name=""building_bounds"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" >
//                    </div>
//                  </div>
//<div class=""layui-form-item"">
//                <label class=""layui-form-label"">编辑边界</label>
//                <div class=""layui-input-block"">
//                  <input type=""checkbox"" name=""close"" lay-skin=""switch"" lay-text=""是|否"" lay-filter=""switchT"" id=""cb"">
//                </div>
//              </div>-->


//<div class=""layui-form-item"">
//                    <div class=""layui-input-block"">
//                      <button class=""layui-btn layui-btn-normal fr"" lay-submit="""" lay-filter=""demo1"">保存</button>
//                    </div>
//                  </div>
//                  </div>

//</form>`;
            //htmlPoiDetail = `<div class=""modalSmall""><div");
                WriteLiteral(@" class=""flex""><span>小区信息</span><button>x</button></div><div><span>小区名称</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div><span>详细地址</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div><span>区域</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div><span>类型</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div></div>`;
            //document.getElementsByTagName(""body"")[0].appendChild(container);
            form.render();
            //form.on('switch(switchT)', function (data) {
            //    if (data.elem.checked) {
            //        drawPolygon();
            //    } else {
            //        mousetool.close(true);
            //    }

            //});
        }

        function getPoiDetail(e) {
            setTimeout(function () {
                var dataGuid = e.getAttribute(""data-guid"");
                $.ajax({
                    type: ""get"",
                    url: `./API/DetailsVillage?id=${dataGuid}`,
                    content");
                WriteLiteral(@"Type: ""application/json; charset=utf-8"",
                    dataType: ""json"",
                    success: function (data) {
                             layer.open({
                                 btn: [],
                                 move: false,
                                 offset: ['100px','80%'],
  //               yes: function(index, layero){
  //  //按钮【按钮一】的回调
  //                   document.getElementsByTagName('form')[0].submit();
  //},
                shade: 0,
                title: ""小区信息"",
                content: `<div class=""mb-10""><span class=""mr-5 bold"">小区名称:</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">详细地址:</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">区域:</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">类型:</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div>`
               
            });
");
                WriteLiteral(@"                        //var container = document.createElement('div');
                        //container.setAttribute(""class"", ""modalSmall"");
                        //container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">小区信息</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div><div class=""mb-10""><span class=""mr-5 bold"">小区名称:</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">详细地址:</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">区域:</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">类型:</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div>`;
                        ////htmlPoiDetail = `<div class=""modalSmall""><div class=""flex""><span>小区信息</span><button>x</button></div><div><span>小区名称</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></d");
                WriteLiteral(@"iv><div><span>详细地址</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div><span>区域</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div><span>类型</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div></div>`;
                        //document.getElementsByTagName(""body"")[0].appendChild(container);
                    },
                    error: function (item, err) {
                        console.log(err);
                    }
                });
            }, 1500);


        }

        function getPoiDetail2(e) {
            setTimeout(function () {
                console.log('clicked second');
                var dataGuid = e.getAttribute(""data-guid"");
                $.ajax({
                    type: ""get"",
                    url: `./API/DetailsBuilding?id=${dataGuid}`,
                    contentType: ""application/json; charset=utf-8"",
                    dataType: ""json"",
                    success: function (data) {
                               ");
                WriteLiteral(@"       layer.open({
                                          btn: [],
                                          move: false,
                                 offset: ['100px','80%'],
  //               yes: function(index, layero){
  //  //按钮【按钮一】的回调
  //                   document.getElementsByTagName('form')[0].submit();
  //},
                shade: 0,
                title: ""楼宇信息"",
                content: `<div class=""mb-10""><span class=""mr-5 bold"">楼宇名称:</span><span>${data[""ds""][0][""BUILDING_NAME""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">详细地址:</span><span>${data[""ds""][0][""BUILDING_ADDRESS""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">区域:</span><span>${data[""ds""][0][""REGION""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">类型:</span><span>${data[""ds""][0][""TYPE""]}</span></div>`
               
            });
                        //var container = document.createElement('div');
                        //container.setAttribute(""class"", ""modalSmall"");");
                WriteLiteral(@"
                        //container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">楼宇信息</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div><div class=""mb-10""><span class=""mr-5 bold"">楼宇名称:</span><span>${data[""ds""][0][""BUILDING_NAME""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">详细地址:</span><span>${data[""ds""][0][""BUILDING_ADDRESS""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">区域:</span><span>${data[""ds""][0][""REGION""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">类型:</span><span>${data[""ds""][0][""TYPE""]}</span></div>`;
                        ////htmlPoiDetail = `<div class=""modalSmall""><div class=""flex""><span>小区信息</span><button>x</button></div><div><span>小区名称</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div><span>详细地址</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div><span>区域</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div><spa");
                WriteLiteral(@"n>类型</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div></div>`;
                        //document.getElementsByTagName(""body"")[0].appendChild(container);
                    },
                    error: function (item, err) {
                        console.log(err);
                    }
                });
            }, 1500);

        }

        function editPoiNoBounds(e) {
            var errors = document.getElementsByClassName(""clRedError"");
            for (var i = 0; i < errors.length; i++) {
                errors[i].remove();
            }
            var inputs = e.getElementsByTagName('input');
            var village_name = inputs[0].value;
            var village_address = inputs[1].value;
            var village_region = inputs[2].value;
            var village_type = inputs[3].value;
            var dataGuid = e.getAttribute(""data-guid"");
            $.ajax({
                type: ""post"",
                url: `./API/EditVillageNoBounds?id=${dataGuid}`,
     ");
                WriteLiteral(@"           data: { ""village_name"": village_name, ""village_address"": village_address, ""village_region"": village_region, ""village_type"": village_type },
                dataType: ""json"",
                success: function (data) {
                    if (data.length !== 0) {
                        var div = document.createElement('div');
                        div.classList.add(""clRedError"");
                        data.forEach(function (error) {
                            div.innerHTML += `<p class=""mb-5"">${error}</p>`;
                        })
                        e.appendChild(div);
                    } else {
                        document.getElementsByClassName(""modalSmall"")[0].remove();
                        layer.msg(""小区已编辑"");
                        $('#dg').datagrid('updateRow', {
                            index: document.getElementsByTagName(""body"")[0].getAttribute(""data-currentindex""),
                            row: {
                                village_name: vill");
                WriteLiteral(@"age_name,
                                village_address: village_address,
                                village_region: village_region,
                                village_type: village_type
                            }
                        });
                    }
                },
                error: function (item, err) {
                    console.log(err);
                }
            });

        }


        function editPoiBounds(e) {
            document.getElementById('cb').checked = false;
            form.render('checkbox');
            mousetool.close(true);
            var errors = document.getElementsByClassName(""clRedError"");
            for (var i = 0; i < errors.length; i++) {
                errors[i].remove();
            }
            if (document.getElementById('fieldHidden').value === """") {
                var div = document.createElement('div');
                div.classList.add(""clRedError"");
                div.innerHTML += `<p class=""mb-5");
                WriteLiteral(@""">请输入边界</p>`;
                e.appendChild(div);
            } else {
                var inputs = e.getElementsByTagName('input');
                var village_name = inputs[0].value;
                var village_address = inputs[1].value;
                var village_region = inputs[2].value;
                var village_type = inputs[3].value;
                var village_bounds = document.getElementById('fieldHidden').value;
                //var polygon;
                //var overlays = map.getAllOverlays(""polygon"");
                //overlays.forEach(function (overlay) {
                //    if (overlay.getOptions()[""strokeColor""] === ""#D00000"") {
                //        polygon = overlay;
                //    }
                //});
                //village_bounds = ""["";
                //polygon.getPath().forEach(function (coord) {
                //    village_bounds += `[${String(coord[""lng""])},${String(coord[""lat""])}],`;
                //});
                //village_bounds = ");
                WriteLiteral(@"village_bounds.slice(0, village_bounds.length - 1);
                //village_bounds += ""]"";
                var dataGuid = e.getAttribute(""data-guid"");

                $.ajax({
                    type: ""post"",
                    url: `./API/EditVillageBounds?id=${dataGuid}`,
                    data: { ""village_name"": village_name, ""village_address"": village_address, ""village_region"": village_region, ""village_type"": village_type, ""village_bounds"": village_bounds },
                    dataType: ""json"",
                    success: function (data) {
                        if (data.length !== 0) {
                            var div = document.createElement('div');
                            div.classList.add(""clRedError"");
                            data.forEach(function (error) {
                                div.innerHTML += `<p class=""mb-5"">${error}</p>`;
                            })
                            e.appendChild(div);
                        } else {
               ");
                WriteLiteral(@"             layer.closeAll();
                            layer.msg(""小区已编辑"");
                            $('#dg').datagrid('updateRow', {
                                index: document.getElementsByTagName(""body"")[0].getAttribute(""data-currentindex""),
                                row: {
                                    village_name: village_name,
                                    village_address: village_address,
                                    village_region: village_region,
                                    village_type: village_type
                                }
                            });
                        }

                    },
                    error: function (item, err) {
                        console.log(err);
                    }
                });
            }
        }
        //function closeEditor(polygon) {
        //    document.getElementById('cb').checked = false;
        //    form.render('checkbox');
        //    polygon.getE");
                WriteLiteral(@"xtData()[""editor""].close();
        //    document.getElementsByTagName('body')[0].setAttribute('bounds', polygon.getPath());
        //}

        //function closeEditor(polygon) {
        //    document.getElementById('cb').checked = false;
        //    form.render('checkbox');
        //    polygon.getExtData()[""editor""].close();
        //    document.getElementsByTagName('body')[0].setAttribute('bounds', polygon.getPath());
        //    editPoiBounds2(document.getElementsByTagName('form')[0]);
        //}

        function editPoiBounds2(e, polygon) {
            document.getElementById('cb').checked = false;
            form.render('checkbox');
            polygon.getExtData()[""editor""].close();

            var errors = document.getElementsByClassName(""clRedError"");
            for (var i = 0; i < errors.length; i++) {
                errors[i].remove();
            }
            var inputs = e.getElementsByTagName('input');
            var village_name = inputs[0].value;
      ");
                WriteLiteral(@"      var village_address = inputs[1].value;
            var village_region = inputs[2].value;
            var village_type = inputs[3].value;
            village_bounds = ""["";
            polygon.getPath().forEach(function (coord) {
                village_bounds += `[${String(coord[""lng""])},${String(coord[""lat""])}],`;
            });
            village_bounds = village_bounds.slice(0, village_bounds.length - 1);
            village_bounds += ""]"";
            var dataGuid = e.getAttribute(""data-guid"");

            $.ajax({
                type: ""post"",
                url: `./API/EditVillageBounds?id=${dataGuid}`,
                data: { ""village_name"": village_name, ""village_address"": village_address, ""village_region"": village_region, ""village_type"": village_type, ""village_bounds"": village_bounds },
                dataType: ""json"",
                success: function (data) {
                    if (data.length !== 0) {
                        var div = document.createElement('div');
   ");
                WriteLiteral(@"                     div.classList.add(""clRedError"");
                        data.forEach(function (error) {
                            div.innerHTML += `<p class=""mb-5"">${error}</p>`;
                        })
                        e.appendChild(div);
                    } else {
                        layer.closeAll();
                        layer.msg(""小区已编辑"");
                        $('#dg').datagrid('updateRow', {
                            index: document.getElementsByTagName(""body"")[0].getAttribute(""data-currentindex""),
                            row: {
                                village_name: village_name,
                                village_address: village_address,
                                village_region: village_region,
                                village_type: village_type
                            }
                        });
                    }

                },
                error: function (item, err) {
                    console.log(");
                WriteLiteral(@"err);
                }
            });

        }


        function editPoiBuilding(e) {
            var errors = document.getElementsByClassName(""clRedError"");
            for (var i = 0; i < errors.length; i++) {
                errors[i].remove();
            }
            var inputs = e.getElementsByTagName('input');
            var building_number = inputs[0].value;
            var building_name = inputs[1].value;
            var building_address = inputs[2].value
            var building_region = inputs[3].value;
            var building_type = inputs[4].value;
            console.log(building_type);
            var dataGuid = e.getAttribute(""data-guid"");
            $.ajax({
                type: ""post"",
                url: `./API/EditBuilding?id=${dataGuid}`,
                data: { ""building_number"": building_number, ""building_name"": building_name, ""building_address"": building_address, ""building_region"": building_region, ""building_type"": building_type },
                dat");
                WriteLiteral(@"aType: ""json"",
                success: function (data) {
                    if (data.length !== 0) {
                        var div = document.createElement('div');
                        div.classList.add(""clRedError"");
                        data.forEach(function (error) {
                            div.innerHTML += `<p class=""mb-5"">${error}</p>`;
                        })
                        e.appendChild(div);
                    } else {
                        layer.closeAll();
                        layer.msg(""楼宇已编辑"");
                        $('#dg2').datagrid('updateRow', {
                            index: document.getElementsByTagName(""body"")[0].getAttribute(""data-currentindex""),
                            row: {
                                building_name: building_name,
                                building_address: building_address
                            }
                        });
                    }
                },
                error: func");
                WriteLiteral(@"tion (item, err) {
                    console.log(err);
                }
            });

        }
        //                    if (data[""ds""][0][""VILLAGE_BOUNDS""] == ""null"") {
        //                        var container = document.createElement('div');
        //                        container.setAttribute(""class"", ""modalSmall"");
        //                        container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">编辑小区信息</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div><form class=""layui-form layui-form-pane"" action="""" onsubmit=""event.preventDefault();editPoiNoBounds(this);"" data-guid=${dataGuid}>
        //       <div class=""layui-form-item"">
        //        <label class=""layui-form-label"">小区名称</label>
        //        <div class=""layui-input-inline"">
        //          <input type=""text"" name=""village_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" cl");
                WriteLiteral(@"ass=""layui-input"" value=""${data[""ds""][0][""VILLAGE_NAME""]}"">
        //        </div>
        //      </div>
        //      <div class=""layui-form-item"">
        //        <label class=""layui-form-label"">详细地址</label>
        //        <div class=""layui-input-inline"">
        //          <input type=""text"" name=""village_address"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""VILLAGE_ADDRESS""]}"">
        //        </div>
        //      </div>
        //      <div class=""layui-form-item"">
        //        <label class=""layui-form-label"">区域</label>
        //        <div class=""layui-input-inline"">
        //          <input type=""text"" name=""village_region"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""VILLAGE_REGION""]}"">
        //        </div>
        //      </div>
        //      <div class=""layui-form-item"">
        //        <label class=""layui-form-label"">类型</label>
        ");
                WriteLiteral(@"//        <div class=""layui-input-inline"">
        //          <input type=""text"" name=""village_type"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""VILLAGE_TYPE""]}"">
        //        </div>
        //      </div>
        //      <!--<div class=""layui-form-item"">
        //        <label class=""layui-form-label"">区域</label>
        //        <div class=""layui-input-block"">
        //          <select name=""village_region"" lay-filter=""aihao"">
        //            <option value=""hsq"">内蒙古自治区/赤峰市/红山区</option>
        //            <option value=""ybsq"">内蒙古自治区/赤峰市/元宝山区</option>
        //            <option value=""ssq"">内蒙古自治区/赤峰市/松山区/option>
        //            <option value=""alkexq"">内蒙古自治区/赤峰市/阿鲁科尔沁旗</option>
        //            <option value=""blzq"">内蒙古自治区/赤峰市/巴林左旗</option>
        //            <option value=""blyq"">内蒙古自治区/赤峰市/巴林右旗</option>
        //            <option value=""lxx"">内蒙古自治区/赤峰市/林西县</option>
        //            <option valu");
                WriteLiteral(@"e=""ksktq"">内蒙古自治区/赤峰市/克什克腾旗</option>
        //            <option value=""wntq"">内蒙古自治区/赤峰市/翁牛特旗</option>
        //            <option value=""klxq"">内蒙古自治区/赤峰市/喀喇沁旗</option>
        //            <option value=""ahq"">内蒙古自治区/赤峰市/敖汉旗</option>
        //          </select>
        //        </div>
        //      </div>
        //     <div class=""layui-form-item"">
        //        <label class=""layui-form-label"">类型</label>
        //        <div class=""layui-input-block"">
        //          <select name=""village_type"" lay-filter=""aihao"">
        //            <option value=""zzxq"">商务住宅;住宅区;住宅小区</option>
        //          </select>
        //        </div>
        //      </div>-->



        //<div class=""layui-form-item"">
        //        <div class=""layui-input-block"">
        //          <button class=""layui-btn layui-btn-normal fr"" lay-submit="""" lay-filter=""demo1"">保存</button>
        //        </div>
        //      </div>
        //      </div>

        //</form>`;
        //htmlP");
                WriteLiteral(@"oiDetail = `<div class=""modalSmall""><div class=""flex""><span>小区信息</span><button>x</button></div><div><span>小区名称</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div><span>详细地址</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div><span>区域</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div><span>类型</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div></div>`;
        //    document.getElementsByTagName(""body"")[0].appendChild(container);
        //    form.render();
        //     console.log('clicked second');
        //} else {
        //var polygon;
        //var overlays = map.getAllOverlays(""polygon"");
        //overlays.forEach(function (overlay) {
        //    var bounds2 = ""["";
        //    overlay.getPath().forEach(function (coord) {
        //        var lng = coord[""lng""];
        //        var lat = coord[""lat""];
        //        bounds2 += `[${String(lng)},${String(lat)}],`;
        //    });
        //    bounds2 = bounds2.slice(0, bounds2.lengt");
                WriteLiteral(@"h - 1);
        //    bounds2 += ""]"";
        //    if (data[""ds""][0][""VILLAGE_BOUNDS""] === bounds2) {
        //        polygon = overlay;
        //    }
        //});
        //console.log(polygon);

        function editPoi(e) {
            setTimeout(function () {
                var dataGuid = e.getAttribute(""data-guid"");
                $.ajax({
                    type: ""get"",
                    url: `./API/DetailsVillage?id=${dataGuid}`,
                    contentType: ""application/json; charset=utf-8"",
                    dataType: ""json"",
                    success: function (data) {
                        if (data[""ds""][0][""VILLAGE_BOUNDS""] === null) {
                            
                            layer.open({
                btn: [],
  //               yes: function(index, layero){
  //  //按钮【按钮一】的回调
  //                   document.getElementsByTagName('form')[0].submit();
  //},
                shade: 0,
                title: ""编辑小区信息"",
                c");
                WriteLiteral(@"ontent: `<form class=""layui-form layui-form-pane"" action="""" onsubmit=""event.preventDefault();editPoiBounds(this);"" data-guid=${dataGuid}>
                   <div class=""layui-form-item"">
                    <label class=""layui-form-label"">小区名称</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""village_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" required value=""${data[""ds""][0][""VILLAGE_NAME""]}"">
                    </div>
                  </div>
                  <div class=""layui-form-item"">
                    <label class=""layui-form-label"">详细地址</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""village_address"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input""  required  value=""${data[""ds""][0][""VILLAGE_ADDRESS""]}"">
                    </div>
                  </div>
                  <!--<div class=""layui-form-i");
                WriteLiteral(@"tem"">
                    <label class=""layui-form-label"">区域</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""village_region"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input""  required value=""${data[""ds""][0][""VILLAGE_REGION""]}"">
                    </div>
                  </div>
               <div class=""layui-form-item"">
                    <label class=""layui-form-label"">类型</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""village_type"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input""  required  value=""${data[""ds""][0][""VILLAGE_TYPE""]}"">
                    </div>
                  </div>-->

              <div class=""layui-form-item"">
                <label class=""layui-form-label"">区域</label>
                <div class=""layui-input-block"">
                  <select name=""region"" required>
                          ");
                WriteLiteral(@"  <option value=""` + data[""ds""][0][""VILLAGE_REGION""] + `"">` + data[""ds""][0][""VILLAGE_REGION""] + `
                  </option></select>
                </div>
              </div>

<div class=""layui-form-item"">
                <label class=""layui-form-label"">类型</label>
                <div class=""layui-input-block"">
                  <select name=""type"" lay-filter=""aihao""  required>
                    <option value=""商务住宅;住宅区;住宅小区"">商务住宅;住宅区;住宅小区</option>
                  </select>
                </div>
              </div>
                <div class=""layui-form-item hidden"">
                    <label class=""layui-form-label""></label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" id=""fieldHidden"" name=""village_bounds"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"">
                    </div>
                  </div>
<div class=""layui-form-item"">
                <label class=""layui-form-label"">编辑边界</label>
   ");
                WriteLiteral(@"             <div class=""layui-input-block"">
                  <input type=""checkbox"" name=""close"" lay-skin=""switch"" lay-text=""是|否"" lay-filter=""switchT"" id='cb'>
                </div>
              </div>




<!--<div class=""layui-form-item"">
                    <div class=""layui-input-block"">
                      <button class=""layui-btn layui-btn-normal fr"" lay-submit="""" lay-filter=""demo1"">保存</button>
                    </div>
                  </div>
                  </div>-->
 <button type=""submit"" class=""layui-btn layui-btn-normal fr"">保存</button>
</form>`
               
            });

//                            var container = document.createElement('div');
//                            container.setAttribute(""class"", ""modalSmall"");
//                            container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">编辑小区信息</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button");
                WriteLiteral(@"></div><form class=""layui-form layui-form-pane"" action="""" onsubmit=""event.preventDefault();editPoiBounds(this);"" data-guid=${dataGuid}>
//                   <div class=""layui-form-item"">
//                    <label class=""layui-form-label"">小区名称</label>
//                    <div class=""layui-input-inline"">
//                      <input type=""text"" name=""village_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""VILLAGE_NAME""]}"">
//                    </div>
//                  </div>
//                  <div class=""layui-form-item"">
//                    <label class=""layui-form-label"">详细地址</label>
//                    <div class=""layui-input-inline"">
//                      <input type=""text"" name=""village_address"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""VILLAGE_ADDRESS""]}"">
//                    </div>
//                  </div>
//                  <!--<div class=""layui-fo");
                WriteLiteral(@"rm-item"">
//                    <label class=""layui-form-label"">区域</label>
//                    <div class=""layui-input-inline"">
//                      <input type=""text"" name=""village_region"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""VILLAGE_REGION""]}"">
//                    </div>
//                  </div>
//                  <div class=""layui-form-item"">
//                    <label class=""layui-form-label"">类型</label>
//                    <div class=""layui-input-inline"">
//                      <input type=""text"" name=""village_type"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""VILLAGE_TYPE""]}"">
//                    </div>
//                  </div>-->
//               <div class=""layui-form-item"">
//                <label class=""layui-form-label"">区域</label>
//                <div class=""layui-input-block"">
//                  <select name=""region"" lay-filter=""aihao"" id=");
                WriteLiteral(@"""selectRegionForm"">
//                             <option value=""内蒙古自治区/赤峰市/红山区"">内蒙古自治区/赤峰市/红山区</option>
//                            <option value=""内蒙古自治区/赤峰市/元宝山区"">内蒙古自治区/赤峰市/元宝山区</option>
//                            <option value=""内蒙古自治区/赤峰市/松山区"">内蒙古自治区/赤峰市/松山区</option>
//                            <option value=""内蒙古自治区/赤峰市/阿鲁科尔沁旗"">内蒙古自治区/赤峰市/阿鲁科尔沁旗</option>
//                            <option value=""内蒙古自治区/赤峰市/巴林左旗"">内蒙古自治区/赤峰市/巴林左旗</option>
//                            <option value=""内蒙古自治区/赤峰市/巴林右旗"">内蒙古自治区/赤峰市/巴林右旗</option>
//                            <option value=""内蒙古自治区/赤峰市/林西县"">内蒙古自治区/赤峰市/林西县</option>
//                            <option value=""内蒙古自治区/赤峰市/克什克腾旗"">内蒙古自治区/赤峰市/克什克腾旗</option>
//                            <option value=""内蒙古自治区/赤峰市/翁牛特旗"">内蒙古自治区/赤峰市/翁牛特旗</option>
//                            <option value=""内蒙古自治区/赤峰市/喀喇沁旗"">内蒙古自治区/赤峰市/喀喇沁旗</option>
//                            <option value=""内蒙古自治区/赤峰市/宁城县"">内蒙古自治区/赤峰市/宁城县</option>
//                            <optio");
                WriteLiteral(@"n value=""内蒙古自治区/赤峰市/敖汉旗"">内蒙古自治区/赤峰市/敖汉旗</option>
//                  </select>
//                </div>
//              </div>

//<div class=""layui-form-item"">
//                <label class=""layui-form-label"">类型</label>
//                <div class=""layui-input-block"">
//                  <select name=""type"" lay-filter=""aihao"">
//                    <option value=""商务住宅;住宅区;住宅小区"">商务住宅;住宅区;住宅小区</option>
//                  </select>
//                </div>
//              </div>
//                   <!--<div class=""layui-form-item"">
//                    <label class=""layui-form-label"">开关-默认关</label>
//                    <div class=""layui-input-block"">
//                      <input type=""checkbox"" name=""close"" lay-skin=""switch"" lay-text=""ON|OFF"" lay-filter=""switch1"">
//                    </div>
//                  </div>-->
//                <div class=""layui-form-item hidden"">
//                    <label class=""layui-form-label""></label>
//                    <div class=""layui-input-");
                WriteLiteral(@"inline"">
//                      <input type=""text"" id=""fieldHidden"" name=""building_bounds"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" >
//                    </div>
//                  </div>
//<div class=""layui-form-item"">
//                <label class=""layui-form-label"">编辑边界</label>
//                <div class=""layui-input-block"">
//                  <input type=""checkbox"" name=""close"" lay-skin=""switch"" lay-text=""是|否"" lay-filter=""switchT"" id=""cb"">
//                </div>
//              </div>

//<div class=""layui-form-item"">
//                    <div class=""layui-input-block"">
//                      <button class=""layui-btn layui-btn-normal fr"" lay-submit="""" lay-filter=""demo1"">保存</button>
//                    </div>
//                  </div>
//                  </div>

//</form>`;
                            //document.getElementsByTagName(""body"")[0].appendChild(container);
                            //var village_region = data[""ds""][0][""VILL");
                WriteLiteral(@"AGE_REGION""];
                            //var selectRegionForm = document.getElementById('selectRegionForm');
                            //if (village_region === '内蒙古自治区/赤峰市/红山区') {
                            //    selectRegionForm.children[0].setAttribute(""selected"", true);
                            //} else if (village_region === '内蒙古自治区/赤峰市/元宝山区') {
                            //    selectRegionForm.children[1].setAttribute(""selected"", true);
                            //} else if (village_region === '内蒙古自治区/赤峰市/松山区') {
                            //    selectRegionForm.children[2].setAttribute(""selected"", true);
                            //} else if (village_region === '内蒙古自治区/赤峰市/阿鲁科尔沁旗') {
                            //    selectRegionForm.children[3].setAttribute(""selected"", true);
                            //} else if (village_region === '内蒙古自治区/赤峰市/巴林左旗') {
                            //    selectRegionForm.children[4].setAttribute(""selected"", true);
                           ");
                WriteLiteral(@" //} else if (village_region === '内蒙古自治区/赤峰市/巴林右旗') {
                            //    selectRegionForm.children[5].setAttribute(""selected"", true);
                            //} else if (village_region === '内蒙古自治区/赤峰市/林西县') {
                            //    selectRegionForm.children[6].setAttribute(""selected"", true);
                            //} else if (village_region === '内蒙古自治区/赤峰市/克什克腾旗') {
                            //    selectRegionForm.children[7].setAttribute(""selected"", true);
                            //} else if (village_region === '内蒙古自治区/赤峰市/翁牛特旗') {
                            //    selectRegionForm.children[8].setAttribute(""selected"", true);
                            //} else if (village_region === '内蒙古自治区/赤峰市/喀喇沁旗') {
                            //    selectRegionForm.children[9].setAttribute(""selected"", true);
                            //} else if (village_region === '内蒙古自治区/赤峰市/宁城县') {
                            //    selectRegionForm.children[10].setAttribute(""se");
                WriteLiteral(@"lected"", true);
                            //} else if (village_region === '内蒙古自治区/赤峰市/敖汉旗') {
                            //    selectRegionForm.children[11].setAttribute(""selected"", true);
                            //}
                            form.render();
                            form.on('switch(switchT)', function (d) {
                                if (d.elem.checked) {
                                    drawPolygon();
                                } else {
                                    mousetool.close(true);
                                }

                            });
                        } else {
                            var polygon;
                            var overlays = map.getAllOverlays(""polygon"");
                            overlays.forEach(function (overlay) {
                                if (overlay.getOptions()[""strokeColor""] === ""#D00000"") {
                                    polygon = overlay;
                                }
   ");
                WriteLiteral(@"                         });
                               layer.open({
                btn: [],
  //               yes: function(index, layero){
  //  //按钮【按钮一】的回调
  //                   document.getElementsByTagName('form')[0].submit();
  //},
                shade: 0,
                title: ""编辑小区信息"",
                content: `<form class=""layui-form layui-form-pane"" action="""" data-guid=${dataGuid}>
                   <div class=""layui-form-item"">
                    <label class=""layui-form-label"">小区名称</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""village_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" required value=""${data[""ds""][0][""VILLAGE_NAME""]}"">
                    </div>
                  </div>
                  <div class=""layui-form-item"">
                    <label class=""layui-form-label"">详细地址</label>
                    <div class=""layui-input-inline"">
                      <");
                WriteLiteral(@"input type=""text"" name=""village_address"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input""  required  value=""${data[""ds""][0][""VILLAGE_ADDRESS""]}"">
                    </div>
                  </div>
                  <!--<div class=""layui-form-item"">
                    <label class=""layui-form-label"">区域</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""village_region"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input""  required value=""${data[""ds""][0][""VILLAGE_REGION""]}"">
                    </div>
                  </div>
               <div class=""layui-form-item"">
                    <label class=""layui-form-label"">类型</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""village_type"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input""  required  value=""${data[""ds""][0][""VILLAGE_TYPE""]}"">
             ");
                WriteLiteral(@"       </div>
                  </div>-->

              <div class=""layui-form-item"">
                <label class=""layui-form-label"">区域</label>
              <div class=""layui-input-block"">
                  <select name=""region"" required>
                            <option value=""` + data[""ds""][0][""VILLAGE_REGION""] + `"">` + data[""ds""][0][""VILLAGE_REGION""] + `
                  </option></select>
                </div>
              </div>

<div class=""layui-form-item"">
                <label class=""layui-form-label"">类型</label>
                <div class=""layui-input-block"">
                  <select name=""type"" lay-filter=""aihao""  required>
                    <option value=""商务住宅;住宅区;住宅小区"">商务住宅;住宅区;住宅小区</option>
                  </select>
                </div>
              </div>
                <div class=""layui-form-item hidden"">
                    <label class=""layui-form-label""></label>
                    <div class=""layui-input-inline"">
                      <input type=""t");
                WriteLiteral(@"ext"" id=""fieldHidden"" name=""village_bounds"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"">
                    </div>
                  </div>
<div class=""layui-form-item"">
                <label class=""layui-form-label"">编辑边界</label>
                <div class=""layui-input-block"">
                  <input type=""checkbox"" name=""close"" lay-skin=""switch"" lay-text=""是|否"" lay-filter=""switchT"" id='cb'>
                </div>
              </div>




<!--<div class=""layui-form-item"">
                    <div class=""layui-input-block"">
                      <button class=""layui-btn layui-btn-normal fr"" lay-submit="""" lay-filter=""demo1"">保存</button>
                    </div>
                  </div>
                  </div>-->
 <button type=""submit"" class=""layui-btn layui-btn-normal fr"">保存</button>
</form>`
               
            });
                            //var container = document.createElement('div');
                            //container.setAttribu");
                WriteLiteral(@"te(""class"", ""modalSmall"");
//                            container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">编辑小区信息</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div><form class=""layui-form layui-form-pane"" action=""""  data-guid=${dataGuid}>
//                   <div class=""layui-form-item"">
//                    <label class=""layui-form-label"">小区名称</label>
//                    <div class=""layui-input-inline"">
//                      <input type=""text"" name=""village_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""VILLAGE_NAME""]}"">
//                    </div>
//                  </div>
//                  <div class=""layui-form-item"">
//                    <label class=""layui-form-label"">详细地址</label>
//                    <div class=""layui-input-inline"">
//                      <input type=""text"" name=""village_address"" lay-veri");
                WriteLiteral(@"fy=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""VILLAGE_ADDRESS""]}"">
//                    </div>
//                  </div>
//                     <!--<div class=""layui-form-item"">
//                    <label class=""layui-form-label"">区域</label>
//                    <div class=""layui-input-inline"">
//                      <input type=""text"" name=""village_region"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""VILLAGE_REGION""]}"">
//                    </div>
//                  </div>
//                  <div class=""layui-form-item"">
//                    <label class=""layui-form-label"">类型</label>
//                    <div class=""layui-input-inline"">
//                      <input type=""text"" name=""village_type"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""VILLAGE_TYPE""]}"">
//                    </div>
//                  </div>-->
// ");
                WriteLiteral(@"             <div class=""layui-form-item"">
//                <label class=""layui-form-label"">区域</label>
//                <div class=""layui-input-block"">
//                  <select name=""region"" lay-filter=""aihao"" id=""selectRegionForm"">
//                             <option value=""内蒙古自治区/赤峰市/红山区"">内蒙古自治区/赤峰市/红山区</option>
//                            <option value=""内蒙古自治区/赤峰市/元宝山区"">内蒙古自治区/赤峰市/元宝山区</option>
//                            <option value=""内蒙古自治区/赤峰市/松山区"">内蒙古自治区/赤峰市/松山区</option>
//                            <option value=""内蒙古自治区/赤峰市/阿鲁科尔沁旗"">内蒙古自治区/赤峰市/阿鲁科尔沁旗</option>
//                            <option value=""内蒙古自治区/赤峰市/巴林左旗"">内蒙古自治区/赤峰市/巴林左旗</option>
//                            <option value=""内蒙古自治区/赤峰市/巴林右旗"">内蒙古自治区/赤峰市/巴林右旗</option>
//                            <option value=""内蒙古自治区/赤峰市/林西县"">内蒙古自治区/赤峰市/林西县</option>
//                            <option value=""内蒙古自治区/赤峰市/克什克腾旗"">内蒙古自治区/赤峰市/克什克腾旗</option>
//                            <option value=""内蒙古自治区/赤峰市/翁牛特旗"">内蒙古自治区/赤峰市/翁牛特旗");
                WriteLiteral(@"</option>
//                            <option value=""内蒙古自治区/赤峰市/喀喇沁旗"">内蒙古自治区/赤峰市/喀喇沁旗</option>
//                            <option value=""内蒙古自治区/赤峰市/宁城县"">内蒙古自治区/赤峰市/宁城县</option>
//                            <option value=""内蒙古自治区/赤峰市/敖汉旗"">内蒙古自治区/赤峰市/敖汉旗</option>
//                  </select>
//                </div>
//              </div>

//<div class=""layui-form-item"">
//                <label class=""layui-form-label"">类型</label>
//                <div class=""layui-input-block"">
//                  <select name=""type"" lay-filter=""aihao"">
//                    <option value=""商务住宅;住宅区;住宅小区"">商务住宅;住宅区;住宅小区</option>
//                  </select>
//                </div>
//              </div>
//                   <!--<div class=""layui-form-item"">
//                    <label class=""layui-form-label"">开关-默认关</label>
//                    <div class=""layui-input-block"">
//                      <input type=""checkbox"" name=""close"" lay-skin=""switch"" lay-text=""ON|OFF"" lay-filter=""switch1"">
//    ");
                WriteLiteral(@"                </div>
//                  </div>-->

//<div class=""layui-form-item"">
//                <label class=""layui-form-label"">编辑边界</label>
//                <div class=""layui-input-block"">
//                  <input type=""checkbox"" name=""close"" lay-skin=""switch"" lay-text=""是|否"" lay-filter=""switchT"" id=""cb"">
//                </div>
//              </div>

//<div class=""layui-form-item"">
//                    <div class=""layui-input-block"">
//                      <button class=""layui-btn layui-btn-normal fr"" lay-submit="""" lay-filter=""demo1"">保存</button>
//                    </div>
//                  </div>
//                  </div>

//</form>`;
//                            document.getElementsByTagName(""body"")[0].appendChild(container);
                            //var village_region = data[""ds""][0][""VILLAGE_REGION""];
                            //var selectRegionForm = document.getElementById('selectRegionForm');
                            //if (village_region === '内蒙古自治区/赤");
                WriteLiteral(@"峰市/红山区') {
                            //    selectRegionForm.children[0].setAttribute(""selected"", true);
                            //} else if (village_region === '内蒙古自治区/赤峰市/元宝山区') {
                            //    selectRegionForm.children[1].setAttribute(""selected"", true);
                            //} else if (village_region === '内蒙古自治区/赤峰市/松山区') {
                            //    selectRegionForm.children[2].setAttribute(""selected"", true);
                            //} else if (village_region === '内蒙古自治区/赤峰市/阿鲁科尔沁旗') {
                            //    selectRegionForm.children[3].setAttribute(""selected"", true);
                            //} else if (village_region === '内蒙古自治区/赤峰市/巴林左旗') {
                            //    selectRegionForm.children[4].setAttribute(""selected"", true);
                            //} else if (village_region === '内蒙古自治区/赤峰市/巴林右旗') {
                            //    selectRegionForm.children[5].setAttribute(""selected"", true);
                         ");
                WriteLiteral(@"   //} else if (village_region === '内蒙古自治区/赤峰市/林西县') {
                            //    selectRegionForm.children[6].setAttribute(""selected"", true);
                            //} else if (village_region === '内蒙古自治区/赤峰市/克什克腾旗') {
                            //    selectRegionForm.children[7].setAttribute(""selected"", true);
                            //} else if (village_region === '内蒙古自治区/赤峰市/翁牛特旗') {
                            //    selectRegionForm.children[8].setAttribute(""selected"", true);
                            //} else if (village_region === '内蒙古自治区/赤峰市/喀喇沁旗') {
                            //    selectRegionForm.children[9].setAttribute(""selected"", true);
                            //} else if (village_region === '内蒙古自治区/赤峰市/宁城县') {
                            //    selectRegionForm.children[10].setAttribute(""selected"", true);
                            //} else if (village_region === '内蒙古自治区/赤峰市/敖汉旗') {
                            //    selectRegionForm.children[11].setAttribute(""");
                WriteLiteral(@"selected"", true);
                            //}
                            form.render();
                            form.on('switch(switchT)', function (d) {
                                if (d.elem.checked) {
                                    polygon.getExtData()[""editor""].open();
                                } else {
                                    polygon.getExtData()[""editor""].close();
                                }
                            });
                            document.getElementsByTagName('form')[0].addEventListener('submit', function (e) {
                                event.preventDefault();
                                editPoiBounds2(e.target, polygon);
                            });




                        }
                    },
                    error: function (item, err) {
                        console.log(err);
                    }
                });
            }, 1500);
        }
        //console.log(data.elem); //得到");
                WriteLiteral(@"checkbox原始DOM对象
        //console.log(data.elem.checked); //开关是否开启，true或者false
        //console.log(data.value); //开关value值，也可以通过data.elem.value得到
        //console.log(data.othis); //得到美化后的DOM对象

        function editPoi2(e) {
            setTimeout(function () {
                var dataGuid = e.getAttribute(""data-guid"");
                $.ajax({
                    type: ""get"",
                    url: `./API/DetailsBuilding?id=${dataGuid}`,
                    contentType: ""application/json; charset=utf-8"",
                    dataType: ""json"",
                    success: function (data) {
                                               layer.open({
                btn: [],
  //               yes: function(index, layero){
  //  //按钮【按钮一】的回调
  //                   document.getElementsByTagName('form')[0].submit();
  //},
                shade: 0,
                title: ""编辑楼宇信息"",
                content: `<form class=""layui-form layui-form-pane"" action="""" onsubmit=""event.preventDefault");
                WriteLiteral(@"();editPoiBuilding(this);"" data-guid=${dataGuid}>
                  <div class=""layui-form-item"">
                    <label class=""layui-form-label"">楼宇号码</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""building_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""BUILDING_NUMBER""]}"" required>
                    </div>
                  </div>
<div class=""layui-form-item"">
                    <label class=""layui-form-label"">楼宇名称</label>
                    <div class=""layui-input-inline"">
                      <input type=""text"" name=""building_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""BUILDING_NAME""]}"" required>
                    </div>
                  </div>
                  <div class=""layui-form-item"">
                    <label class=""layui-form-label"">详细地址</label>
                    <div class=""layui-in");
                WriteLiteral(@"put-inline"">
                      <input type=""text"" name=""building_address"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""BUILDING_ADDRESS""]}"" required>
                    </div>
                  </div>
                <div class=""layui-form-item"">
                <label class=""layui-form-label"">区域</label>
                <div class=""layui-input-block"">
                  <select name=""region"" required>
                            <option value=""` + data[""ds""][0][""REGION""] + `"">` + data[""ds""][0][""REGION""] + `
                  </option></select>
                </div>
              </div>

<div class=""layui-form-item"">
                <label class=""layui-form-label"">类型</label>
                <div class=""layui-input-block"">
                  <select name=""type"" lay-filter=""aihao"" required>
                    <option value=""地名地址信息;门牌信息;楼栋号"">地名地址信息;门牌信息;楼栋号</option>
                  </select>
                </div>
              <");
                WriteLiteral(@"/div>


 <button type=""submit"" class=""layui-btn layui-btn-normal fr"">保存</button>


</form>`
               
            });
//                        var container = document.createElement('div');
//                        container.setAttribute(""class"", ""modalSmall"");
//                        container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">编辑楼宇信息</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div><form class=""layui-form layui-form-pane"" action="""" onsubmit=""event.preventDefault();editPoiBuilding(this);"" data-guid=${dataGuid}>
//                  <div class=""layui-form-item"">
//                    <label class=""layui-form-label"">楼宇号码</label>
//                    <div class=""layui-input-inline"">
//                      <input type=""text"" name=""building_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""BUILDING_NUMBER""]}"">");
                WriteLiteral(@"
//                    </div>
//                  </div>
//<div class=""layui-form-item"">
//                    <label class=""layui-form-label"">楼宇名称</label>
//                    <div class=""layui-input-inline"">
//                      <input type=""text"" name=""building_name"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""BUILDING_NAME""]}"">
//                    </div>
//                  </div>
//                  <div class=""layui-form-item"">
//                    <label class=""layui-form-label"">详细地址</label>
//                    <div class=""layui-input-inline"">
//                      <input type=""text"" name=""building_address"" lay-verify=""required"" placeholder=""请输入"" autocomplete=""off"" class=""layui-input"" value=""${data[""ds""][0][""BUILDING_ADDRESS""]}"">
//                    </div>
//                  </div>
//              <div class=""layui-form-item"">
//                <label class=""layui-form-label"">区域</label>
//                <div class");
                WriteLiteral(@"=""layui-input-block"">
//                  <select name=""region"" lay-filter=""aihao"" id=""selectRegionForm"">
//                            <option value=""内蒙古自治区/赤峰市/红山区"">内蒙古自治区/赤峰市/红山区</option>
//                            <option value=""内蒙古自治区/赤峰市/元宝山区"">内蒙古自治区/赤峰市/元宝山区</option>
//                            <option value=""内蒙古自治区/赤峰市/松山区"">内蒙古自治区/赤峰市/松山区</option>
//                            <option value=""内蒙古自治区/赤峰市/阿鲁科尔沁旗"">内蒙古自治区/赤峰市/阿鲁科尔沁旗</option>
//                            <option value=""内蒙古自治区/赤峰市/巴林左旗"">内蒙古自治区/赤峰市/巴林左旗</option>
//                            <option value=""内蒙古自治区/赤峰市/巴林右旗"">内蒙古自治区/赤峰市/巴林右旗</option>
//                            <option value=""内蒙古自治区/赤峰市/林西县"">内蒙古自治区/赤峰市/林西县</option>
//                            <option value=""内蒙古自治区/赤峰市/克什克腾旗"">内蒙古自治区/赤峰市/克什克腾旗</option>
//                            <option value=""内蒙古自治区/赤峰市/翁牛特旗"">内蒙古自治区/赤峰市/翁牛特旗</option>
//                            <option value=""内蒙古自治区/赤峰市/喀喇沁旗"">内蒙古自治区/赤峰市/喀喇沁旗</option>
//                            <optio");
                WriteLiteral(@"n value=""内蒙古自治区/赤峰市/宁城县"">内蒙古自治区/赤峰市/宁城县</option>
//                            <option value=""内蒙古自治区/赤峰市/敖汉旗"">内蒙古自治区/赤峰市/敖汉旗</option>
//                  </select>
//                </div>
//              </div>

//<div class=""layui-form-item"">
//                <label class=""layui-form-label"">类型</label>
//                <div class=""layui-input-block"">
//                  <select name=""type"" lay-filter=""aihao"">
//                    <option value=""地名地址信息;门牌信息;楼栋号"">地名地址信息;门牌信息;楼栋号</option>
//                  </select>
//                </div>
//              </div>


//<div class=""layui-form-item"">
//                    <div class=""layui-input-block"">
//                      <button class=""layui-btn layui-btn-normal fr"" lay-submit="""" lay-filter=""demo1"">保存</button>
//                    </div>
//                  </div>
//                  </div>

//</form>`;
//                        //htmlPoiDetail = `<div class=""modalSmall""><div class=""flex""><span>小区信息</span><button>x</button></div>");
                WriteLiteral(@"<div><span>小区名称</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div><span>详细地址</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div><span>区域</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div><span>类型</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div></div>`;
//                        document.getElementsByTagName(""body"")[0].appendChild(container);
                        //var building_region = data[""ds""][0][""REGION""];
                        //var selectRegionForm = document.getElementById('selectRegionForm');
                        //if (building_region === '内蒙古自治区/赤峰市/红山区') {
                        //    selectRegionForm.children[0].setAttribute(""selected"", true);
                        //} else if (building_region === '内蒙古自治区/赤峰市/元宝山区') {
                        //    selectRegionForm.children[1].setAttribute(""selected"", true);
                        //} else if (building_region === '内蒙古自治区/赤峰市/松山区') {
                        //    selectRegionForm.c");
                WriteLiteral(@"hildren[2].setAttribute(""selected"", true);
                        //} else if (building_region === '内蒙古自治区/赤峰市/阿鲁科尔沁旗') {
                        //    selectRegionForm.children[3].setAttribute(""selected"", true);
                        //} else if (building_region === '内蒙古自治区/赤峰市/巴林左旗') {
                        //    selectRegionForm.children[4].setAttribute(""selected"", true);
                        //} else if (building_region === '内蒙古自治区/赤峰市/巴林右旗') {
                        //    selectRegionForm.children[5].setAttribute(""selected"", true);
                        //} else if (building_region === '内蒙古自治区/赤峰市/林西县') {
                        //    selectRegionForm.children[6].setAttribute(""selected"", true);
                        //} else if (building_region === '内蒙古自治区/赤峰市/克什克腾旗') {
                        //    selectRegionForm.children[7].setAttribute(""selected"", true);
                        //} else if (building_region === '内蒙古自治区/赤峰市/翁牛特旗') {
                        //    selectRegionFo");
                WriteLiteral(@"rm.children[8].setAttribute(""selected"", true);
                        //} else if (building_region === '内蒙古自治区/赤峰市/喀喇沁旗') {
                        //    selectRegionForm.children[9].setAttribute(""selected"", true);
                        //} else if (building_region === '内蒙古自治区/赤峰市/宁城县') {
                        //    selectRegionForm.children[10].setAttribute(""selected"", true);
                        //} else if (building_region === '内蒙古自治区/赤峰市/敖汉旗') {
                        //    selectRegionForm.children[11].setAttribute(""selected"", true);
                        //}
                        form.render();
                        //form.on('switch(switch1)', function (data) {
                        //    console.log(polygon);
                        //    if (data.elem.checked) {

                        //    } else {
                        //    }

                        //});

                    },

                    error: function (item, err) {

                        ");
                WriteLiteral(@"console.log(err);
                    }
                });
            }, 1500);

        }

        function deletePoiFinal(e) {
            var dataGuid = e.getAttribute(""data-guid"");
            $.ajax({
                type: ""post"",
                url: `./API/DeleteVillage?id=${dataGuid}`,
                dataType: ""json"",
                success: function (data) {
                    if (data.length !== 0) {
                        console.log('error');
                    } else {
                        layer.closeAll();
                        layer.msg(""小区已删除"");
                        var index = document.getElementsByTagName(""body"")[0].getAttribute(""data-currentindex"");
                        $('#dg').datagrid('deleteRow', index);

                    }

                },
                error: function (item, err) {
                    console.log(err);
                }
            });
        }

        function deletePoiFinal2(e) {
            var dataGuid = ");
                WriteLiteral(@"e.getAttribute(""data-guid"");
            $.ajax({
                type: ""post"",
                url: `./API/DeleteBuilding?id=${dataGuid}`,
                dataType: ""json"",
                success: function (data) {
                    if (data.length !== 0) {
                        console.log('error');
                    } else {
                        layer.closeAll();
                        layer.msg(""楼宇已删除"");
                        var index = document.getElementsByTagName(""body"")[0].getAttribute(""data-currentindex"");
                        $('#dg2').datagrid('deleteRow', index);
                    }

                },
                error: function (item, err) {
                    console.log(err);
                }
            });
        }

        //function boundsToggle(e) {
        //    console.log('w');
        //    if (e.checked) {
        //        console.log('checked');
        //    } else {
        //        console.log('unchecked');
        //    }
");
                WriteLiteral(@"        //}
        function deletePoi(e) {
            setTimeout(function () {
                var dataGuid = e.getAttribute(""data-guid"");
                            layer.open({
                btn: [],
  //               yes: function(index, layero){
  //  //按钮【按钮一】的回调
  //                   document.getElementsByTagName('form')[0].submit();
  //},
                shade: 0,
                title: ""删除小区"",
                content: `<div><div class=""mb-15 tc"">确定删除小区?</div><div class=""tr""><button type=""submit"" class=""layui-btn layui-btn-danger"" data-guid=${dataGuid} onclick=""deletePoiFinal(this);"">删除</button></div></div>`
               
            });
                //var container = document.createElement('div');
                //container.setAttribute(""class"", ""modalSmall"");
                //container.classList.add(""modalCentered"");
                //container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">删除小区</span><button type=""button"" class=""layui-btn layui-b");
                WriteLiteral(@"tn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div>
                //            <div class=""mb-15 tc"">确定删除小区?</div><div class=""tr""><button type=""button"" class=""layui-btn layui-btn-danger"" data-guid=${dataGuid} onclick=""deletePoiFinal(this);"">删除</button></div></div>`;
                //document.getElementsByTagName(""body"")[0].appendChild(container);
                //console.log('clicked second');
            }, 1500);

        }


        function deletePoi2(e) {
            setTimeout(function () {
                var dataGuid = e.getAttribute(""data-guid"");
                layer.open({
                btn: [],
  //               yes: function(index, layero){
  //  //按钮【按钮一】的回调
  //                   document.getElementsByTagName('form')[0].submit();
  //},
                shade: 0,
                title: ""删除楼宇"",
                content: `<div><div class=""mb-15 tc"">确定删除楼宇?</div><div class=""tr""><button type=""button"" class=""layui-btn layui-btn-danger"" data");
                WriteLiteral(@"-guid=${dataGuid} onclick=""deletePoiFinal2(this);"">删除</button></div></div>`
               
            });
                //var container = document.createElement('div');
                //container.setAttribute(""class"", ""modalSmall"");
                //container.classList.add(""modalCentered"");
                //container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">删除楼宇</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div>
                //            <div class=""mb-15 tc"">确定删除楼宇?</div><div class=""tr""><button type=""button"" class=""layui-btn layui-btn-danger"" data-guid=${dataGuid} onclick=""deletePoiFinal2(this);"">删除</button></div></div>`;
                //document.getElementsByTagName(""body"")[0].appendChild(container);
            }, 1500);

        }

        function searchVillage(e) {
            var textSearch = e.previousSibling.value;
            //if (textSearch.length === 0) {
");
                WriteLiteral(@"            //    layer.msg(""搜索内容不能为空"");
            //} else {
             var province = $(""#selectProvince"").find(""option:selected"").text();
                        var city = $(""#selectCity"").find(""option:selected"").text();
                        var county = $(""#selectCounty"").find(""option:selected"").text();
            var region = province + ""/"" + city + ""/"" + county;
            
            if (province !== ""所有"" && city !== ""所有"" && county === ""所有"") {
                        $.ajax({
                    type: ""get"",
                    url: `./API/SearchVillageByCity?text=${textSearch}&city=${city}`,
                    contentType: ""application/json; charset=utf-8"",
                    dataType: ""json"",
                    success: function (data) {
                        var xq = data[""ds""];
                        var rowsXQ = [];
                        xq.forEach(function (XQ) {
                           

                            var hasBounds = ""无"";
                  ");
                WriteLiteral(@"          if (XQ[""VILLAGE_BOUNDS""] !== null) {
                                hasBounds = ""有"";
                            }
                            rowsXQ.push({ village_name: XQ[""VILLAGE_NAME""], village_address: XQ[""VILLAGE_ADDRESS""], village_region: XQ[""VILLAGE_REGION""], village_type: XQ[""VILLAGE_TYPE""],  village_count: XQ[""VILLAGE_COUNT""], village_hasBounds: hasBounds, village_action: `<i class=""fa fa-eye mr-5"" data-lng=""${XQ[""VILLAGE_LNG""]}"" data-lat=""${XQ[""VILLAGE_LAT""]}"" data-bounds=""${XQ[""VILLAGE_BOUNDS""]}"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""getPoiDetail(this);""></i><i class=""fa fa-edit mr-5"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""editPoi(this);""></i><i class=""fa fa-trash-o"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""deletePoi(this);""></i>`, village_lng: XQ[""VILLAGE_LNG""], village_lat: XQ[""VILLAGE_LAT""] });
                        });
                        $('#dg').datagrid('loadData', getData(rowsXQ));
                    },
                    error: function (item, err) {
     ");
                WriteLiteral(@"                   console.log(err);
                    }
                });
            } else {
        $.ajax({
                    type: ""get"",
                    url: `./API/SearchVillage?text=${textSearch}&region=${region}`,
                    contentType: ""application/json; charset=utf-8"",
                    dataType: ""json"",
                    success: function (data) {
                        var xq = data[""ds""];
                        var rowsXQ = [];
                        xq.forEach(function (XQ) {
                            
                            var hasBounds = ""无"";
                            if (XQ[""VILLAGE_BOUNDS""] !== null) {
                                hasBounds = ""有"";
                            }
                            rowsXQ.push({ village_name: XQ[""VILLAGE_NAME""], village_address: XQ[""VILLAGE_ADDRESS""], village_region: XQ[""VILLAGE_REGION""], village_type: XQ[""VILLAGE_TYPE""], village_count: XQ[""VILLAGE_COUNT""], village_hasBounds: hasBounds, villag");
                WriteLiteral(@"e_action: `<i class=""fa fa-eye mr-5"" data-lng=""${XQ[""VILLAGE_LNG""]}"" data-lat=""${XQ[""VILLAGE_LAT""]}"" data-bounds=""${XQ[""VILLAGE_BOUNDS""]}"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""getPoiDetail(this);""></i><i class=""fa fa-edit mr-5"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""editPoi(this);""></i><i class=""fa fa-trash-o"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""deletePoi(this);""></i>`, village_lng: XQ[""VILLAGE_LNG""], village_lat: XQ[""VILLAGE_LAT""] });
                        });
                        $('#dg').datagrid('loadData', getData(rowsXQ));
                    },
                    error: function (item, err) {
                        console.log(err);
                    }
                });
            }
        
            //}

        }

        function searchBuilding(e) {
            var textSearch = e.previousSibling.value;
            //if (textSearch.length === 0) {
            //    layer.msg(""搜索内容不能为空"");
            //} else {
            var province = $(""#selectProvince""");
                WriteLiteral(@").find(""option:selected"").text();
                        var city = $(""#selectCity"").find(""option:selected"").text();
                        var county = $(""#selectCounty"").find(""option:selected"").text();
            var region = province + ""/"" + city + ""/"" + county;
            if (province !== ""所有"" && city !== ""所有"" && county === ""所有"") {
                $.ajax({
                    type: ""get"",
                    url: `./API/SearchBuildingByCity?text=${textSearch}&city=${city}`,
                    contentType: ""application/json; charset=utf-8"",
                    dataType: ""json"",
                    success: function (data) {
                        var l = data[""ds""];
                        var rowsL = [];
                        l.forEach(function (L) {
                            rowsL.push({ building_name: L[""BUILDING_NAME""], building_address: L[""BUILDING_ADDRESS""], building_action: `<i class=\""fa fa-eye mr-5 \"" data-lng=""${L[""LNG""]}"" data-lat=""${L[""LAT""]}"" data-bounds=""${L[""BOUNDS""]}");
                WriteLiteral(@""" data-guid=""${L[""BUILDING_ID""]}"" onclick=""getPoiDetail2(this);""></i><i class=\""fa fa-edit mr-5 \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""editPoi2(this);""></i><i class=\""fa fa-trash-o \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""deletePoi2(this);""></i>` });
                        });
                        $('#dg2').datagrid('loadData', getData(rowsL));
                    },
                    error: function (item, err) {
                        console.log(err);
                    }
                });
            } else {
                $.ajax({
                    type: ""get"",
                    url: `./API/SearchBuilding?text=${textSearch}&region=${region}`,
                    contentType: ""application/json; charset=utf-8"",
                    dataType: ""json"",
                    success: function (data) {
                        var l = data[""ds""];
                        var rowsL = [];
                        l.forEach(function (L) {
                            rowsL.push({");
                WriteLiteral(@" building_name: L[""BUILDING_NAME""], building_address: L[""BUILDING_ADDRESS""], building_action: `<i class=\""fa fa-eye mr-5 \"" data-lng=""${L[""LNG""]}"" data-lat=""${L[""LAT""]}"" data-bounds=""${L[""BOUNDS""]}"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""getPoiDetail2(this);""></i><i class=\""fa fa-edit mr-5 \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""editPoi2(this);""></i><i class=\""fa fa-trash-o \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""deletePoi2(this);""></i>` });
                        });
                        $('#dg2').datagrid('loadData', getData(rowsL));
                    },
                    error: function (item, err) {
                        console.log(err);
                    }
                });
                // }
            }

        }

        function openPois(e) {
            e.classList.remove(""layui-btn-primary"");
            e.classList.add(""layui-btn-normal"");
            e.innerHTML += `<i class=""fa fa-check""></i>`;
            e.setAttribute(""disabled"", true);
         ");
                WriteLiteral(@"   var sibling = e.nextSibling;
            sibling.classList.remove(""layui-btn-normal"");
            sibling.classList.add(""layui-btn-primary"");
            sibling.innerHTML = `否`;
            sibling.removeAttribute(""disabled"");
            var overlays = map.getAllOverlays(""polygon"");
            overlays.forEach(function (overlay) {
                overlay.show();
            });
        }

        function closePois(e) {
            e.classList.remove(""layui-btn-primary"");
            e.classList.add(""layui-btn-normal"");
            e.innerHTML += `<i class=""fa fa-check""></i>`;
            e.setAttribute(""disabled"", true);
            var sibling = e.previousSibling;
            sibling.classList.remove(""layui-btn-normal"");
            sibling.classList.add(""layui-btn-primary"");
            sibling.innerHTML = `是`;
            sibling.removeAttribute(""disabled"");
            var overlays = map.getAllOverlays(""polygon"");
            overlays.forEach(function (overlay) {
           ");
                WriteLiteral(@"     overlay.hide();
            });

        }

        function closeModal(e) {
            e.parentElement.parentElement.remove();
            mousetool.close(true);
            //$.ajax({
            //    type: ""get"",
            //    url: `./API/DetailsVillage?id=${dataGuid}`,
            //    contentType: ""application/json; charset=utf-8"",
            //    dataType: ""json"",
            //    success: function (data) {
            //        var container = document.createElement('div');
            //        container.setAttribute(""class"", ""modalSmall"");
            //        container.innerHTML += `<div class=""flex sb mb-10""><span class=""bb-lightblue"">小区信息</span><button type=""button"" class=""layui-btn layui-btn-normal layui-btn-radius layui-btn-sm"" onclick=""closeModal(this);"">X</button></div><div class=""mb-10""><span class=""mr-5 bold"">小区名称:</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">详细地址:</span><span>${data[""ds""][0][""VILLAGE_ADD");
                WriteLiteral(@"RESS""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">区域:</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div  class=""mb-10""><span class=""mr-5 bold"">类型:</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div>`;
            //        //htmlPoiDetail = `<div class=""modalSmall""><div class=""flex""><span>小区信息</span><button>x</button></div><div><span>小区名称</span><span>${data[""ds""][0][""VILLAGE_NAME""]}</span></div><div><span>详细地址</span><span>${data[""ds""][0][""VILLAGE_ADDRESS""]}</span></div><div><span>区域</span><span>${data[""ds""][0][""VILLAGE_REGION""]}</span></div><div><span>类型</span><span>${data[""ds""][0][""VILLAGE_TYPE""]}</span></div></div>`;
            //        document.getElementsByTagName(""body"")[0].appendChild(container);
            //    },
            //    error: function (item, err) {
            //        console.log(err);
            //    }
            //});
        }


        /* 地图/数据 */
        //    $.ajax({
        //        type: ""get"",
        //        url: ""./API");
                WriteLiteral(@"/Index?type=all"",
        //        contentType: ""application/json; charset=utf-8"",
        //        dataType: ""json"",
        //        success: function (data) {
        //            /* 边界 */
        //            var xq = data[0][""ds""];
        //            var l = data[1][""ds""];
        //            var lFirst = data[2][""ds""];
        //            var rowsXQ = [];
        //            var rowsL = [];
        //            xq.forEach(function (XQ) {
        //                if (XQ[""VILLAGE_BOUNDS""] !== ""null"") {
        //                    var polygon = new AMap.Polygon({
        //                        strokeColor: ""#2828FF"",
        //                        fillOpacity: 0,
        //                        bubble: true,
        //                        strokeWeight: 1,
        //                        path: JSON.parse(XQ[""VILLAGE_BOUNDS""]),
        //                        map: map
        //                    });

        //                    var polylineEditor = ne");
                WriteLiteral(@"w AMap.PolyEditor(map, polygon);
        //                    polygon.setExtData({ ""editor"": polylineEditor });


        //                }
        //                rowsXQ.push({ village_name: XQ[""VILLAGE_NAME""], village_address: XQ[""VILLAGE_ADDRESS""], village_region: XQ[""VILLAGE_REGION""], village_type: XQ[""VILLAGE_TYPE""], village_action: `<i class=""fa fa-eye mr-5"" data-lng=""${XQ[""VILLAGE_LNG""]}"" data-lat=""${XQ[""VILLAGE_LAT""]}"" data-bounds=""${XQ[""VILLAGE_BOUNDS""]}"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""getPoiDetail(this);""></i><i class=""fa fa-edit mr-5"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""editPoi(this);""></i><i class=""fa fa-trash-o"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""deletePoi(this);""></i>`, village_lng: XQ[""VILLAGE_LNG""], village_lat: XQ[""VILLAGE_LAT""] });

        //            });
        //            var container = document.createElement('div');
        //            container.setAttribute(""id"", ""buttonOpenClose"");
        //            container.innerHTML += `<span class=""bb");
                WriteLiteral(@"-lightblue pb-5px mr-20"">是否显示小区边界</span><button type=""button"" class=""layui-btn layui-btn-radius layui-btn-normal layui-btn-sm"" onclick=""openPois(this);"" disabled>是 <i class=""fa fa-check""></i></button><button type=""button"" class=""layui-btn layui-btn-primary layui-btn-radius layui-btn-sm"" onclick=""closePois(this);"">否</button>`;
        //            document.getElementsByTagName(""body"")[0].appendChild(container);

        //            l.forEach(function (L) {
        //                var icon = new AMap.Icon({
        //                    size: new AMap.Size(15, 15),
        //                    image: './icons/circle.png',  // Icon的图像
        //                    imageSize: new AMap.Size(15, 15)
        //});
        //                var marker = new AMap.Marker({
        //                position: new AMap.LngLat(L[""LNG""], L[""LAT""]),   // 经纬度对象，也可以是经纬度构成的一维数组[116.39, 39.9]
        //                    title: L[""BUILDING_NAME""],
        //                    icon: icon // 添加 Icon 图标 URL
  ");
                WriteLiteral(@"      //                });
        //                map.add(marker);


        //            });

        //            //l.forEach(function (L) {
        //            //    var circle = new AMap.Circle({
        //            //        center: new AMap.LngLat(L[""LNG""], L[""LAT""]),
        //            //        radius: 3,//3D视图下，CircleMarker半径不要超过64px
        //            //        strokeColor: 'white',
        //            //        strokeWeight: 2,
        //            //        strokeOpacity: 0.5,
        //            //        fillColor: 'rgba(0,0,255,1)',
        //            //        fillOpacity: 0.5,
        //            //        zIndex: 10,
        //            //        bubble: true,
        //            //        cursor: 'pointer',
        //            //        clickable: true
        //            //    });
        //            //    circle.setMap(map);
        //            //});
        //            lFirst.forEach(function (L) {
        //                r");
                WriteLiteral(@"owsL.push({ building_name: L[""BUILDING_NAME""], building_address: L[""BUILDING_ADDRESS""], building_action: `<i class=\""fa fa-eye mr-5 \"" data-lng=""${L[""LNG""]}"" data-lat=""${L[""LAT""]}"" data-bounds=""${L[""BOUNDS""]}"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""getPoiDetail2(this);""></i><i class=\""fa fa-edit mr-5 \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""editPoi2(this);""></i><i class=\""fa fa-trash-o \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""deletePoi2(this);""></i>` });
        //            });

        //            createTables(rowsXQ, rowsL);
        //        },
        //        error: function (item, err) {
        //            console.log(err);
        //        }
        //    });




        //       function switchRegion() {
        //        var selectRegion = document.getElementById('selectRegion');
        //           selectRegion.addEventListener('change', function (e) {
        //            var valueSelected = e.target.value;
        //               map.clearMap();
        //    ");
                WriteLiteral(@"           map.setZoom(18);
        //               if (valueSelected === ""all"") {
        //                   map.setCenter([118.886856,42.257817]);
        //               }
        //               else if (valueSelected === ""hsq"") {
        //                   map.setCenter([118.955528,42.295818]);
        //               }
        //               else if (valueSelected === ""ybsq"") {
        //                   map.setCenter([119.288611,42.038902]);
        //               }
        //               else if (valueSelected === ""ssq"") {
        //                   map.setCenter([118.931962,42.286873]);
        //               }
        //                    else if (valueSelected === ""alkexq"") {
        //                   map.setCenter([120.0657,43.872299]);
        //               }
        //               else if (valueSelected === ""blzq"") {
        //                   map.setCenter([119.37949,43.971126]);
        //               }
        //               else if (value");
                WriteLiteral(@"Selected === ""blyq"") {
        //                   map.setCenter([118.66518,43.534414]);
        //               }
        //               else if (valueSelected === ""lxx"") {
        //                   map.setCenter([118.05545,43.61812]);
        //               }
        //               else if (valueSelected === ""ksktq"") {
        //                   map.setCenter([117.545798,43.264989]);
        //               }
        //               else if (valueSelected === ""wntq"") {
        //                   map.setCenter([119.00658,42.936188]);
        //               }
        //               else if (valueSelected === ""klxq"") {
        //                   map.setCenter([118.701938,41.927364]);
        //               }
        //                else if (valueSelected === ""ncx"") {
        //                   map.setCenter([119.320088,41.600075]);
        //               }
        //               else if (valueSelected === ""ahq"") {
        //                   map.setCenter([1");
                WriteLiteral(@"19.921604,42.290782]);
        //               }
        //            for (var i = 0; i < document.getElementsByClassName(""modalSmall"").length; i++) {
        //            document.getElementsByClassName(""modalSmall"")[i].remove();
        //        }

        //                          $.ajax({
        //        type: ""get"",
        //        url: `./API/IndexByRegion?type=${valueSelected}`,
        //        contentType: ""application/json; charset=utf-8"",
        //        dataType: ""json"",
        //        success: function (data) {
        //            /* 边界 */
        //            var xq = data[0][""ds""];
        //            var l = data[1][""ds""];
        //                            var lFirst = data[2][""ds""];

        //            var rowsXQ = [];
        //            var rowsL = [];
        //            xq.forEach(function (XQ) {
        //                if (XQ[""VILLAGE_BOUNDS""] !== ""null"") {
        //                    var polygon = new AMap.Polygon({
        //   ");
                WriteLiteral(@"                     strokeColor: ""#2828FF"",
        //                        fillOpacity: 0,
        //                        bubble: true,
        //                        strokeWeight: 1,
        //                        path: JSON.parse(XQ[""VILLAGE_BOUNDS""]),
        //                        map: map
        //                    });

        //                    var polylineEditor = new AMap.PolyEditor(map, polygon);
        //                    polygon.on('dblclick', function () { polylineEditor.open(); });
        //                    polygon.on('rightclick', function () { polylineEditor.close(); });
        //                    polygon.on('click', function () {
        //                        console.log(polygon.getPath());
        //                    });

        //                }
        //                rowsXQ.push({ village_name: XQ[""VILLAGE_NAME""], village_address: XQ[""VILLAGE_ADDRESS""], village_region: XQ[""VILLAGE_REGION""], village_type: XQ[""VILLAGE_TYPE""], villag");
                WriteLiteral(@"e_action: `<i class=""fa fa-eye mr-5"" data-lng=""${XQ[""VILLAGE_LNG""]}"" data-lat=""${XQ[""VILLAGE_LAT""]}"" data-bounds=""${XQ[""VILLAGE_BOUNDS""]}"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""getPoiDetail(this);""></i><i class=""fa fa-edit mr-5"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""editPoi(this);""></i><i class=""fa fa-trash-o"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""deletePoi(this);""></i>`, village_lng: XQ[""VILLAGE_LNG""], village_lat: XQ[""VILLAGE_LAT""] });

        //            });

        //            //l.forEach(function (L) {
        //            //    var circle = new AMap.Circle({
        //            //        center: new AMap.LngLat(L[""LNG""], L[""LAT""]),
        //            //        radius: 3,//3D视图下，CircleMarker半径不要超过64px
        //            //        strokeColor: 'white',
        //            //        strokeWeight: 2,
        //            //        strokeOpacity: 0.5,
        //            //        fillColor: 'rgba(0,0,255,1)',
        //            //        fillOpacity: 0.5,
       ");
                WriteLiteral(@" //            //        zIndex: 10,
        //            //        bubble: true,
        //            //        cursor: 'pointer',
        //            //        clickable: true
        //            //    });
        //            //    circle.setMap(map);
        //            //});
        //                          l.forEach(function (L) {
        //                              var icon = new AMap.Icon({
        //                size: new AMap.Size(15, 15),
        //                image: './icons/circle.png', // Icon的图像
        //                imageSize: new AMap.Size(15,15)
        //});
        //                var marker = new AMap.Marker({
        //                position: new AMap.LngLat(L[""LNG""], L[""LAT""]),   // 经纬度对象，也可以是经纬度构成的一维数组[116.39, 39.9]
        //                title: '',
        //                icon: icon, // 添加 Icon 图标 URL
        //                });
        //                map.add(marker);
        //                  });
        //            lFi");
                WriteLiteral(@"rst.forEach(function (L) {
        //                rowsL.push({ building_name: L[""BUILDING_NAME""], building_address: L[""BUILDING_ADDRESS""], building_action: `<i class=\""fa fa-eye mr-5 \"" data-lng=""${L[""LNG""]}"" data-lat=""${L[""LAT""]}"" data-bounds=""${L[""BOUNDS""]}"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""getPoiDetail2(this);""></i><i class=\""fa fa-edit mr-5 \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""editPoi2(this);""></i><i class=\""fa fa-trash-o \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""deletePoi2(this);""></i>` });
        //            });
        //            $('#dg').datagrid('loadData',getData(rowsXQ));
        //            $('#dg2').datagrid('loadData',getData(rowsL));

        //        },
        //        error: function (item, err) {
        //            console.log(err);
        //        }
        //    });



        //        })

        //    }

        //switchRegion();


        ///////
        //dropdown
        var d = """";
        $.ajax({
            type: ""get"",");
                WriteLiteral(@"
            url: `./region.json`,
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (data) {
                d = data;
                //var selectProvince = `<select><option>请选择省份</option>`;
                var selectProvince = ``;
                d.forEach(function (item) {
                    if (item[""item_code""].slice(2) === '0000') {
                        selectProvince += `<option value=${item[""item_code""]}>${item[""item_name""]}</option>`;
                    }
                });
                //selectProvince += `</select>`;
                var selectP = document.getElementById('selectProvince');
                var selectC = document.getElementById('selectCity');
                var selectCT = document.getElementById('selectCounty');
                selectP.innerHTML += selectProvince;
                selectP.addEventListener('change', function (e) {
                    var value = e.target.value;
         ");
                WriteLiteral(@"           if (value !== """") {
                        selectC.innerHTML = `<option value="""">所有</option>`;
                        d.forEach(function (i) {

                            if ((i[""item_code""].slice(0, 2) === value.slice(0, 2)) && (i[""item_code""].slice(2) !== ""0000"") && (i[""item_code""].slice(4, 6) === ""00"")) {

                                selectC.innerHTML += `<option value=${i[""item_code""]}>${i[""item_name""]}</option>`;
                            }
                        });
                    }
                });
                selectC.addEventListener('change', function (e) {
                    var value = e.target.value;
                    if (value !== """") {
                        selectCT.innerHTML = `<option value="""">所有</option>`;
                        d.forEach(function (i2) {


                            if (value == '110100' || value == ""120100"" || value == ""310100"" || value == ""500100"") {
                                if (value.slice(0, 3) === (i2[""ite");
                WriteLiteral(@"m_code""].slice(0, 3)) && (i2[""item_code""].slice(4, 6) !== ""00"")) {
                                    selectCT.innerHTML += `<option value=${i2[""item_code""]}>${i2[""item_name""]}</option>`;
                                }
                            } else {
                                if (value.slice(0, 4) === (i2[""item_code""].slice(0, 4)) && (i2[""item_code""].slice(4, 6) !== ""00"")) {
                                    selectCT.innerHTML += `<option value=${i2[""item_code""]}>${i2[""item_name""]}</option>`;
                                }
                            }
                        });
                        // get data for current city and display on map
                        var city = $(""#selectCity"").find(""option:selected"").text();
                        $.ajax({
                            type: ""get"",
                            url: `./api/IndexByCity?city=${city}`,
                            contentType: ""application/json; charset=utf-8"",
                            d");
                WriteLiteral(@"ataType: ""json"",
                            success: function (data) {
                                map.clearMap();
                                $.ajax({
                                type: ""get"",
                                url: `https://restapi.amap.com/v3/geocode/geo?key=c7aeb11746b35a92b7b6eee3178a05e4&address=${city}&city=`,
                                contentType: ""application/json; charset=utf-8"",
                                dataType: ""json"",
                            success: function (data) {
                                var lnglat = data[""geocodes""][0][""location""];
                                lng = Number(lnglat.split("","")[0]);
                                lat = Number(lnglat.split("","")[1]);
                                map.setCenter([lng, lat]);
                                map.setZoom(17);

                            },
                            error: function () {
                                console.log('error');
                   ");
                WriteLiteral(@"         }
                                });
                                        var xq = data[0][""ds""];
                                var l = data[1][""ds""];
                                var lFirst = data[2][""ds""];
                                var rowsXQ = [];
                                var rowsL = [];
                                xq.forEach(function (XQ) {
                                    if (XQ[""VILLAGE_BOUNDS""] !== ""null"") {
                                        var polygon = new AMap.Polygon({
                                            strokeColor: ""#2828FF"",
                                            fillOpacity: 0,
                                            bubble: true,
                                            strokeWeight: 1,
                                            path: JSON.parse(XQ[""VILLAGE_BOUNDS""]),
                                            map: map
                                        });

                                        var pol");
                WriteLiteral(@"ylineEditor = new AMap.PolyEditor(map, polygon);
                                        polygon.setExtData({ ""editor"": polylineEditor });


                                    }
                                    var hasBounds = ""无"";
                            if (XQ[""VILLAGE_BOUNDS""] !== null) {
                                hasBounds = ""有"";
                            }
                                    rowsXQ.push({ village_name: XQ[""VILLAGE_NAME""], village_address: XQ[""VILLAGE_ADDRESS""], village_region: XQ[""VILLAGE_REGION""], village_type: XQ[""VILLAGE_TYPE""], village_count: XQ[""VILLAGE_COUNT""],village_hasBounds: hasBounds,village_action: `<i class=""fa fa-eye mr-5"" data-lng=""${XQ[""VILLAGE_LNG""]}"" data-lat=""${XQ[""VILLAGE_LAT""]}"" data-bounds=""${XQ[""VILLAGE_BOUNDS""]}"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""getPoiDetail(this);""></i><i class=""fa fa-edit mr-5"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""editPoi(this);""></i><i class=""fa fa-trash-o"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""deletePoi(");
                WriteLiteral(@"this);""></i>`, village_lng: XQ[""VILLAGE_LNG""], village_lat: XQ[""VILLAGE_LAT""] });

                                });


                                l.forEach(function (L) {
                                    var icon = new AMap.Icon({
                                        size: new AMap.Size(15, 15),
                                        image: './icons/circle.png',  // Icon的图像
                                        imageSize: new AMap.Size(15, 15)
                                    });
                                    var marker = new AMap.Marker({
                                        position: new AMap.LngLat(L[""LNG""], L[""LAT""]),   // 经纬度对象，也可以是经纬度构成的一维数组[116.39, 39.9]
                                        title: L[""BUILDING_NAME""],
                                        icon: icon // 添加 Icon 图标 URL
                                    });
                                    map.add(marker);


                                });
                                lFirst.");
                WriteLiteral(@"forEach(function (L) {
                                    rowsL.push({ building_name: L[""BUILDING_NAME""], building_address: L[""BUILDING_ADDRESS""], building_action: `<i class=\""fa fa-eye mr-5 \"" data-lng=""${L[""LNG""]}"" data-lat=""${L[""LAT""]}"" data-bounds=""${L[""BOUNDS""]}"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""getPoiDetail2(this);""></i><i class=\""fa fa-edit mr-5 \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""editPoi2(this);""></i><i class=\""fa fa-trash-o \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""deletePoi2(this);""></i>` });
                                });
                                $('#dg').datagrid('loadData', getData(rowsXQ));
                                $('#dg2').datagrid('loadData', getData(rowsL));
                            },
                            error: function (item, err) {
                console.log(err);
            }
                        });

                    }
                });
                selectCT.addEventListener('change', function (e) {
            ");
                WriteLiteral(@"        var value = e.target.value;
                    if (value !== """") {
                        map.clearMap();
                        var province = $(""#selectProvince"").find(""option:selected"").text();
                        var city = $(""#selectCity"").find(""option:selected"").text();
                        var county = $(""#selectCounty"").find(""option:selected"").text();
                        var region = province + ""/"" + city + ""/"" + county;
                        $.ajax({
                            type: ""get"",
                            url: `https://restapi.amap.com/v3/geocode/geo?key=c7aeb11746b35a92b7b6eee3178a05e4&address=${county}&city=`,
                            contentType: ""application/json; charset=utf-8"",
                            dataType: ""json"",
                            success: function (data) {
                                var lnglat = data[""geocodes""][0][""location""];
                                lng = Number(lnglat.split("","")[0]);
                    ");
                WriteLiteral(@"            lat = Number(lnglat.split("","")[1]);
                                map.setCenter([lng, lat]);
                                map.setZoom(17);

                            },
                            error: function () {
                                console.log('error');
                            }
                        });
                        $.ajax({
                            type: ""get"",
                            url: `./API/IndexByRegion?region=${region}`,
                            contentType: ""application/json; charset=utf-8"",
                            dataType: ""json"",
                            success: function (data) {
                                console.log(data);
                                var xq = data[0][""ds""];
                                var l = data[1][""ds""];
                                var lFirst = data[2][""ds""];
                                var rowsXQ = [];
                                var rowsL = [];
           ");
                WriteLiteral(@"                     xq.forEach(function (XQ) {
                                    if (XQ[""VILLAGE_BOUNDS""] !== ""null"") {
                                        var polygon = new AMap.Polygon({
                                            strokeColor: ""#2828FF"",
                                            fillOpacity: 0,
                                            bubble: true,
                                            strokeWeight: 1,
                                            path: JSON.parse(XQ[""VILLAGE_BOUNDS""]),
                                            map: map
                                        });

                                        var polylineEditor = new AMap.PolyEditor(map, polygon);
                                        polygon.setExtData({ ""editor"": polylineEditor });


                                    }
                                      var hasBounds = ""无"";
                            if (XQ[""VILLAGE_BOUNDS""] !== null) {
                               ");
                WriteLiteral(@" hasBounds = ""有"";
                            }
                                    rowsXQ.push({ village_name: XQ[""VILLAGE_NAME""], village_address: XQ[""VILLAGE_ADDRESS""], village_region: XQ[""VILLAGE_REGION""], village_type: XQ[""VILLAGE_TYPE""], village_count: XQ[""VILLAGE_COUNT""],village_hasBounds: hasBounds,village_action: `<i class=""fa fa-eye mr-5"" data-lng=""${XQ[""VILLAGE_LNG""]}"" data-lat=""${XQ[""VILLAGE_LAT""]}"" data-bounds=""${XQ[""VILLAGE_BOUNDS""]}"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""getPoiDetail(this);""></i><i class=""fa fa-edit mr-5"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""editPoi(this);""></i><i class=""fa fa-trash-o"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""deletePoi(this);""></i>`, village_lng: XQ[""VILLAGE_LNG""], village_lat: XQ[""VILLAGE_LAT""] });

                                });


                                l.forEach(function (L) {
                                    var icon = new AMap.Icon({
                                        size: new AMap.Size(15, 15),
                     ");
                WriteLiteral(@"                   image: './icons/circle.png',  // Icon的图像
                                        imageSize: new AMap.Size(15, 15)
                                    });
                                    var marker = new AMap.Marker({
                                        position: new AMap.LngLat(L[""LNG""], L[""LAT""]),   // 经纬度对象，也可以是经纬度构成的一维数组[116.39, 39.9]
                                        title: L[""BUILDING_NAME""],
                                        icon: icon // 添加 Icon 图标 URL
                                    });
                                    map.add(marker);


                                });
                                lFirst.forEach(function (L) {
                                    rowsL.push({ building_name: L[""BUILDING_NAME""], building_address: L[""BUILDING_ADDRESS""], building_action: `<i class=\""fa fa-eye mr-5 \"" data-lng=""${L[""LNG""]}"" data-lat=""${L[""LAT""]}"" data-bounds=""${L[""BOUNDS""]}"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""getPoiDetail2(this);""></i><");
                WriteLiteral(@"i class=\""fa fa-edit mr-5 \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""editPoi2(this);""></i><i class=\""fa fa-trash-o \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""deletePoi2(this);""></i>` });
                                });
                                $('#dg').datagrid('loadData', getData(rowsXQ));
                                $('#dg2').datagrid('loadData', getData(rowsL));

                            },
                            error: function (item, err) {
                                console.log(err);
                            }
                        });
                    } else {
                         map.clearMap();
                        var city = $(""#selectCity"").find(""option:selected"").text();
                                    $.ajax({
                                type: ""get"",
                                url: `https://restapi.amap.com/v3/geocode/geo?key=c7aeb11746b35a92b7b6eee3178a05e4&address=${city}&city=`,
                                contentTyp");
                WriteLiteral(@"e: ""application/json; charset=utf-8"",
                                dataType: ""json"",
                            success: function (data) {
                                var lnglat = data[""geocodes""][0][""location""];
                                lng = Number(lnglat.split("","")[0]);
                                lat = Number(lnglat.split("","")[1]);
                                map.setCenter([lng, lat]);
                                map.setZoom(17);

                            },
                            error: function () {
                                console.log('error');
                            }
                                });
                        $.ajax({
                            type: ""get"",
                            url: `./api/IndexByCity?city=${city}`,
                            contentType: ""application/json; charset=utf-8"",
                            dataType: ""json"",
                            success: function (data) {
                    ");
                WriteLiteral(@"           
                    
                                        var xq = data[0][""ds""];
                                var l = data[1][""ds""];
                                var lFirst = data[2][""ds""];
                                var rowsXQ = [];
                                var rowsL = [];
                                xq.forEach(function (XQ) {
                                    if (XQ[""VILLAGE_BOUNDS""] !== ""null"") {
                                        var polygon = new AMap.Polygon({
                                            strokeColor: ""#2828FF"",
                                            fillOpacity: 0,
                                            bubble: true,
                                            strokeWeight: 1,
                                            path: JSON.parse(XQ[""VILLAGE_BOUNDS""]),
                                            map: map
                                        });

                                        var polylineEditor = ");
                WriteLiteral(@"new AMap.PolyEditor(map, polygon);
                                        polygon.setExtData({ ""editor"": polylineEditor });


                                    }
                                      var hasBounds = ""无"";
                            if (XQ[""VILLAGE_BOUNDS""] !== null) {
                                hasBounds = ""有"";
                            }
                                    rowsXQ.push({ village_name: XQ[""VILLAGE_NAME""], village_address: XQ[""VILLAGE_ADDRESS""], village_region: XQ[""VILLAGE_REGION""], village_type: XQ[""VILLAGE_TYPE""], village_count: XQ[""VILLAGE_COUNT""],village_hasBounds: hasBounds,village_action: `<i class=""fa fa-eye mr-5"" data-lng=""${XQ[""VILLAGE_LNG""]}"" data-lat=""${XQ[""VILLAGE_LAT""]}"" data-bounds=""${XQ[""VILLAGE_BOUNDS""]}"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""getPoiDetail(this);""></i><i class=""fa fa-edit mr-5"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""editPoi(this);""></i><i class=""fa fa-trash-o"" data-guid=""${XQ[""VILLAGE_ID""]}"" onclick=""deletePoi(this);""></i>");
                WriteLiteral(@"`, village_lng: XQ[""VILLAGE_LNG""], village_lat: XQ[""VILLAGE_LAT""] });

                                });


                                l.forEach(function (L) {
                                    var icon = new AMap.Icon({
                                        size: new AMap.Size(15, 15),
                                        image: './icons/circle.png',  // Icon的图像
                                        imageSize: new AMap.Size(15, 15)
                                    });
                                    var marker = new AMap.Marker({
                                        position: new AMap.LngLat(L[""LNG""], L[""LAT""]),   // 经纬度对象，也可以是经纬度构成的一维数组[116.39, 39.9]
                                        title: L[""BUILDING_NAME""],
                                        icon: icon // 添加 Icon 图标 URL
                                    });
                                    map.add(marker);


                                });
                                lFirst.forEach(func");
                WriteLiteral(@"tion (L) {
                                    rowsL.push({ building_name: L[""BUILDING_NAME""], building_address: L[""BUILDING_ADDRESS""], building_action: `<i class=\""fa fa-eye mr-5 \"" data-lng=""${L[""LNG""]}"" data-lat=""${L[""LAT""]}"" data-bounds=""${L[""BOUNDS""]}"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""getPoiDetail2(this);""></i><i class=\""fa fa-edit mr-5 \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""editPoi2(this);""></i><i class=\""fa fa-trash-o \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""deletePoi2(this);""></i>` });
                                });
                                $('#dg').datagrid('loadData', getData(rowsXQ));
                                $('#dg2').datagrid('loadData', getData(rowsL));
                            },
                            error: function (item, err) {
                console.log(err);
            }
                        });
                    }
                })
            },
            error: function (item, err) {
                console.log(err);
 ");
                WriteLiteral(@"           }
        });




        function createTables() {
            
            var htmlTable1 = '<table id=""dg"" style=""width:70%;height:300px"" data-options=""fitColumns:true,rownumbers:false,singleSelect:true,autoRowHeight:false,pagination:true,pageSize:10""><thead><tr><th field=""village_name"" width=""80"" align=""center"">小区名称</th><th field=""village_address"" width=""100"" align=""center"">地址</th><th field=""village_region"" width=""80"" align=""center"">区域</th><th field=""village_type"" width=""80"" align=""center"">类型</th><th field=""village_count"" width=""80"" align=""center"">楼宇数</th><th field=""village_hasBounds"" width=""80"" align=""center"">边界</th><th field=""village_action"" width=""80"" align=""center"">操作</th><th field=""village_id"" align=""center"" hidden=""true"">village_id</th><th field=""village_lng"" align=""center"" hidden=""true"">经度</th><th field=""village_lat"" align=""center"" hidden=""true"">纬度</th></tr></thead></table>';
            var htmlTB1 = '<div id=""tb"" class=""flex sb aic"" style=""padding: 10px;""><span class=""bb-light");
                WriteLiteral(@"blue pb-5px"">小区信息</span><div class=""flex aic""><input type=""text"" placeholder=""输入小区名称检索"" class=""mr-10 pd-5px bd2-lightblue"" /><i id=""inputSearchIcon"" class=""fa fa-search cr-lightblue"" onclick=""searchVillage(this)""></i><div class=""mr-10""><i class=""fa fa-file-o cr-lightblue"" onclick=""newVillage(this)""></i><span> 新建小区</span></div><div><i class=""fa fa-download cr-lightblue"" onclick=""getVillage(this)"" id=""getVillage""></i><span> 更新本地数据</span></div></div></div>';
            var htmlTable2 = '<table id=""dg2"" style=""width:30%;height:300px"" data-options=""fitColumns:true,rownumbers:false,singleSelect:true,autoRowHeight:false,pagination:true,pageSize:10""><thead><tr><th field=""building_name"" width=""80"" align=""center"">楼宇号</th><th field=""building_address"" width=""100"" align=""center"">详细地址（蓝牌地址码)</th><th field=""building_action"" width=""80"" align=""center"">操作</th></tr></thead></table>';
            var htmlTB2 = '<div id=""tb2"" class=""flex sb aic"" style=""padding: 10px;""><span class=""bb-lightblue pb-5px"">楼宇信息</span><div class=""fl");
                WriteLiteral(@"ex aic""><input type=""text"" placeholder=""输入楼宇号检索"" class=""mr-10 pd-5px bd2-lightblue"" /><i id=""inputSearchIcon"" class=""fa fa-search cr-lightblue"" onclick=""searchBuilding(this)""></i><div class=""mr-10""><i class=""fa fa-file-o cr-lightblue"" onclick=""newBuilding(this)""></i><span> 新建楼宇</span></div><div><i class=""fa fa-download cr-lightblue"" onclick=""getBuilding(this)""></i><span> 更新本地数据</span></div></div></div>';
            document.getElementById(""footer"").innerHTML += htmlTable1 + htmlTB1 + htmlTable2 + htmlTB2;
            
            // { data: getData(d) }
            $(function () {
                $('#dg').datagrid({ toolbar: ""#tb"" }).datagrid({
                    onClickRow: function (index, row) {

                        for (var i = 0; i < document.getElementsByClassName(""modalSmall"").length; i++) {
                            document.getElementsByClassName(""modalSmall"")[i].remove();
                        }
                        console.log('clicked first');
                        mouse");
                WriteLiteral(@"tool.close(true);
                        document.getElementsByTagName(""body"")[0].setAttribute(""data-currentIndex"", index);
                        var overlays = map.getAllOverlays(""polygon"");
                        overlays.forEach(function (overlay) {
                            overlay.setOptions({
                                strokeColor: ""#2828FF""
                            });
                        });
                        var string = row[""village_action""];
                        var demo = document.createElement('div');
                        demo.innerHTML = string;
                        var lng = Number(demo.children[0].getAttribute(""data-lng""));
                        var lat = Number(demo.children[0].getAttribute(""data-lat""));
                        var bounds = demo.children[0].getAttribute(""data-bounds"");
                        var dataGuid = demo.children[0].getAttribute(""data-guid"");
                        console.log(lng);
                        console.lo");
                WriteLiteral(@"g(lat);
                        map.setCenter([lng, lat]);
                        map.setZoom(18);
                        if (bounds !== ""null"") {
                            var overlays2 = map.getAllOverlays(""polygon"");
                            overlays2.forEach(function (overlay) {
                                var bounds2 = ""["";
                                overlay.getPath().forEach(function (coord) {
                                    var lng = coord[""lng""];
                                    var lat = coord[""lat""];
                                    bounds2 += `[${String(lng)},${String(lat)}],`;
                                });
                                bounds2 = bounds2.slice(0, bounds2.length - 1);
                                bounds2 += ""]"";
                                if (bounds === bounds2) {
                                    overlay.setOptions({
                                        strokeColor: ""#D00000""
                                    });
  ");
                WriteLiteral(@"                              }
                            });
                        }
                        //document.getElementsByClassName('panel')[1].remove();
                        $.ajax({
                            type: ""get"",
                            url: `./API/VillageBuildings?id=${dataGuid}`,
                            contentType: ""application/json; charset=utf-8"",
                            dataType: ""json"",
                            success: function (data) {
                                rowsL = [];
                                data[""ds""].forEach(function (L) {
                                    rowsL.push({ building_name: L[""BUILDING_NAME""], building_address: L[""BUILDING_ADDRESS""], building_action: `<i class=\""fa fa-eye mr-5 \"" data-lng=""${L[""LNG""]}"" data-lat=""${L[""LAT""]}"" data-bounds=""${L[""BOUNDS""]}"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""getPoiDetail2(this);""></i><i class=\""fa fa-edit mr-5 \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""editPoi2(this);""></i><");
                WriteLiteral(@"i class=\""fa fa-trash-o \"" data-guid=""${L[""BUILDING_ID""]}"" onclick=""deletePoi2(this);""></i>` });
                                });

                                $(function () {
                                    $('#dg2').datagrid('loadData', getData(rowsL));
                                });
                            },
                            error: function (item, err) {
                                console.log(err);
                            }
                        });
                        // get related buildings through api and use json to build table to right and attach events also remove old table to right
                        // extract record location and guid, relocate map to location, remove buildings table from dom,
                        // sned request to api to get related buildings in json string form and use it to build
                        // a new table and bind events to it
                    }
                }).datagrid('clientPaging').dat");
                WriteLiteral(@"agrid('highlightRow', 0);

                $('#dg2').datagrid({ toolbar: ""#tb2"" }).datagrid({
                    onClickRow: function (index, row) {
                        for (var i = 0; i < document.getElementsByClassName(""modalSmall"").length; i++) {
                            document.getElementsByClassName(""modalSmall"")[i].remove();
                        }
                        mousetool.close(true);

                        console.log('clicked');
                        document.getElementsByTagName(""body"")[0].setAttribute(""data-currentIndex"", index);
                        var markers = map.getAllOverlays(""marker"");
                        markers.forEach(function (marker) {
                            //marker.setOptions({
                            //    fillColor:'rgba(0,0,255,1)'
                            //});

                            var icon = new AMap.Icon({
                                size: new AMap.Size(15, 15),
                                image: './i");
                WriteLiteral(@"cons/circle.png', // Icon的图像
                                imageSize: new AMap.Size(15, 15)
                            });
                            marker.setIcon(icon);
                        });
                        var string = row[""building_action""];
                        var demo = document.createElement('div');
                        demo.innerHTML = string;
                        var lng = Number(demo.children[0].getAttribute(""data-lng""));
                        var lat = Number(demo.children[0].getAttribute(""data-lat""));
                        //var markers2 = map.getAllOverlays(""circle"");

                        markers.forEach(function (marker) {
                            if (marker.getPosition()[""lng""] == lng && marker.getPosition()[""lat""] == lat) {
                                var icon = new AMap.Icon({
                                    size: new AMap.Size(15, 15),
                                    image: './icons/circle1.png', // Icon的图像
                ");
                WriteLiteral(@"                    imageSize: new AMap.Size(15, 15)
                                });
                                marker.setIcon(icon);
                            }
                        });
                        //markers2.forEach(function (marker) {
                        //     if (marker.getCenter()[""lng""] == lng && marker.getCenter()[""lat""] == lat) {
                        //             marker.setOptions({
                        //        fillColor:'rgba(0,255,0,1)'
                        //    });
                        //            //marker.setIcon('https://a.amap.com/jsapi_demos/static/demo-center/icons/poi-marker-red.png');
                        //        }
                        //    });
                        map.setCenter([lng, lat]);
                        map.setZoom(18);
                    }
                }).datagrid('clientPaging').datagrid('highlightRow', 0);
                $('.datagrid-pager.pagination').pagination({
                    displayM");
                WriteLiteral(@"sg: ""显示 {total} 条 中 {from} 到 {to} 条""
                });
            });
            // switchRegion();
        }

        createTables();
        setTimeout(function () {
            document.getElementsByClassName('panel-body-noheader')[0].classList.add(""w-100p"");
            var container = document.createElement('div');
            container.setAttribute(""id"", ""buttonOpenClose"");
            container.innerHTML += `<span class=""bb-lightblue pb-5px mr-20"">是否显示小区边界</span><button type=""button"" class=""layui-btn layui-btn-radius layui-btn-normal layui-btn-sm"" onclick=""openPois(this);"" disabled>是 <i class=""fa fa-check""></i></button><button type=""button"" class=""layui-btn layui-btn-primary layui-btn-radius layui-btn-sm"" onclick=""closePois(this);"">否</button>`;
            //document.getElementsByTagName(""body"")[0].appendChild(container);
            document.getElementsByClassName('panel')[1].appendChild(container);
 },5000)
    </script>



");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(198031, 11, true);
            WriteLiteral("\r\n</html>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
